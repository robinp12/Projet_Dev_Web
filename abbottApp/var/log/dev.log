[2020-03-09T22:26:07.337136+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /"" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2020-03-09T22:26:08.148317+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8f71d2"},"request_uri":"http://127.0.0.1:8000/_wdt/8f71d2","method":"GET"} []
[2020-03-09T22:26:08.754383+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /"" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2020-03-09T22:26:09.148507+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"44561a"},"request_uri":"http://127.0.0.1:8000/_wdt/44561a","method":"GET"} []
[2020-03-09T22:33:27.877471+01:00] console.ERROR: Error thrown while running command "make:entity Conference". Message: "Aborted." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\RuntimeException(code: 0): Aborted. at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/console/Helper/QuestionHelper.php:137)","command":"make:entity Conference","message":"Aborted."} []
[2020-03-09T22:33:27.886831+01:00] console.DEBUG: Command "make:entity Conference" exited with code "1" {"command":"make:entity Conference","code":1} []
[2020-03-09T22:33:55.650786+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-09T22:33:55.657562+01:00] doctrine.DEBUG: CREATE TABLE migration_versions (version VARCHAR(14) NOT NULL, executed_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-03-09T22:33:55.739197+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-09T22:33:55.741088+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-09T22:33:55.744599+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-09T22:33:55.747689+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-09T22:33:55.749695+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-09T22:34:06.095851+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-09T22:34:06.097136+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-09T22:34:06.101751+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-09T22:34:06.102247+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-09T22:34:06.103945+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-09T22:34:06.104734+01:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-09T22:34:07.593385+01:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355') ORDER BY version DESC LIMIT 1 [] []
[2020-03-09T22:34:07.597649+01:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-09T22:34:07.604858+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-09T22:34:07.648538+01:00] doctrine.DEBUG: CREATE TABLE conference (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, description LONGTEXT DEFAULT NULL, hour_start TIME NOT NULL, hour_end TIME DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-03-09T22:34:07.735863+01:00] doctrine.DEBUG: INSERT INTO migration_versions (version, executed_at) VALUES (?, ?) ["20200309213355","2020-03-09 21:34:07"] []
[2020-03-09T22:34:07.748362+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-09T22:39:45.602706+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2020-03-09T22:39:45.634030+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T22:39:46.507464+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3d694b"},"request_uri":"http://127.0.0.1:8000/_wdt/3d694b","method":"GET"} []
[2020-03-09T22:45:19.866422+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/conferences","method":"GET"} []
[2020-03-09T22:45:19.909059+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-09T22:45:19.913453+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-09T22:45:19.916990+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T22:48:55.239342+01:00] request.INFO: Matched route "api_conferences_post_collection". {"route":"api_conferences_post_collection","route_parameters":{"_route":"api_conferences_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"post"},"request_uri":"http://127.0.0.1:8000/api/conferences?description=description%20test1&hourStart=2020-03-09T21%3A42%3A40&name_=test1","method":"POST"} []
[2020-03-09T22:48:55.240281+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T22:48:55.242296+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\UnsupportedMediaTypeHttpException: "The content-type "" is not supported. Supported MIME types are "application/ld+json", "application/json", "text/html"." at /home/simon/Bureau/devWeb/abbottApp/vendor/api-platform/core/src/EventListener/DeserializeListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\UnsupportedMediaTypeHttpException(code: 0): The content-type \"\" is not supported. Supported MIME types are \"application/ld+json\", \"application/json\", \"text/html\". at /home/simon/Bureau/devWeb/abbottApp/vendor/api-platform/core/src/EventListener/DeserializeListener.php:135)"} []
[2020-03-09T22:50:17.125564+01:00] request.INFO: Matched route "api_conferences_post_collection". {"route":"api_conferences_post_collection","route_parameters":{"_route":"api_conferences_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"post"},"request_uri":"http://127.0.0.1:8000/api/conferences?description=description%20test1&hourStart=2020-03-09T21%3A42%3A40.799Z&name_=test1","method":"POST"} []
[2020-03-09T22:50:17.126913+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T22:50:17.128617+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\UnsupportedMediaTypeHttpException: "The content-type "" is not supported. Supported MIME types are "application/ld+json", "application/json", "text/html"." at /home/simon/Bureau/devWeb/abbottApp/vendor/api-platform/core/src/EventListener/DeserializeListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\UnsupportedMediaTypeHttpException(code: 0): The content-type \"\" is not supported. Supported MIME types are \"application/ld+json\", \"application/json\", \"text/html\". at /home/simon/Bureau/devWeb/abbottApp/vendor/api-platform/core/src/EventListener/DeserializeListener.php:135)"} []
[2020-03-09T22:59:57.789289+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-09T22:59:57.831646+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-09T22:59:57.894995+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-09T23:00:51.429179+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-09T23:00:51.464220+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-09T23:00:51.479973+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Loiseau-les-Bains","2":"Ad nobis nobis et nihil nu [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.480322+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Tanguy","2":"Non magnam voluptatibus es [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.480518+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Wagner","2":"Suscipit cupiditate volupt [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.480859+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Techer","2":"Et possimus praesentium qu [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.481014+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Boyer-la-Forêt","2":"Autem dolorum in facere vo [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.481162+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Huetnec","2":"Doloribus aliquam omnis ap [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.481300+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Carre","2":"Iste ut assumenda blanditi [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.481434+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Hernandez","2":"Tempora nostrum facilis eo [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.481608+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Hamel-la-Forêt","2":"Ut consequuntur quia elige [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.481811+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Robindan","2":"Optio corporis voluptatem  [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.482369+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-09T23:01:25.136147+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/conferences","method":"GET"} []
[2020-03-09T23:01:25.182949+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-09T23:01:25.189064+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-09T23:01:25.191502+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:14:39.823586+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:14:39.853224+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:14:39.942314+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d0846c"},"request_uri":"http://127.0.0.1:8000/_wdt/d0846c","method":"GET"} []
[2020-03-09T23:15:36.333889+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:15:36.343791+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:15:36.400933+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"911bbd"},"request_uri":"http://127.0.0.1:8000/_wdt/911bbd","method":"GET"} []
[2020-03-09T23:16:16.746023+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:16:16.756587+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:16:16.814835+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dfd589"},"request_uri":"http://127.0.0.1:8000/_wdt/dfd589","method":"GET"} []
[2020-03-09T23:16:17.877543+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:16:17.884045+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:16:17.937314+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"084fef"},"request_uri":"http://127.0.0.1:8000/_wdt/084fef","method":"GET"} []
[2020-03-09T23:16:40.431028+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:16:40.440013+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:16:40.498647+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"199580"},"request_uri":"http://127.0.0.1:8000/_wdt/199580","method":"GET"} []
[2020-03-09T23:17:02.051070+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:17:02.056856+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:17:02.105251+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"50c912"},"request_uri":"http://127.0.0.1:8000/_wdt/50c912","method":"GET"} []
[2020-03-09T23:19:16.377140+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:19:16.385039+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:19:16.436284+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /build/app.css" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /build/app.css\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/build/app.css/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-09T23:19:16.499068+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8d2c94"},"request_uri":"http://127.0.0.1:8000/_wdt/8d2c94","method":"GET"} []
[2020-03-09T23:20:22.013059+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:20:22.018049+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:20:22.084249+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"13ab14"},"request_uri":"http://127.0.0.1:8000/_wdt/13ab14","method":"GET"} []
[2020-03-09T23:24:52.333459+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:24:52.343378+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:24:52.411928+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ce8982"},"request_uri":"http://127.0.0.1:8000/_wdt/ce8982","method":"GET"} []
[2020-03-09T23:24:58.361820+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:24:58.367247+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:24:58.456156+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4befa4"},"request_uri":"http://127.0.0.1:8000/_wdt/4befa4","method":"GET"} []
[2020-03-09T23:26:36.766847+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-09T23:26:36.771377+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:26:36.879403+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d5d378"},"request_uri":"http://localhost:8000/_wdt/d5d378","method":"GET"} []
[2020-03-09T23:26:36.945825+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://localhost:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://localhost:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-09T23:27:28.657583+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-09T23:27:28.661785+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:27:28.753351+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"41d42d"},"request_uri":"http://localhost:8000/_wdt/41d42d","method":"GET"} []
[2020-03-09T23:28:24.729794+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-09T23:28:24.734905+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:28:48.832523+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-09T23:28:48.838401+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:28:51.709282+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-09T23:28:51.715261+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:29:59.984588+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-09T23:30:00.032493+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:33:37.464510+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-09T23:33:37.476729+01:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Could not find the entrypoints file from Webpack: the file "/home/simon/Bureau/devWeb/abbottApp/public/build/entrypoints.json" does not exist.")." at /home/simon/Bureau/devWeb/abbottApp/templates/app/index.html.twig line 6 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Could not find the entrypoints file from Webpack: the file \"/home/simon/Bureau/devWeb/abbottApp/public/build/entrypoints.json\" does not exist.\"). at /home/simon/Bureau/devWeb/abbottApp/templates/app/index.html.twig:6)\n[previous exception] [object] (InvalidArgumentException(code: 0): Could not find the entrypoints file from Webpack: the file \"/home/simon/Bureau/devWeb/abbottApp/public/build/entrypoints.json\" does not exist. at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/webpack-encore-bundle/src/Asset/EntrypointLookup.php:124)"} []
[2020-03-09T23:33:37.531393+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:33:37.853872+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"63e8f3"},"request_uri":"http://localhost:8000/_wdt/63e8f3","method":"GET"} []
[2020-03-09T23:33:46.942619+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-09T23:33:46.952668+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:33:59.449946+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:33:59.454236+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:34:29.495275+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:34:29.504624+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:35:09.027176+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:35:09.064278+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:35:09.148155+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7189c8"},"request_uri":"http://127.0.0.1:8000/_wdt/7189c8","method":"GET"} []
[2020-03-09T23:35:09.754522+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:35:09.766180+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:35:09.873273+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"26426d"},"request_uri":"http://127.0.0.1:8000/_wdt/26426d","method":"GET"} []
[2020-03-09T23:35:19.647521+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:35:19.659549+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:35:19.743923+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"743f05"},"request_uri":"http://127.0.0.1:8000/_wdt/743f05","method":"GET"} []
[2020-03-09T23:35:20.915148+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:35:20.926597+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:35:21.014367+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c43047"},"request_uri":"http://127.0.0.1:8000/_wdt/c43047","method":"GET"} []
[2020-03-09T23:35:21.617357+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:35:21.635140+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:35:21.739816+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"42a7c7"},"request_uri":"http://127.0.0.1:8000/_wdt/42a7c7","method":"GET"} []
[2020-03-09T23:35:32.948504+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:35:32.956825+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:35:50.502074+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:35:50.526444+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:35:51.951813+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:35:51.964877+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:36:04.664887+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:36:04.682282+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:36:04.773080+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4378aa"},"request_uri":"http://127.0.0.1:8000/_wdt/4378aa","method":"GET"} []
[2020-03-09T23:36:05.431629+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:36:05.441855+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:36:05.551011+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4bb19a"},"request_uri":"http://127.0.0.1:8000/_wdt/4bb19a","method":"GET"} []
[2020-03-09T23:36:19.618062+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:36:19.626706+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:36:19.714052+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2fde7d"},"request_uri":"http://127.0.0.1:8000/_wdt/2fde7d","method":"GET"} []
[2020-03-09T23:36:38.388227+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:36:38.399032+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:39:58.576562+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:39:58.590311+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:39:58.678512+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3e0a15"},"request_uri":"http://127.0.0.1:8000/_wdt/3e0a15","method":"GET"} []
[2020-03-09T23:41:06.053980+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:41:06.059758+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:41:29.233733+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:41:29.242613+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:41:29.373817+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"150b0d"},"request_uri":"http://127.0.0.1:8000/_wdt/150b0d","method":"GET"} []
[2020-03-09T23:44:40.983143+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:44:40.987890+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:44:41.064891+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"88dcf5"},"request_uri":"http://127.0.0.1:8000/_wdt/88dcf5","method":"GET"} []
[2020-03-09T23:44:56.852591+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:44:56.859965+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:44:56.931353+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3886c5"},"request_uri":"http://127.0.0.1:8000/_wdt/3886c5","method":"GET"} []
[2020-03-09T23:44:57.759193+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:44:57.765456+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:44:57.843551+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"551605"},"request_uri":"http://127.0.0.1:8000/_wdt/551605","method":"GET"} []
[2020-03-09T23:47:26.723113+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:47:26.728231+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:48:22.969637+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:48:22.977604+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:48:24.059927+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:48:24.072773+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:48:26.805467+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:48:26.814086+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:49:11.543072+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:49:11.551999+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:49:11.769718+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"234137"},"request_uri":"http://127.0.0.1:8000/_wdt/234137","method":"GET"} []
[2020-03-09T23:58:46.237081+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:58:46.243182+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:58:46.352819+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0f028f"},"request_uri":"http://127.0.0.1:8000/_wdt/0f028f","method":"GET"} []
[2020-03-09T23:58:50.631159+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:58:50.641261+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:58:50.738791+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2a5b7d"},"request_uri":"http://127.0.0.1:8000/_wdt/2a5b7d","method":"GET"} []
[2020-03-10T00:00:24.198079+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T00:00:24.203971+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T00:00:24.284041+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"514124"},"request_uri":"http://127.0.0.1:8000/_wdt/514124","method":"GET"} []
[2020-03-10T00:00:25.081448+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T00:00:25.091497+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T00:00:25.177050+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"de6d4b"},"request_uri":"http://127.0.0.1:8000/_wdt/de6d4b","method":"GET"} []
[2020-03-10T00:00:46.810460+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T00:00:46.814701+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T00:00:46.892582+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"038d92"},"request_uri":"http://127.0.0.1:8000/_wdt/038d92","method":"GET"} []
[2020-03-10T00:01:31.712923+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T00:01:31.722385+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T00:01:31.799542+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c0a369"},"request_uri":"http://127.0.0.1:8000/_wdt/c0a369","method":"GET"} []
[2020-03-10T00:03:39.299179+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T00:03:39.305566+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T00:03:39.398199+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1e783b"},"request_uri":"http://localhost:8000/_wdt/1e783b","method":"GET"} []
[2020-03-10T00:03:43.502802+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T00:03:43.507755+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T00:03:43.580722+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7d498e"},"request_uri":"http://localhost:8000/_wdt/7d498e","method":"GET"} []
[2020-03-10T00:03:56.896865+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T00:03:56.905359+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T00:03:57.005121+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f06632"},"request_uri":"http://localhost:8000/_wdt/f06632","method":"GET"} []
[2020-03-10T13:51:25.588454+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:51:25.658971+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:51:25.768320+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"80c060"},"request_uri":"http://127.0.0.1:8000/_wdt/80c060","method":"GET"} []
[2020-03-10T13:51:25.876731+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-10T13:52:12.761135+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:52:12.766564+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:52:12.860934+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4c4ddf"},"request_uri":"http://127.0.0.1:8000/_wdt/4c4ddf","method":"GET"} []
[2020-03-10T13:52:27.003977+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:52:27.010137+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:52:27.138121+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4d119b"},"request_uri":"http://127.0.0.1:8000/_wdt/4d119b","method":"GET"} []
[2020-03-10T13:52:31.534663+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:52:31.539271+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:52:31.639245+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b840e4"},"request_uri":"http://127.0.0.1:8000/_wdt/b840e4","method":"GET"} []
[2020-03-10T13:53:23.388241+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:53:23.394445+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:53:23.497890+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d94da6"},"request_uri":"http://127.0.0.1:8000/_wdt/d94da6","method":"GET"} []
[2020-03-10T13:54:06.940797+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:54:06.945391+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:54:07.023400+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9ea5fe"},"request_uri":"http://127.0.0.1:8000/_wdt/9ea5fe","method":"GET"} []
[2020-03-10T13:54:19.825476+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:54:19.830764+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:54:19.923354+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"34e54f"},"request_uri":"http://127.0.0.1:8000/_wdt/34e54f","method":"GET"} []
[2020-03-10T13:58:38.853090+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:58:38.899866+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:58:39.014323+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e1b327"},"request_uri":"http://127.0.0.1:8000/_wdt/e1b327","method":"GET"} []
[2020-03-10T13:58:47.815395+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:58:47.819113+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:58:47.923693+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"87ac40"},"request_uri":"http://127.0.0.1:8000/_wdt/87ac40","method":"GET"} []
[2020-03-10T13:59:02.931506+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:59:02.935275+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:59:03.024364+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b558de"},"request_uri":"http://127.0.0.1:8000/_wdt/b558de","method":"GET"} []
[2020-03-10T13:59:04.255007+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:59:04.262440+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:59:04.354460+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fd1dd7"},"request_uri":"http://127.0.0.1:8000/_wdt/fd1dd7","method":"GET"} []
[2020-03-10T13:59:04.871192+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:59:04.883733+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:59:04.987778+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ae852a"},"request_uri":"http://127.0.0.1:8000/_wdt/ae852a","method":"GET"} []
[2020-03-10T13:59:10.926414+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:59:10.930155+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:59:11.020806+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"22fc2c"},"request_uri":"http://127.0.0.1:8000/_wdt/22fc2c","method":"GET"} []
[2020-03-10T13:59:11.778559+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:59:11.789837+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:59:11.884874+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2c144d"},"request_uri":"http://127.0.0.1:8000/_wdt/2c144d","method":"GET"} []
[2020-03-10T14:04:26.473175+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T14:04:26.480450+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T14:04:26.595523+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a2d9db"},"request_uri":"http://127.0.0.1:8000/_wdt/a2d9db","method":"GET"} []
[2020-03-10T14:22:37.247511+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://10.4.16.161:8000/","method":"GET"} []
[2020-03-10T14:22:37.253429+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T17:38:55.468794+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T17:38:55.535406+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T17:38:55.638033+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fb7961"},"request_uri":"http://127.0.0.1:8000/_wdt/fb7961","method":"GET"} []
[2020-03-10T17:38:55.728025+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-10T17:40:03.772840+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T17:40:03.778162+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T17:40:03.864727+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8a2b90"},"request_uri":"http://127.0.0.1:8000/_wdt/8a2b90","method":"GET"} []
[2020-03-10T17:41:05.566106+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T17:41:05.610835+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T17:41:05.709555+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"99180c"},"request_uri":"http://127.0.0.1:8000/_wdt/99180c","method":"GET"} []
[2020-03-10T17:41:09.371760+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T17:41:09.376462+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T17:41:09.464914+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9b3f6e"},"request_uri":"http://127.0.0.1:8000/_wdt/9b3f6e","method":"GET"} []
[2020-03-10T17:41:15.837847+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T17:41:15.845910+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T17:41:15.926025+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e86f92"},"request_uri":"http://127.0.0.1:8000/_wdt/e86f92","method":"GET"} []
[2020-03-10T21:11:08.341562+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:11:08.460677+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:11:08.619871+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2022b9"},"request_uri":"http://127.0.0.1:8000/_wdt/2022b9","method":"GET"} []
[2020-03-10T21:11:08.943478+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-10T21:11:25.917520+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:11:25.926303+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:11:26.057467+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bed79e"},"request_uri":"http://127.0.0.1:8000/_wdt/bed79e","method":"GET"} []
[2020-03-10T21:11:27.162650+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:11:27.175604+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:11:27.288264+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d285c2"},"request_uri":"http://127.0.0.1:8000/_wdt/d285c2","method":"GET"} []
[2020-03-10T21:11:27.895230+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:11:27.910086+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:11:28.028592+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"41b318"},"request_uri":"http://127.0.0.1:8000/_wdt/41b318","method":"GET"} []
[2020-03-10T21:11:34.663807+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:11:34.678791+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:11:34.793751+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"32c8bd"},"request_uri":"http://127.0.0.1:8000/_wdt/32c8bd","method":"GET"} []
[2020-03-10T21:21:44.412592+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:21:44.421059+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:21:44.539304+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5bd277"},"request_uri":"http://127.0.0.1:8000/_wdt/5bd277","method":"GET"} []
[2020-03-10T21:21:45.362112+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:21:45.366814+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:21:45.444989+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4d3205"},"request_uri":"http://127.0.0.1:8000/_wdt/4d3205","method":"GET"} []
[2020-03-10T21:25:21.999689+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:25:22.006991+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:25:22.133252+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"36f6ad"},"request_uri":"http://127.0.0.1:8000/_wdt/36f6ad","method":"GET"} []
[2020-03-10T21:25:29.726271+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:25:29.732513+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:25:29.870610+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3eb43a"},"request_uri":"http://127.0.0.1:8000/_wdt/3eb43a","method":"GET"} []
[2020-03-10T21:25:45.935652+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:25:45.939472+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:25:46.027828+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b2e618"},"request_uri":"http://127.0.0.1:8000/_wdt/b2e618","method":"GET"} []
[2020-03-10T21:25:55.589894+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T21:25:55.598739+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:25:55.760223+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f37c58"},"request_uri":"http://localhost:8000/_wdt/f37c58","method":"GET"} []
[2020-03-10T21:25:55.790541+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://localhost:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://localhost:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-10T21:26:40.524250+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T21:26:40.528875+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:26:40.635982+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"58c7e4"},"request_uri":"http://localhost:8000/_wdt/58c7e4","method":"GET"} []
[2020-03-10T21:26:44.952798+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T21:26:44.962037+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:26:45.056767+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5a5738"},"request_uri":"http://localhost:8000/_wdt/5a5738","method":"GET"} []
[2020-03-10T21:29:04.352145+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T21:29:04.356687+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:29:04.483376+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"486fd3"},"request_uri":"http://localhost:8000/_wdt/486fd3","method":"GET"} []
[2020-03-10T21:29:10.757693+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T21:29:10.762219+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:29:10.861825+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a92982"},"request_uri":"http://localhost:8000/_wdt/a92982","method":"GET"} []
[2020-03-10T21:29:11.748699+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T21:29:11.760741+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:29:11.854838+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"55fe46"},"request_uri":"http://localhost:8000/_wdt/55fe46","method":"GET"} []
[2020-03-10T21:29:12.702562+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T21:29:12.709920+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:29:12.800960+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"96487d"},"request_uri":"http://localhost:8000/_wdt/96487d","method":"GET"} []
[2020-03-10T21:34:39.446258+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T21:34:39.450356+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:34:39.534755+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8c8946"},"request_uri":"http://localhost:8000/_wdt/8c8946","method":"GET"} []
[2020-03-10T21:34:40.347021+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T21:34:40.352715+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:34:40.449714+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0f5952"},"request_uri":"http://localhost:8000/_wdt/0f5952","method":"GET"} []
[2020-03-10T22:28:27.948887+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T22:28:27.998227+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T22:30:24.110134+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e8b57e"},"request_uri":"http://127.0.0.1:8000/_wdt/e8b57e","method":"GET"} []
[2020-03-10T22:30:24.223586+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-10T22:34:08.591621+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T22:34:08.638382+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T22:34:08.735598+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6168dc"},"request_uri":"http://127.0.0.1:8000/_wdt/6168dc","method":"GET"} []
[2020-03-10T22:34:14.165261+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T22:34:14.169240+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T22:34:14.249639+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"621dd6"},"request_uri":"http://127.0.0.1:8000/_wdt/621dd6","method":"GET"} []
[2020-03-10T22:54:57.871791+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T22:54:57.938977+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T22:54:58.264192+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4ae463"},"request_uri":"http://127.0.0.1:8000/_wdt/4ae463","method":"GET"} []
[2020-03-10T22:54:58.395695+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T22:54:58.402176+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T22:54:58.585285+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7ac8e8"},"request_uri":"http://127.0.0.1:8000/_wdt/7ac8e8","method":"GET"} []
[2020-03-10T22:59:00.398582+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T22:59:00.405681+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T22:59:00.644453+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e2cb14"},"request_uri":"http://127.0.0.1:8000/_wdt/e2cb14","method":"GET"} []
[2020-03-10T22:59:01.117905+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T22:59:01.122615+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T22:59:01.420113+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b0dbbc"},"request_uri":"http://127.0.0.1:8000/_wdt/b0dbbc","method":"GET"} []
[2020-03-10T22:59:06.722410+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T22:59:06.726795+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T22:59:06.954211+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b8bd01"},"request_uri":"http://127.0.0.1:8000/_wdt/b8bd01","method":"GET"} []
[2020-03-10T23:02:01.680535+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:02:01.688177+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:02:01.871411+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"255902"},"request_uri":"http://127.0.0.1:8000/_wdt/255902","method":"GET"} []
[2020-03-10T23:02:28.987243+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:02:28.993023+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:02:29.230998+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1ad162"},"request_uri":"http://127.0.0.1:8000/_wdt/1ad162","method":"GET"} []
[2020-03-10T23:02:41.026068+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:02:41.035622+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:02:41.316280+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"92d327"},"request_uri":"http://127.0.0.1:8000/_wdt/92d327","method":"GET"} []
[2020-03-10T23:02:41.373601+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:02:41.381502+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:02:41.633230+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2f52d3"},"request_uri":"http://127.0.0.1:8000/_wdt/2f52d3","method":"GET"} []
[2020-03-10T23:04:07.183905+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:04:07.188568+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:04:07.505800+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"111694"},"request_uri":"http://127.0.0.1:8000/_wdt/111694","method":"GET"} []
[2020-03-10T23:05:41.047228+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:05:41.054040+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:05:41.731546+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"be68f9"},"request_uri":"http://127.0.0.1:8000/_wdt/be68f9","method":"GET"} []
[2020-03-10T23:05:42.230205+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:05:42.247141+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:05:42.761856+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"75fd10"},"request_uri":"http://127.0.0.1:8000/_wdt/75fd10","method":"GET"} []
[2020-03-10T23:12:38.046283+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:12:38.054870+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:12:38.910815+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"84f61b"},"request_uri":"http://127.0.0.1:8000/_wdt/84f61b","method":"GET"} []
[2020-03-10T23:12:39.126604+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:12:39.131915+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:12:39.587764+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e32a9b"},"request_uri":"http://127.0.0.1:8000/_wdt/e32a9b","method":"GET"} []
[2020-03-10T23:17:57.690685+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:17:57.698172+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:17:58.125194+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:17:58.132930+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:17:58.369098+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7eebfd"},"request_uri":"http://127.0.0.1:8000/_wdt/7eebfd","method":"GET"} []
[2020-03-10T23:17:58.721953+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dfce29"},"request_uri":"http://127.0.0.1:8000/_wdt/dfce29","method":"GET"} []
[2020-03-10T23:18:52.069853+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:18:52.074674+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:18:52.548204+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7af570"},"request_uri":"http://127.0.0.1:8000/_wdt/7af570","method":"GET"} []
[2020-03-10T23:19:04.557268+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:19:04.563611+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:19:05.034161+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4fb916"},"request_uri":"http://127.0.0.1:8000/_wdt/4fb916","method":"GET"} []
[2020-03-10T23:19:05.912189+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:19:05.925163+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:19:06.385261+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a51bb7"},"request_uri":"http://127.0.0.1:8000/_wdt/a51bb7","method":"GET"} []
[2020-03-10T23:20:03.958755+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:20:03.967695+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:20:04.136701+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:20:04.142844+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:20:04.176746+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:20:04.182562+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:20:04.941474+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bc4db3"},"request_uri":"http://127.0.0.1:8000/_wdt/bc4db3","method":"GET"} []
[2020-03-10T23:20:04.971219+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c02214"},"request_uri":"http://127.0.0.1:8000/_wdt/c02214","method":"GET"} []
[2020-03-10T23:28:57.537619+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:28:57.545533+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:28:58.117764+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6ac2a2"},"request_uri":"http://127.0.0.1:8000/_wdt/6ac2a2","method":"GET"} []
[2020-03-10T23:29:17.685203+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:29:17.694360+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:29:18.200850+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0781e6"},"request_uri":"http://127.0.0.1:8000/_wdt/0781e6","method":"GET"} []
[2020-03-10T23:29:35.979544+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:29:35.986277+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:29:36.526244+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d95b34"},"request_uri":"http://127.0.0.1:8000/_wdt/d95b34","method":"GET"} []
[2020-03-10T23:31:29.130931+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:31:29.140755+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:31:29.666116+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"96828e"},"request_uri":"http://127.0.0.1:8000/_wdt/96828e","method":"GET"} []
[2020-03-10T23:31:31.193368+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:31:31.201940+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:31:31.840564+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d7a498"},"request_uri":"http://127.0.0.1:8000/_wdt/d7a498","method":"GET"} []
[2020-03-10T23:32:27.382266+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:32:27.392702+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:32:28.031461+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5e69c7"},"request_uri":"http://127.0.0.1:8000/_wdt/5e69c7","method":"GET"} []
[2020-03-10T23:35:11.125426+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:35:11.130502+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:35:11.642695+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cf4f12"},"request_uri":"http://127.0.0.1:8000/_wdt/cf4f12","method":"GET"} []
[2020-03-10T23:35:23.982024+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:35:23.990852+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:35:24.579459+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ebbb5a"},"request_uri":"http://127.0.0.1:8000/_wdt/ebbb5a","method":"GET"} []
[2020-03-10T23:35:44.366650+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:35:44.373875+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:35:44.663026+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:35:44.669246+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:35:45.222273+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9c77e0"},"request_uri":"http://127.0.0.1:8000/_wdt/9c77e0","method":"GET"} []
[2020-03-10T23:35:58.916650+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:35:58.923212+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:35:59.263255+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:35:59.269285+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:36:00.004453+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4bbeff"},"request_uri":"http://127.0.0.1:8000/_wdt/4bbeff","method":"GET"} []
[2020-03-10T23:36:50.529320+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:36:50.535210+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:36:51.082635+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c329d6"},"request_uri":"http://127.0.0.1:8000/_wdt/c329d6","method":"GET"} []
[2020-03-10T23:36:56.342246+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:36:56.347401+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:36:56.939460+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ca1c5"},"request_uri":"http://127.0.0.1:8000/_wdt/2ca1c5","method":"GET"} []
[2020-03-10T23:37:20.057572+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:37:20.065999+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:37:20.642138+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e776ff"},"request_uri":"http://127.0.0.1:8000/_wdt/e776ff","method":"GET"} []
[2020-03-10T23:37:53.989886+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:37:53.995380+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:37:54.556213+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1297e4"},"request_uri":"http://127.0.0.1:8000/_wdt/1297e4","method":"GET"} []
[2020-03-10T23:38:08.169742+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:38:08.180497+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:38:08.766585+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ac1904"},"request_uri":"http://127.0.0.1:8000/_wdt/ac1904","method":"GET"} []
[2020-03-10T23:38:18.763276+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:38:18.767621+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:38:18.925470+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:38:18.931547+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:38:19.627026+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8f8b05"},"request_uri":"http://127.0.0.1:8000/_wdt/8f8b05","method":"GET"} []
[2020-03-10T23:41:09.057418+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:41:09.065617+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:41:09.722247+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2580e6"},"request_uri":"http://127.0.0.1:8000/_wdt/2580e6","method":"GET"} []
[2020-03-10T23:41:46.452004+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:41:46.460634+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:41:47.003731+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0a67eb"},"request_uri":"http://127.0.0.1:8000/_wdt/0a67eb","method":"GET"} []
[2020-03-10T23:42:36.238720+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:42:36.242451+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:42:36.985208+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7dad1a"},"request_uri":"http://127.0.0.1:8000/_wdt/7dad1a","method":"GET"} []
[2020-03-10T23:43:08.753008+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:43:08.756743+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:43:09.399145+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8b88e2"},"request_uri":"http://localhost:8000/_wdt/8b88e2","method":"GET"} []
[2020-03-10T23:43:09.466397+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://localhost:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://localhost:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-10T23:43:16.966447+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:43:16.970601+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:43:17.193463+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:43:17.198043+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:43:17.698309+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"412ad3"},"request_uri":"http://localhost:8000/_wdt/412ad3","method":"GET"} []
[2020-03-10T23:44:00.165641+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:44:00.171312+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:44:00.840022+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"805f6c"},"request_uri":"http://localhost:8000/_wdt/805f6c","method":"GET"} []
[2020-03-10T23:48:44.251639+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:48:44.258294+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:48:44.927399+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5073df"},"request_uri":"http://localhost:8000/_wdt/5073df","method":"GET"} []
[2020-03-10T23:49:19.002083+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/conferences","method":"GET"} []
[2020-03-10T23:49:19.130077+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-10T23:49:19.164709+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-10T23:49:19.168728+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:51:14.860612+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:51:14.866830+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:51:15.360978+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0cc48d"},"request_uri":"http://localhost:8000/_wdt/0cc48d","method":"GET"} []
[2020-03-10T23:51:26.874661+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api/","method":"GET"} []
[2020-03-10T23:51:26.894585+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:51:27.238721+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0bb0a1"},"request_uri":"http://localhost:8000/_wdt/0bb0a1","method":"GET"} []
[2020-03-10T23:51:30.983827+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-10T23:51:31.001374+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:51:31.309654+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a32031"},"request_uri":"http://localhost:8000/_wdt/a32031","method":"GET"} []
[2020-03-10T23:51:32.224118+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences?page=1","method":"GET"} []
[2020-03-10T23:51:32.232785+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-10T23:51:32.235218+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-10T23:51:32.240546+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:53:04.322500+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-10T23:53:04.344697+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:53:04.700058+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7960ac"},"request_uri":"http://localhost:8000/_wdt/7960ac","method":"GET"} []
[2020-03-10T23:53:05.649665+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences?page=1","method":"GET"} []
[2020-03-10T23:53:05.656885+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-10T23:53:05.660627+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-10T23:53:05.663664+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:53:08.824861+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:53:08.831161+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:53:09.563326+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"210dba"},"request_uri":"http://localhost:8000/_wdt/210dba","method":"GET"} []
[2020-03-10T23:53:10.835021+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-10T23:53:10.849069+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-10T23:53:10.858116+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-10T23:53:10.862097+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:58:20.726418+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:58:20.732319+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:58:21.646478+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1a61b6"},"request_uri":"http://localhost:8000/_wdt/1a61b6","method":"GET"} []
[2020-03-10T23:58:21.668918+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-10T23:58:21.678496+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-10T23:58:21.686932+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-10T23:58:21.690666+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:59:29.631251+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:59:29.636489+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:59:29.667069+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:59:29.674338+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:59:30.210585+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c4dbaf"},"request_uri":"http://localhost:8000/_wdt/c4dbaf","method":"GET"} []
[2020-03-10T23:59:30.233098+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-10T23:59:30.241632+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-10T23:59:30.246069+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-10T23:59:30.250810+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:59:54.683213+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:59:54.692604+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:59:55.278578+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3e37cd"},"request_uri":"http://localhost:8000/_wdt/3e37cd","method":"GET"} []
[2020-03-10T23:59:55.302395+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-10T23:59:55.308965+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-10T23:59:55.312596+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-10T23:59:55.315643+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:00:07.343240+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:00:07.348053+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:00:08.048309+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7c8eb3"},"request_uri":"http://localhost:8000/_wdt/7c8eb3","method":"GET"} []
[2020-03-11T00:00:08.079649+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:00:08.087949+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:00:08.093356+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:00:08.096721+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:01:53.582162+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:01:53.587651+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:01:53.799274+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:01:53.806186+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:01:54.467099+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"be8add"},"request_uri":"http://localhost:8000/_wdt/be8add","method":"GET"} []
[2020-03-11T00:01:54.489755+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:01:54.499169+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:01:54.503693+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:01:54.506532+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:02:03.832456+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:02:03.843831+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:02:04.806329+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"25a5a4"},"request_uri":"http://localhost:8000/_wdt/25a5a4","method":"GET"} []
[2020-03-11T00:02:04.828921+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:02:04.836186+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:02:04.840088+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:02:04.844760+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:02:24.283295+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:02:24.289431+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:02:24.486361+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:02:24.493032+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:02:25.155522+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6e33b6"},"request_uri":"http://localhost:8000/_wdt/6e33b6","method":"GET"} []
[2020-03-11T00:02:25.172512+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:02:25.180752+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:02:25.186110+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:02:25.189793+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:02:56.071355+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:02:56.077070+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:02:56.916945+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"46a080"},"request_uri":"http://localhost:8000/_wdt/46a080","method":"GET"} []
[2020-03-11T00:02:56.937813+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:02:56.943492+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:02:56.946290+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:02:56.949596+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:03:41.740133+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:03:41.746300+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:03:41.947861+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:03:41.952611+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:03:42.610955+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"31601e"},"request_uri":"http://localhost:8000/_wdt/31601e","method":"GET"} []
[2020-03-11T00:03:42.635580+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:03:42.642147+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:03:42.646734+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:03:42.650079+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:04:01.915496+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:04:01.921060+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:04:02.519323+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"77911a"},"request_uri":"http://localhost:8000/_wdt/77911a","method":"GET"} []
[2020-03-11T00:04:02.560742+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:04:02.573175+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:04:02.577901+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:04:02.581997+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:05:13.263496+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:05:13.267974+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:05:13.906868+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"26b904"},"request_uri":"http://localhost:8000/_wdt/26b904","method":"GET"} []
[2020-03-11T00:05:13.936487+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:05:13.949658+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:05:13.954983+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:05:13.960518+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:05:31.487430+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:05:31.492192+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:05:32.156485+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8f4342"},"request_uri":"http://localhost:8000/_wdt/8f4342","method":"GET"} []
[2020-03-11T00:05:32.196928+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:05:32.207716+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:05:32.213794+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:05:32.218214+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:05:47.299976+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:05:47.306135+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:05:47.498994+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:05:47.518120+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:05:48.257762+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"24f0d2"},"request_uri":"http://localhost:8000/_wdt/24f0d2","method":"GET"} []
[2020-03-11T00:05:48.282198+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:05:48.289311+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:05:48.293799+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:05:48.297037+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:06:11.201503+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:06:11.209083+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:06:11.400092+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:06:11.407169+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:06:11.488242+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"56313e"},"request_uri":"http://localhost:8000/_wdt/56313e","method":"GET"} []
[2020-03-11T00:06:11.626765+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"561561"},"request_uri":"http://localhost:8000/_wdt/561561","method":"GET"} []
[2020-03-11T00:06:11.680604+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:06:11.687333+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:06:11.691205+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:06:11.694605+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:08:01.774522+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:08:01.778229+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:08:01.934031+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"627fb0"},"request_uri":"http://localhost:8000/_wdt/627fb0","method":"GET"} []
[2020-03-11T00:08:02.012598+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:08:02.019163+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:08:02.022236+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:08:02.024494+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:09:59.375214+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:09:59.381676+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:09:59.587360+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f9cd9c"},"request_uri":"http://localhost:8000/_wdt/f9cd9c","method":"GET"} []
[2020-03-11T00:09:59.624541+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:09:59.633786+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:09:59.656290+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:09:59.676349+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:09:59.693657+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:09:59.698468+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:09:59.754485+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1feb16"},"request_uri":"http://localhost:8000/_wdt/1feb16","method":"GET"} []
[2020-03-11T00:09:59.818963+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:09:59.824766+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:09:59.827466+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:09:59.830807+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:10:14.505909+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:10:14.510256+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:10:14.672598+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0b1bcf"},"request_uri":"http://localhost:8000/_wdt/0b1bcf","method":"GET"} []
[2020-03-11T00:10:14.756445+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:10:14.774139+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:10:14.784823+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:10:14.787272+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:11:29.666667+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:11:29.671052+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:11:29.846742+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"858a1f"},"request_uri":"http://localhost:8000/_wdt/858a1f","method":"GET"} []
[2020-03-11T00:11:29.894629+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:11:29.906059+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:11:29.940494+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:11:29.953686+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:11:29.958981+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:11:29.962282+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:11:30.039495+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f89177"},"request_uri":"http://localhost:8000/_wdt/f89177","method":"GET"} []
[2020-03-11T00:11:30.118441+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:11:30.122931+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:11:30.126883+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:11:30.135380+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:11:36.250928+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:11:36.258782+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:11:36.286675+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:11:36.290764+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:11:36.470645+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e13dc8"},"request_uri":"http://localhost:8000/_wdt/e13dc8","method":"GET"} []
[2020-03-11T00:11:36.499538+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:11:36.506901+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:11:36.510720+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:11:36.514003+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:14:33.604691+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T00:14:33.621187+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-11T00:14:33.653316+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"MichaudBourg","2":"Sit voluptatem mollitia do [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.653643+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"BertrandBourg","2":"Neque nostrum a quidem nes [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.653822+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Colletnec","2":"Rem optio nemo nostrum nis [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.653973+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Francois","2":"Consectetur necessitatibus [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.654117+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Schmitt-sur-Lefevre","2":"Quod ab aut quaerat quam e [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.654262+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Greniernec","2":"Molestias quos fugit dolor [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.654404+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Daniel","2":"Voluptates asperiores recu [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.654537+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Ollivier","2":"Ut expedita architecto ad. [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.654668+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Dupredan","2":"Ad ipsum nemo illo cupidit [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.654801+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Delmas","2":"Suscipit facilis alias mol [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.655652+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T00:14:37.114035+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:14:37.118072+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:14:37.283081+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"276a53"},"request_uri":"http://localhost:8000/_wdt/276a53","method":"GET"} []
[2020-03-11T00:14:37.348902+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:14:37.358247+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:14:37.361993+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:14:37.365409+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:16:09.332476+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T00:16:09.348015+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-11T00:16:09.364206+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Fernandes-sur-Turpin","2":"Provident et ad ullam et s [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.364544+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Didierboeuf","2":"Dolorum qui corporis quo v [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.364715+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Daniel","2":"Quo molestias sed velit su [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.364864+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Bouviernec","2":"Asperiores harum consequat [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.365004+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Le Roux","2":"Ut unde qui dolorem illum  [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.365146+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Joubertboeuf","2":"Inventore dolor vitae dele [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.365283+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Picard-sur-Mer","2":"Corrupti magni iure et ist [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.365419+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Marie-sur-Caron","2":"Est et quaerat delectus. R [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.365556+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Samson","2":"Praesentium quia voluptate [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.365691+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Riou","2":"Veniam velit qui non. Volu [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.366220+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T00:16:12.056252+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:16:12.061384+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:16:12.212262+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"730956"},"request_uri":"http://localhost:8000/_wdt/730956","method":"GET"} []
[2020-03-11T00:16:12.290176+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:16:12.297312+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:16:12.299940+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:16:12.304041+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:16:29.509675+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T00:16:29.525099+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-11T00:16:29.546282+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":null,"2":"Eaque animi praesentium en [...]","3":"2020-03-11T00:16:29+01:00","4":null} []
[2020-03-11T00:16:29.548168+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-11T00:16:29.556410+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load --no-interaction". Message: "An exception occurred while executing 'INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?)' with params [null, "Eaque animi praesentium enim voluptatibus fugiat. Ea praesentium asperiores dolore hic vel consectetur. Incidunt dolores necessitatibus sit et tenetur harum.", "00:16:29", null]:  SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'name' cannot be null" {"exception":"[object] (Doctrine\\DBAL\\Exception\\NotNullConstraintViolationException(code: 0): An exception occurred while executing 'INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?)' with params [null, \"Eaque animi praesentium enim voluptatibus fugiat. Ea praesentium asperiores dolore hic vel consectetur. Incidunt dolores necessitatibus sit et tenetur harum.\", \"00:16:29\", null]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1048 Column 'name' cannot be null at /home/simon/Bureau/devWeb/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:103)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'name' cannot be null at /home/simon/Bureau/devWeb/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:123)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'name' cannot be null at /home/simon/Bureau/devWeb/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:121)","command":"doctrine:fixtures:load --no-interaction","message":"An exception occurred while executing 'INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?)' with params [null, \"Eaque animi praesentium enim voluptatibus fugiat. Ea praesentium asperiores dolore hic vel consectetur. Incidunt dolores necessitatibus sit et tenetur harum.\", \"00:16:29\", null]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1048 Column 'name' cannot be null"} []
[2020-03-11T00:16:29.556713+01:00] console.DEBUG: Command "doctrine:fixtures:load --no-interaction" exited with code "1" {"command":"doctrine:fixtures:load --no-interaction","code":1} []
[2020-03-11T00:17:15.426265+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T00:17:15.441833+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-11T00:17:15.457731+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"28, rue Patrick Pascal\n69  [...]","2":"Officia iure natus nihil a [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.458105+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"30, rue de Boyer\n33182 Lejeune","2":"Delectus et nisi cupiditat [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.458309+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"62, avenue Joly\n08283 Boulay","2":"Eum enim quae dolorum beat [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.458492+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"1, avenue Nicolas Lebreton [...]","2":"Aliquam iusto sed voluptas [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.458808+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"26, place de Girard\n90 927 [...]","2":"Alias laborum consequatur  [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.459230+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"8, place Pierre Leroux\n741 [...]","2":"Qui a amet numquam aliquam [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.459452+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"1, avenue de Meunier\n00486 [...]","2":"Fugiat sit quia animi aliq [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.459628+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"5, boulevard Jean\n02 616 Normand","2":"Suscipit eum sequi officii [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.459782+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"44, rue Grégoire Bernier\n8 [...]","2":"Asperiores recusandae repe [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.459929+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"89, rue Marty\n43 578 Weiss","2":"Quas atque cum assumenda q [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.460528+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T00:17:18.384629+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:17:18.388931+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:17:18.542647+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"099c2e"},"request_uri":"http://localhost:8000/_wdt/099c2e","method":"GET"} []
[2020-03-11T00:17:18.610670+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:17:18.619021+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:17:18.622545+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:17:18.624621+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:18:39.684734+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:18:39.689382+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:18:39.847176+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5c480b"},"request_uri":"http://localhost:8000/_wdt/5c480b","method":"GET"} []
[2020-03-11T00:18:39.927727+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:18:39.934787+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:18:39.939469+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:18:39.942693+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:18:41.455773+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T00:18:41.470984+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-11T00:18:41.499103+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Perrierboeuf","2":"Voluptas porro officia sed [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.499573+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Jacob","2":"Ut quis voluptatem accusan [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.499808+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Hoareau","2":"Rerum dignissimos et volup [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.500040+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Pierre","2":"Dolores deserunt totam vol [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.500308+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Voisin-les-Bains","2":"Consequatur nam possimus a [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.500590+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Grondin","2":"Et nesciunt aut nemo dicta [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.501445+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Rodrigues","2":"Natus aut laboriosam commo [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.501778+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Legros","2":"Deserunt at nam nisi tempo [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.502075+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Paul-sur-Mer","2":"Id at sequi vero eveniet n [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.502388+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Millet","2":"Vitae cum iure quisquam do [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.503106+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T00:18:42.860734+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:18:42.865423+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:18:42.959078+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"126143"},"request_uri":"http://localhost:8000/_wdt/126143","method":"GET"} []
[2020-03-11T00:18:43.037155+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:18:43.042357+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:18:43.044881+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:18:43.047042+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:19:35.877912+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:19:35.885009+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:19:35.887771+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:19:35.890253+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:19:42.793799+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:19:42.800191+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:19:43.483663+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"989189"},"request_uri":"http://localhost:8000/_wdt/989189","method":"GET"} []
[2020-03-11T00:19:43.570157+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:19:43.579820+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:19:43.586978+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:19:43.590706+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:19:55.132386+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:19:55.152635+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:19:55.466462+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7e1cf6"},"request_uri":"http://localhost:8000/_wdt/7e1cf6","method":"GET"} []
[2020-03-11T00:19:56.366993+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences?page=1","method":"GET"} []
[2020-03-11T00:19:56.376181+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:19:56.378571+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:19:56.381737+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:21:45.608423+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T00:21:45.625440+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-11T00:21:45.647647+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Chiny","2":"Ex atque dignissimos eaque [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.647977+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Visé","2":"Saepe aperiam voluptatem e [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.648155+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Châtelet","2":"Harum veritatis cumque vel [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.648303+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Namur","2":"In vel molestiae aperiam s [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.648490+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Tirlemont","2":"Odit voluptatem et et aute [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.648669+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Hannut","2":"Cupiditate sed laboriosam  [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.648828+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Couvin","2":"Et et consequatur qui nisi [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.648972+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Malmedy","2":"Harum qui molestias enim r [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.649113+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Zottegem","2":"Voluptatibus rerum praesen [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.649264+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Bouillon","2":"Ipsum animi laboriosam vol [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.649912+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T00:21:59.196655+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:21:59.202740+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:21:59.754008+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8817ea"},"request_uri":"http://localhost:8000/_wdt/8817ea","method":"GET"} []
[2020-03-11T00:21:59.772551+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:21:59.779646+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:21:59.785247+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:21:59.789013+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:22:48.709151+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:22:48.714909+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:22:48.975325+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"26e891"},"request_uri":"http://localhost:8000/_wdt/26e891","method":"GET"} []
[2020-03-11T00:22:49.023865+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:22:49.036125+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:22:49.041153+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:22:49.045635+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:23:15.345468+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:23:15.349235+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:23:15.507415+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0fc875"},"request_uri":"http://localhost:8000/_wdt/0fc875","method":"GET"} []
[2020-03-11T00:23:15.590534+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:23:15.597908+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:23:15.602081+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:23:15.604735+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:23:23.764479+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:23:23.770133+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:23:23.865764+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8474d6"},"request_uri":"http://localhost:8000/_wdt/8474d6","method":"GET"} []
[2020-03-11T00:23:23.943130+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:23:23.951526+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:23:23.954506+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:23:23.956669+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:23:28.860560+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:23:28.869111+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:23:28.871648+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:23:28.874058+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:24:38.486952+01:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"8474d6"},"request_uri":"http://localhost:8000/_profiler/8474d6?panel=logger","method":"GET"} []
[2020-03-11T00:24:38.539431+01:00] request.INFO: Matched route "_profiler_search_bar". {"route":"_profiler_search_bar","route_parameters":{"_route":"_profiler_search_bar","_controller":"web_profiler.controller.profiler::searchBarAction"},"request_uri":"http://localhost:8000/_profiler/search_bar?panel=logger","method":"GET"} []
[2020-03-11T00:24:42.254619+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:24:42.262717+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:24:42.268186+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:24:42.273312+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:33:51.213022+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:33:51.226196+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:33:51.297021+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ec2259"},"request_uri":"http://localhost:8000/_wdt/ec2259","method":"GET"} []
[2020-03-11T00:59:42.711392+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T00:59:42.855666+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:59:43.366005+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0a9345"},"request_uri":"http://127.0.0.1:8000/_wdt/0a9345","method":"GET"} []
[2020-03-11T00:59:43.830754+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-11T00:59:45.111881+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:59:45.217663+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:59:45.232937+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:59:45.239386+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:03:03.217763+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T01:03:03.223789+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:03:03.468027+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7f4b98"},"request_uri":"http://127.0.0.1:8000/_wdt/7f4b98","method":"GET"} []
[2020-03-11T01:03:03.512031+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T01:03:03.520002+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T01:03:03.522819+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T01:03:03.525645+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:03:03.943603+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T01:03:03.950042+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:03:04.144867+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5a2d56"},"request_uri":"http://127.0.0.1:8000/_wdt/5a2d56","method":"GET"} []
[2020-03-11T01:03:04.208245+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T01:03:04.215383+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T01:03:04.217841+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T01:03:04.220027+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:03:06.148468+01:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"51"},"request_uri":"http://localhost:8000/api/conferences/51","method":"DELETE"} []
[2020-03-11T01:03:06.149788+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:03:06.214703+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ WHERE c0_.id = ? [51] []
[2020-03-11T01:03:06.230089+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T01:03:06.243948+01:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [51] []
[2020-03-11T01:03:06.244661+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T01:03:07.684117+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T01:03:07.690299+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:03:07.796220+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3308e3"},"request_uri":"http://127.0.0.1:8000/_wdt/3308e3","method":"GET"} []
[2020-03-11T01:03:07.875018+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T01:03:07.887085+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T01:03:07.890531+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T01:03:07.893622+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:18.712684+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T01:12:18.716699+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:19.249978+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c966f2"},"request_uri":"http://127.0.0.1:8000/_wdt/c966f2","method":"GET"} []
[2020-03-11T01:12:19.288094+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T01:12:19.297443+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T01:12:19.302119+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T01:12:19.304541+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:21.030005+01:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"52"},"request_uri":"http://localhost:8000/api/conferences/52","method":"DELETE"} []
[2020-03-11T01:12:21.030936+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:21.034771+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ WHERE c0_.id = ? [52] []
[2020-03-11T01:12:21.036686+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T01:12:21.037067+01:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [52] []
[2020-03-11T01:12:21.037368+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T01:12:27.752973+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T01:12:27.758300+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:27.943621+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"af3537"},"request_uri":"http://127.0.0.1:8000/_wdt/af3537","method":"GET"} []
[2020-03-11T01:12:27.968200+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /api/conferessnces" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /api/conferessnces\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/conferessnces/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-11T01:12:45.733851+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T01:12:45.737550+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:45.892808+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"54bf99"},"request_uri":"http://127.0.0.1:8000/_wdt/54bf99","method":"GET"} []
[2020-03-11T01:12:45.915753+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T01:12:45.920927+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T01:12:45.925730+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T01:12:45.930141+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:45.958802+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T01:12:45.966063+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:46.116800+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c6992e"},"request_uri":"http://127.0.0.1:8000/_wdt/c6992e","method":"GET"} []
[2020-03-11T01:12:46.209442+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T01:12:46.215230+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T01:12:46.217272+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T01:12:46.219381+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:48.641679+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "DELETE /api/confersssences/53" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"DELETE /api/confersssences/53\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/confersssences/53\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-11T01:12:50.999535+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "DELETE /api/confersssences/53" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"DELETE /api/confersssences/53\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/confersssences/53\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-11T01:12:56.003676+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T01:12:56.009046+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:56.163625+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"136830"},"request_uri":"http://127.0.0.1:8000/_wdt/136830","method":"GET"} []
[2020-03-11T01:12:56.220850+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T01:12:56.231976+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T01:12:56.235639+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T01:12:56.238290+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:56.549852+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T01:12:56.557998+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:56.665106+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7c81d6"},"request_uri":"http://127.0.0.1:8000/_wdt/7c81d6","method":"GET"} []
[2020-03-11T01:12:56.746651+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T01:12:56.751251+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T01:12:56.753338+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T01:12:56.755525+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:58.397855+01:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"53"},"request_uri":"http://localhost:8000/api/conferences/53","method":"DELETE"} []
[2020-03-11T01:12:58.399305+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:58.404692+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ WHERE c0_.id = ? [53] []
[2020-03-11T01:12:58.408885+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T01:12:58.409513+01:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [53] []
[2020-03-11T01:12:58.410310+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T10:07:09.775500+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T10:07:09.830176+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T10:07:10.189163+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"01ae91"},"request_uri":"http://127.0.0.1:8000/_wdt/01ae91","method":"GET"} []
[2020-03-11T10:07:10.290469+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-11T10:07:12.308903+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T10:07:12.390824+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T10:07:12.403725+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T10:07:12.406984+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T10:07:17.345932+01:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"54"},"request_uri":"http://localhost:8000/api/conferences/54","method":"DELETE"} []
[2020-03-11T10:07:17.346576+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T10:07:17.356540+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ WHERE c0_.id = ? [54] []
[2020-03-11T10:07:17.360319+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T10:07:17.369033+01:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [54] []
[2020-03-11T10:07:17.369522+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T10:07:37.475272+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/conferences","method":"GET"} []
[2020-03-11T10:07:37.481568+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T10:07:37.483756+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T10:07:37.486524+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T10:37:33.550455+01:00] php.DEBUG: Warning: filemtime(): stat failed for /home/simon/Bureau/devWeb/abbottApp/config/routes/dev/framework.yaml {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/config/Resource/FileResource.php","line":65,"trace":[{"file":"/home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/config/Resource/SelfCheckingResourceChecker.php","line":34,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2020-03-11T10:37:33.652685+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T10:37:33.682826+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T10:37:33.761680+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T10:37:33.770092+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T10:37:34.099894+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1e1b3f"},"request_uri":"http://127.0.0.1:8000/_wdt/1e1b3f","method":"GET"} []
[2020-03-11T10:37:34.215157+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f98283"},"request_uri":"http://127.0.0.1:8000/_wdt/f98283","method":"GET"} []
[2020-03-11T10:37:37.597577+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T10:37:37.650021+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T10:37:37.666859+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T10:37:37.671412+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T10:38:37.631167+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T10:38:37.636834+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T10:38:37.639020+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T10:38:37.643704+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T10:38:44.307745+01:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"55"},"request_uri":"http://localhost:8000/api/conferences/55","method":"DELETE"} []
[2020-03-11T10:38:44.308872+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T10:38:44.316879+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ WHERE c0_.id = ? [55] []
[2020-03-11T10:38:44.320460+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T10:38:44.328977+01:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [55] []
[2020-03-11T10:38:44.329364+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T10:50:58.454011+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/conferences","method":"GET"} []
[2020-03-11T10:50:58.462896+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T10:50:58.466880+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T10:50:58.469368+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-17T21:05:12.405737+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-17T21:05:12.456489+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-17T21:05:12.997196+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9c480e"},"request_uri":"http://127.0.0.1:8000/_wdt/9c480e","method":"GET"} []
[2020-03-17T21:05:28.498799+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-17T21:05:28.506461+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-17T21:05:28.993923+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0ffd66"},"request_uri":"http://127.0.0.1:8000/_wdt/0ffd66","method":"GET"} []
[2020-03-17T21:06:12.483387+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-17T21:06:12.582737+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-17T21:06:12.596729+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-17T21:06:12.600016+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-17T21:10:21.628893+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-17T21:10:21.630483+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-17T21:10:21.635154+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-17T21:10:21.635809+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-17T21:10:21.637524+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-17T21:10:21.639462+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-17T21:10:21.639830+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'conference' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-17T21:10:21.640409+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'conference' */ WHERE k.table_name = 'conference' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-17T21:10:21.640811+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'conference' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-17T21:10:21.641139+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'conference' [] []
[2020-03-17T21:10:21.641447+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-17T21:10:21.641916+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-17T21:10:21.642272+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-17T21:10:21.642607+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-17T21:10:28.690475+01:00] console.ERROR: Error thrown while running command "'make:migrations:migrate'". Message: "There are no commands defined in the "make:migrations" namespace.  Did you mean one of these?     doctrine:migrations     make     make:serializer" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\NamespaceNotFoundException(code: 0): There are no commands defined in the \"make:migrations\" namespace.\n\nDid you mean one of these?\n    doctrine:migrations\n    make\n    make:serializer at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/console/Application.php:574)","command":"'make:migrations:migrate'","message":"There are no commands defined in the \"make:migrations\" namespace.\n\nDid you mean one of these?\n    doctrine:migrations\n    make\n    make:serializer"} []
[2020-03-17T21:10:41.944170+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-17T21:10:41.945562+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-17T21:10:41.950176+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-17T21:10:41.950691+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-17T21:10:41.952403+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-17T21:10:41.953198+01:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-17T21:10:48.442746+01:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355', '20200317201021') ORDER BY version DESC LIMIT 1 [] []
[2020-03-17T21:10:48.446462+01:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-17T21:10:48.452817+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T21:10:48.496937+01:00] doctrine.DEBUG: CREATE TABLE users (id INT AUTO_INCREMENT NOT NULL, lastname VARCHAR(255) NOT NULL, firstname VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-03-17T21:10:48.589779+01:00] doctrine.DEBUG: INSERT INTO migration_versions (version, executed_at) VALUES (?, ?) ["20200317201021","2020-03-17 20:10:48"] []
[2020-03-17T21:10:48.602373+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-17T21:12:32.682110+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-17T21:12:32.683439+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-17T21:12:32.688005+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-17T21:12:32.688521+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-17T21:12:32.690250+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-17T21:12:32.691436+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-17T21:12:32.691823+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'conference' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-17T21:12:32.692396+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'conference' */ WHERE k.table_name = 'conference' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-17T21:12:32.692811+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'conference' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-17T21:12:32.693138+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'conference' [] []
[2020-03-17T21:12:32.693438+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-17T21:12:32.693909+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-17T21:12:32.694282+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-17T21:12:32.694593+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-17T21:12:32.694886+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'users' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-17T21:12:32.695359+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'users' */ WHERE k.table_name = 'users' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-17T21:12:32.695694+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'users' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-17T21:12:32.695924+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'users' [] []
[2020-03-17T21:12:34.403654+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-17T21:12:34.404975+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-17T21:12:34.409490+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-17T21:12:34.409992+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-17T21:12:34.411705+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-17T21:12:34.412523+01:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-17T21:12:35.223617+01:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355', '20200317201021', '20200317201232') ORDER BY version DESC LIMIT 1 [] []
[2020-03-17T21:12:35.224565+01:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-17T21:12:35.225895+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T21:12:35.240061+01:00] doctrine.DEBUG: ALTER TABLE users ADD password VARCHAR(255) NOT NULL [] []
[2020-03-17T21:12:35.417037+01:00] doctrine.DEBUG: INSERT INTO migration_versions (version, executed_at) VALUES (?, ?) ["20200317201232","2020-03-17 20:12:35"] []
[2020-03-17T21:12:35.424972+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-17T21:15:21.116835+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2020-03-17T21:15:21.129821+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-17T21:15:21.469202+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"70315f"},"request_uri":"http://127.0.0.1:8000/_wdt/70315f","method":"GET"} []
[2020-03-17T21:17:58.185065+01:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Users","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/users","method":"GET"} []
[2020-03-17T21:17:58.213597+01:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.lastname AS lastname_1, u0_.firstname AS firstname_2, u0_.email AS email_3, u0_.password AS password_4 FROM users u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-03-17T21:17:58.225169+01:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM users u0_ [] []
[2020-03-17T21:17:58.227811+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-17T21:50:33.473621+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /api/login_check"" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /api/login_check\" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/login_check/\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-17T22:20:05.044371+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /api/login_check"" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /api/login_check\" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/login_check/\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-17T22:20:05.427696+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ece2b2"},"request_uri":"http://127.0.0.1:8000/_wdt/ece2b2","method":"GET"} []
[2020-03-17T22:24:43.987109+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"GET"} []
[2020-03-17T22:24:43.988831+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-17T22:24:43.989124+01:00] request.WARNING: Unable to look for the controller as the "_controller" parameter is missing. [] []
[2020-03-17T22:24:43.990420+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Unable to find the controller for path "/api/login_check". The route is wrongly configured." at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/HttpKernel.php line 129 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Unable to find the controller for path \"/api/login_check\". The route is wrongly configured. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/HttpKernel.php:129)"} []
[2020-03-17T22:24:44.170445+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"73a056"},"request_uri":"http://127.0.0.1:8000/_wdt/73a056","method":"GET"} []
[2020-03-17T22:25:40.328615+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-17T22:25:40.355216+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): Username \"alfred.tanguy@alves.com\" does not exist. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/User/InMemoryUserProvider.php:101)"} []
[2020-03-17T22:27:31.355248+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-17T22:27:31.364582+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\BadRequestHttpException: "The key "username" must be provided." at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/UsernamePasswordJsonAuthenticationListener.php line 105 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\BadRequestHttpException(code: 0): The key \"username\" must be provided. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/UsernamePasswordJsonAuthenticationListener.php:105)\n[previous exception] [object] (Symfony\\Component\\PropertyAccess\\Exception\\NoSuchPropertyException(code: 0): Neither the property \"username\" nor one of the methods \"getUsername()\", \"username()\", \"isUsername()\", \"hasUsername()\", \"__get()\" exist and have public access in class \"stdClass\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/property-access/PropertyAccessor.php:404)"} []
[2020-03-17T22:27:57.435442+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-17T22:27:57.436523+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): Username \"Admin@admin.com\" does not exist. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/User/InMemoryUserProvider.php:101)"} []
[2020-03-17T22:28:50.439747+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-17T22:28:50.441971+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\BadRequestHttpException: "The key "username" must be provided." at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/UsernamePasswordJsonAuthenticationListener.php line 105 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\BadRequestHttpException(code: 0): The key \"username\" must be provided. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/UsernamePasswordJsonAuthenticationListener.php:105)\n[previous exception] [object] (Symfony\\Component\\PropertyAccess\\Exception\\NoSuchPropertyException(code: 0): Neither the property \"username\" nor one of the methods \"getUsername()\", \"username()\", \"isUsername()\", \"hasUsername()\", \"__get()\" exist and have public access in class \"stdClass\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/property-access/PropertyAccessor.php:404)"} []
[2020-03-17T22:31:45.787890+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-17T22:31:45.789098+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): Username \"Admin@admin.com\" does not exist. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/User/InMemoryUserProvider.php:101)"} []
[2020-03-17T22:32:54.401030+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-17T22:32:54.402301+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): Username \"Admin@admin.com\" does not exist. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/User/InMemoryUserProvider.php:101)"} []
[2020-03-17T22:41:24.637120+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T22:41:24.668965+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-17T22:41:24.669918+01:00] doctrine.DEBUG: DELETE FROM users [] []
[2020-03-17T22:41:24.708407+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-17T22:41:24.719525+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'App\DataFixtures\User' not found" {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)","command":"doctrine:fixtures:load","message":"Class 'App\\DataFixtures\\User' not found"} []
[2020-03-17T22:41:24.721436+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-17T22:41:24.723006+01:00] php.CRITICAL: Uncaught Error: Class 'App\DataFixtures\User' not found {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)"} []
[2020-03-17T22:41:27.746241+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T22:41:27.766564+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-17T22:41:27.766930+01:00] doctrine.DEBUG: DELETE FROM users [] []
[2020-03-17T22:41:27.777962+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-17T22:41:27.785871+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'App\DataFixtures\User' not found" {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)","command":"doctrine:fixtures:load","message":"Class 'App\\DataFixtures\\User' not found"} []
[2020-03-17T22:41:27.786131+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-17T22:41:27.786304+01:00] php.CRITICAL: Uncaught Error: Class 'App\DataFixtures\User' not found {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)"} []
[2020-03-17T22:42:49.110836+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T22:42:49.142553+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-17T22:42:49.142892+01:00] doctrine.DEBUG: DELETE FROM users [] []
[2020-03-17T22:42:49.159494+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-17T22:42:49.183212+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'App\DataFixtures\User' not found" {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)","command":"doctrine:fixtures:load","message":"Class 'App\\DataFixtures\\User' not found"} []
[2020-03-17T22:42:49.184170+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-17T22:42:49.184756+01:00] php.CRITICAL: Uncaught Error: Class 'App\DataFixtures\User' not found {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)"} []
[2020-03-17T22:44:36.979411+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T22:44:37.031919+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-17T22:44:37.032371+01:00] doctrine.DEBUG: DELETE FROM users [] []
[2020-03-17T22:44:37.047603+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-17T22:44:37.060916+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'App\DataFixtures\User' not found" {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)","command":"doctrine:fixtures:load","message":"Class 'App\\DataFixtures\\User' not found"} []
[2020-03-17T22:44:37.062620+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-17T22:44:37.063792+01:00] php.CRITICAL: Uncaught Error: Class 'App\DataFixtures\User' not found {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)"} []
[2020-03-17T22:44:53.423192+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T22:44:53.459131+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-17T22:44:53.459458+01:00] doctrine.DEBUG: DELETE FROM users [] []
[2020-03-17T22:44:53.470027+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-17T22:44:53.510007+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'App\Entity\User' not found" {"exception":"[object] (Error(code: 0): Class 'App\\Entity\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)","command":"doctrine:fixtures:load","message":"Class 'App\\Entity\\User' not found"} []
[2020-03-17T22:44:53.511706+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-17T22:44:53.512984+01:00] php.CRITICAL: Uncaught Error: Class 'App\Entity\User' not found {"exception":"[object] (Error(code: 0): Class 'App\\Entity\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)"} []
[2020-03-17T22:46:26.114327+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T22:46:26.151417+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-17T22:46:26.151746+01:00] doctrine.DEBUG: DELETE FROM users [] []
[2020-03-17T22:46:26.187348+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-17T22:46:26.203323+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'App\DataFixtures\User' not found" {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)","command":"doctrine:fixtures:load","message":"Class 'App\\DataFixtures\\User' not found"} []
[2020-03-17T22:46:26.204350+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-17T22:46:26.204987+01:00] php.CRITICAL: Uncaught Error: Class 'App\DataFixtures\User' not found {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)"} []
[2020-03-17T22:46:41.600118+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T22:46:41.641121+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-17T22:46:41.641476+01:00] doctrine.DEBUG: DELETE FROM users [] []
[2020-03-17T22:46:41.697120+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-17T22:46:41.706265+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'App\DataFixtures\User' not found" {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)","command":"doctrine:fixtures:load","message":"Class 'App\\DataFixtures\\User' not found"} []
[2020-03-17T22:46:41.706566+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-17T22:46:41.706754+01:00] php.CRITICAL: Uncaught Error: Class 'App\DataFixtures\User' not found {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)"} []
[2020-03-17T22:46:56.551518+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T22:46:56.588087+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-17T22:46:56.589632+01:00] doctrine.DEBUG: DELETE FROM users [] []
[2020-03-17T22:46:56.611504+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-17T22:46:56.619355+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Argument 1 passed to Symfony\Component\Security\Core\Encoder\UserPasswordEncoder::encodePassword() must be an instance of Symfony\Component\Security\Core\User\UserInterface, instance of App\Entity\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 33" {"exception":"[object] (TypeError(code: 0): Argument 1 passed to Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoder::encodePassword() must be an instance of Symfony\\Component\\Security\\Core\\User\\UserInterface, instance of App\\Entity\\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 33 at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Encoder/UserPasswordEncoder.php:33)","command":"doctrine:fixtures:load","message":"Argument 1 passed to Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoder::encodePassword() must be an instance of Symfony\\Component\\Security\\Core\\User\\UserInterface, instance of App\\Entity\\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 33"} []
[2020-03-17T22:46:56.619641+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-17T22:46:56.619812+01:00] php.CRITICAL: Uncaught Error: Argument 1 passed to Symfony\Component\Security\Core\Encoder\UserPasswordEncoder::encodePassword() must be an instance of Symfony\Component\Security\Core\User\UserInterface, instance of App\Entity\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 33 {"exception":"[object] (TypeError(code: 0): Argument 1 passed to Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoder::encodePassword() must be an instance of Symfony\\Component\\Security\\Core\\User\\UserInterface, instance of App\\Entity\\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 33 at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Encoder/UserPasswordEncoder.php:33)"} []
[2020-03-17T22:51:21.275399+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T22:51:21.316367+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-17T22:51:21.316897+01:00] doctrine.DEBUG: DELETE FROM users [] []
[2020-03-17T22:51:21.326905+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-17T22:51:21.365020+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Argument 1 passed to Symfony\Component\Security\Core\Encoder\UserPasswordEncoder::encodePassword() must be an instance of Symfony\Component\Security\Core\User\UserInterface, instance of App\Entity\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 30" {"exception":"[object] (TypeError(code: 0): Argument 1 passed to Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoder::encodePassword() must be an instance of Symfony\\Component\\Security\\Core\\User\\UserInterface, instance of App\\Entity\\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 30 at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Encoder/UserPasswordEncoder.php:33)","command":"doctrine:fixtures:load","message":"Argument 1 passed to Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoder::encodePassword() must be an instance of Symfony\\Component\\Security\\Core\\User\\UserInterface, instance of App\\Entity\\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 30"} []
[2020-03-17T22:51:21.365314+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-17T22:51:21.365542+01:00] php.CRITICAL: Uncaught Error: Argument 1 passed to Symfony\Component\Security\Core\Encoder\UserPasswordEncoder::encodePassword() must be an instance of Symfony\Component\Security\Core\User\UserInterface, instance of App\Entity\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 30 {"exception":"[object] (TypeError(code: 0): Argument 1 passed to Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoder::encodePassword() must be an instance of Symfony\\Component\\Security\\Core\\User\\UserInterface, instance of App\\Entity\\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 30 at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Encoder/UserPasswordEncoder.php:33)"} []
[2020-03-18T13:01:00.348356+01:00] console.ERROR: Error thrown while running command "'make:migrations'". Message: "Command "make:migrations" is not defined.  Did you mean one of these?     doctrine:migrations:diff     doctrine:migrations:dump-schema     doctrine:migrations:execute     doctrine:migrations:generate     doctrine:migrations:latest     doctrine:migrations:migrate     doctrine:migrations:rollup     doctrine:migrations:status     doctrine:migrations:up-to-date     doctrine:migrations:version     make:auth     make:command     make:controller     make:crud     make:entity     make:fixtures     make:form     make:functional-test     make:migration     make:registration-form     make:serializer:encoder     make:serializer:normalizer     make:subscriber     make:twig-extension     make:unit-test     make:user     make:validator     make:voter" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): Command \"make:migrations\" is not defined.\n\nDid you mean one of these?\n    doctrine:migrations:diff\n    doctrine:migrations:dump-schema\n    doctrine:migrations:execute\n    doctrine:migrations:generate\n    doctrine:migrations:latest\n    doctrine:migrations:migrate\n    doctrine:migrations:rollup\n    doctrine:migrations:status\n    doctrine:migrations:up-to-date\n    doctrine:migrations:version\n    make:auth\n    make:command\n    make:controller\n    make:crud\n    make:entity\n    make:fixtures\n    make:form\n    make:functional-test\n    make:migration\n    make:registration-form\n    make:serializer:encoder\n    make:serializer:normalizer\n    make:subscriber\n    make:twig-extension\n    make:unit-test\n    make:user\n    make:validator\n    make:voter at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/console/Application.php:644)","command":"'make:migrations'","message":"Command \"make:migrations\" is not defined.\n\nDid you mean one of these?\n    doctrine:migrations:diff\n    doctrine:migrations:dump-schema\n    doctrine:migrations:execute\n    doctrine:migrations:generate\n    doctrine:migrations:latest\n    doctrine:migrations:migrate\n    doctrine:migrations:rollup\n    doctrine:migrations:status\n    doctrine:migrations:up-to-date\n    doctrine:migrations:version\n    make:auth\n    make:command\n    make:controller\n    make:crud\n    make:entity\n    make:fixtures\n    make:form\n    make:functional-test\n    make:migration\n    make:registration-form\n    make:serializer:encoder\n    make:serializer:normalizer\n    make:subscriber\n    make:twig-extension\n    make:unit-test\n    make:user\n    make:validator\n    make:voter"} []
[2020-03-18T13:01:05.850110+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-18T13:01:05.863000+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-18T13:01:05.877639+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-18T13:01:05.878945+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-18T13:01:05.881381+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-18T13:01:05.883342+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-18T13:01:05.883792+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'conference' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-18T13:01:05.884879+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'conference' */ WHERE k.table_name = 'conference' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-18T13:01:05.885909+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'conference' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-18T13:01:05.886568+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'conference' [] []
[2020-03-18T13:01:05.887186+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-18T13:01:05.887795+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-18T13:01:05.888160+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-18T13:01:05.888447+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-18T13:01:05.888731+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'users' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-18T13:01:05.889284+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'users' */ WHERE k.table_name = 'users' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-18T13:01:05.889697+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'users' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-18T13:01:05.890032+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'users' [] []
[2020-03-18T13:01:17.166320+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-18T13:01:17.167758+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-18T13:01:17.174391+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-18T13:01:17.174908+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-18T13:01:17.176680+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-18T13:01:17.177666+01:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-18T13:01:19.497876+01:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355', '20200317201021', '20200317201232', '20200318120105') ORDER BY version DESC LIMIT 1 [] []
[2020-03-18T13:01:19.500116+01:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-18T13:01:19.502767+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-18T13:01:19.544466+01:00] doctrine.DEBUG: CREATE TABLE user (id INT AUTO_INCREMENT NOT NULL, email VARCHAR(180) NOT NULL, roles JSON NOT NULL, password VARCHAR(255) NOT NULL, first_name VARCHAR(255) NOT NULL, last_name VARCHAR(255) NOT NULL, gsm VARCHAR(255) DEFAULT NULL, profile_pic VARCHAR(255) DEFAULT NULL, UNIQUE INDEX UNIQ_8D93D649E7927C74 (email), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-03-18T13:01:19.607127+01:00] doctrine.DEBUG: DROP TABLE users [] []
[2020-03-18T13:01:19.636622+01:00] doctrine.DEBUG: INSERT INTO migration_versions (version, executed_at) VALUES (?, ?) ["20200318120105","2020-03-18 12:01:19"] []
[2020-03-18T13:01:19.646578+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-18T13:02:51.011887+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-18T13:02:51.057067+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-18T13:02:51.057730+01:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-03-18T13:02:51.091929+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-18T13:02:51.099892+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "No encoder has been configured for account "App\Entity\User"." {"exception":"[object] (RuntimeException(code: 0): No encoder has been configured for account \"App\\Entity\\User\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Encoder/EncoderFactory.php:53)","command":"doctrine:fixtures:load","message":"No encoder has been configured for account \"App\\Entity\\User\"."} []
[2020-03-18T13:02:51.100405+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-18T13:09:14.216278+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-18T13:09:14.272782+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-18T13:09:14.273365+01:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-03-18T13:09:14.449864+01:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, first_name, last_name, gsm, profile_pic) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.com","2":[],"3":"$argon2id$v=19$m=65536,t=4 [...]","4":"Simon","5":"Mohimont","6":null,"7":null} []
[2020-03-18T13:09:14.452120+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-18T13:10:00.103180+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-18T13:10:00.135655+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-18T13:10:00.135981+01:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-03-18T13:10:00.301298+01:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, first_name, last_name, gsm, profile_pic) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.com","2":[],"3":"$argon2id$v=19$m=65536,t=4 [...]","4":"Simon","5":"Mohimont","6":null,"7":null} []
[2020-03-18T13:10:00.302371+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-18T13:10:20.931712+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-18T13:10:20.933638+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): Username \"simon.mohimont@hotmail.com\" does not exist. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/User/InMemoryUserProvider.php:101)"} []
[2020-03-18T13:10:51.356912+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-18T13:10:51.360741+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\BadRequestHttpException: "The key "password" must be provided." at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/UsernamePasswordJsonAuthenticationListener.php line 111 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\BadRequestHttpException(code: 0): The key \"password\" must be provided. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/UsernamePasswordJsonAuthenticationListener.php:111)\n[previous exception] [object] (Symfony\\Component\\PropertyAccess\\Exception\\NoSuchPropertyException(code: 0): Neither the property \"password\" nor one of the methods \"getPassword()\", \"password()\", \"isPassword()\", \"hasPassword()\", \"__get()\" exist and have public access in class \"stdClass\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/property-access/PropertyAccessor.php:404)"} []
[2020-03-18T13:11:36.222830+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-18T13:11:36.223961+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): Username \"simon.mohimont@hotmail.com\" does not exist. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/User/InMemoryUserProvider.php:101)"} []
[2020-03-18T13:18:26.962006+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-18T13:18:26.963308+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): Username \"simon.mohimont@hotmail.com\" does not exist. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/User/InMemoryUserProvider.php:101)"} []
[2020-03-18T13:18:33.549810+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-18T13:18:33.551225+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): Username \"simon.mohimont@hotmail.com\" does not exist. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/User/InMemoryUserProvider.php:101)"} []
[2020-03-18T13:31:37.901955+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-18T13:31:37.915048+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T13:31:38.103748+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T13:32:38.164464+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:32:38.173597+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:32:38.957016+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e85277"},"request_uri":"http://localhost:8000/_wdt/e85277","method":"GET"} []
[2020-03-18T13:32:39.080970+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://localhost:8000/")" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://localhost:8000/\") at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-18T13:38:07.100894+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:38:07.105195+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:38:07.790105+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e22156"},"request_uri":"http://localhost:8000/_wdt/e22156","method":"GET"} []
[2020-03-18T13:38:28.439712+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:38:28.444297+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:38:29.124002+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8060b9"},"request_uri":"http://localhost:8000/_wdt/8060b9","method":"GET"} []
[2020-03-18T13:41:04.634916+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:41:04.640317+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:41:05.206735+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9f7dc9"},"request_uri":"http://localhost:8000/_wdt/9f7dc9","method":"GET"} []
[2020-03-18T13:44:38.887788+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:44:38.893379+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:44:39.550664+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"483fb6"},"request_uri":"http://localhost:8000/_wdt/483fb6","method":"GET"} []
[2020-03-18T13:44:42.155570+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:44:42.161142+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:44:42.783278+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"777386"},"request_uri":"http://localhost:8000/_wdt/777386","method":"GET"} []
[2020-03-18T13:45:42.506935+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:45:42.511020+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:45:43.053381+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0c592c"},"request_uri":"http://localhost:8000/_wdt/0c592c","method":"GET"} []
[2020-03-18T13:48:38.999988+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:48:39.004288+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:48:39.583933+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"edba98"},"request_uri":"http://localhost:8000/_wdt/edba98","method":"GET"} []
[2020-03-18T13:48:59.011758+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:48:59.016491+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:48:59.546926+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1ffbe3"},"request_uri":"http://localhost:8000/_wdt/1ffbe3","method":"GET"} []
[2020-03-18T13:50:55.723833+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:50:55.729239+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:50:56.258805+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b96265"},"request_uri":"http://localhost:8000/_wdt/b96265","method":"GET"} []
[2020-03-18T13:53:17.076709+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:53:17.088002+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:53:17.685728+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ad1769"},"request_uri":"http://localhost:8000/_wdt/ad1769","method":"GET"} []
[2020-03-18T13:53:43.067114+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:53:43.070985+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:53:43.593759+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b4fd62"},"request_uri":"http://localhost:8000/_wdt/b4fd62","method":"GET"} []
[2020-03-18T13:56:23.606439+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:56:23.610659+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:56:24.331310+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"47de46"},"request_uri":"http://localhost:8000/_wdt/47de46","method":"GET"} []
[2020-03-18T13:57:38.302455+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:57:38.306323+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:57:38.875808+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2a547f"},"request_uri":"http://localhost:8000/_wdt/2a547f","method":"GET"} []
[2020-03-18T13:58:03.845773+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:58:03.851297+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:58:04.416554+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3c2d8e"},"request_uri":"http://localhost:8000/_wdt/3c2d8e","method":"GET"} []
[2020-03-18T13:58:59.401266+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:58:59.406602+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:58:59.960450+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0eb39d"},"request_uri":"http://localhost:8000/_wdt/0eb39d","method":"GET"} []
[2020-03-18T14:00:07.550949+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:00:07.555600+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:00:08.092346+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b18300"},"request_uri":"http://localhost:8000/_wdt/b18300","method":"GET"} []
[2020-03-18T14:00:25.443269+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:00:25.447120+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:00:25.991917+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7fb720"},"request_uri":"http://localhost:8000/_wdt/7fb720","method":"GET"} []
[2020-03-18T14:01:01.371593+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:01:01.375758+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:01:02.081336+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8ae926"},"request_uri":"http://localhost:8000/_wdt/8ae926","method":"GET"} []
[2020-03-18T14:01:15.204120+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:01:15.209318+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:01:15.772247+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d139f2"},"request_uri":"http://localhost:8000/_wdt/d139f2","method":"GET"} []
[2020-03-18T14:01:27.164277+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:01:27.173219+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:01:27.917832+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"540daa"},"request_uri":"http://localhost:8000/_wdt/540daa","method":"GET"} []
[2020-03-18T14:01:37.326167+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:01:37.329793+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["Admin@admin.com"] []
[2020-03-18T14:01:37.330552+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"Admin@admin.com\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-03-18T14:01:43.031024+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:01:43.035075+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:01:43.197409+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:20:20.072967+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:20:20.078088+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:20:20.934704+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d7e28b"},"request_uri":"http://localhost:8000/_wdt/d7e28b","method":"GET"} []
[2020-03-18T14:20:28.992733+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:20:28.995869+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:20:29.146350+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:21:14.460263+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:21:14.466128+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:21:15.076105+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e7dd08"},"request_uri":"http://localhost:8000/_wdt/e7dd08","method":"GET"} []
[2020-03-18T14:21:16.450744+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:21:16.456660+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:21:16.637002+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:21:21.308825+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:21:21.311501+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:21:21.477531+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2020-03-18T14:29:12.703901+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-03-18T14:29:12.786934+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:29:13.332149+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b873e8"},"request_uri":"http://localhost:8000/_wdt/b873e8","method":"GET"} []
[2020-03-18T14:29:27.197109+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:29:27.205651+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:29:27.523003+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0fb9e3"},"request_uri":"http://localhost:8000/_wdt/0fb9e3","method":"GET"} []
[2020-03-18T14:29:30.728845+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:29:30.748756+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:29:30.956822+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:30:27.180477+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:30:27.187779+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:30:27.505864+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"82b319"},"request_uri":"http://localhost:8000/_wdt/82b319","method":"GET"} []
[2020-03-18T14:30:32.064020+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:30:32.088757+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:30:32.091051+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:30:32.095324+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:31:36.457756+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:31:36.461835+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:31:36.643879+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b2cae6"},"request_uri":"http://localhost:8000/_wdt/b2cae6","method":"GET"} []
[2020-03-18T14:31:36.758366+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:31:36.766503+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:31:36.790025+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:31:36.792218+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:31:42.439027+01:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"62"},"request_uri":"http://localhost:8000/api/conferences/62","method":"DELETE"} []
[2020-03-18T14:31:42.440584+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:31:42.527700+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ WHERE c0_.id = ? [62] []
[2020-03-18T14:31:42.536090+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-18T14:31:42.538431+01:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [62] []
[2020-03-18T14:31:42.539920+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-18T14:36:25.203579+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:36:25.207989+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:36:25.539694+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0a0f26"},"request_uri":"http://localhost:8000/_wdt/0a0f26","method":"GET"} []
[2020-03-18T14:37:14.175067+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:37:14.183000+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:37:14.502806+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1e7b97"},"request_uri":"http://localhost:8000/_wdt/1e7b97","method":"GET"} []
[2020-03-18T14:37:16.188163+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:37:16.207290+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:37:16.211985+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:37:16.216342+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:37:17.660835+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:37:17.667463+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:37:17.669445+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:37:17.672117+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:37:20.658097+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:37:20.672560+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:37:20.676268+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:37:20.680284+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:37:42.948707+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:37:42.955671+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:37:43.209405+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"85fe4e"},"request_uri":"http://localhost:8000/_wdt/85fe4e","method":"GET"} []
[2020-03-18T14:38:01.052756+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:38:01.058787+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:38:01.302866+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"202ec0"},"request_uri":"http://localhost:8000/_wdt/202ec0","method":"GET"} []
[2020-03-18T14:38:02.325547+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:38:02.331003+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:38:02.461706+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"88f800"},"request_uri":"http://localhost:8000/_wdt/88f800","method":"GET"} []
[2020-03-18T14:38:06.336789+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:38:06.341476+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:38:06.526960+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:38:15.679916+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:38:15.683638+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:38:15.853526+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:38:19.661173+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:38:19.668606+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:38:19.670890+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:38:19.673881+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:38:22.367915+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:38:22.379543+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:38:22.382517+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:38:22.385699+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:41:08.223109+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:41:08.228035+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:41:08.452349+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"610fc2"},"request_uri":"http://localhost:8000/_wdt/610fc2","method":"GET"} []
[2020-03-18T14:41:08.533640+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:41:08.538549+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:41:08.538645+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:08.538694+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:08.544725+01:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:67)"} []
[2020-03-18T14:41:08.544902+01:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-03-18T14:41:12.451036+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:41:12.451829+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:41:12.451878+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:12.451911+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:12.453089+01:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:67)"} []
[2020-03-18T14:41:12.453147+01:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-03-18T14:41:14.589216+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:41:14.597300+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:41:14.750789+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:41:15.781071+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:41:15.782455+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:41:15.782547+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:15.782619+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:15.788665+01:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:15.790844+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:41:15.793123+01:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:15.793610+01:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:15.793698+01:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:15.819157+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:41:15.824846+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:41:19.824525+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:41:19.826069+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:41:19.826193+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:19.826312+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:19.827222+01:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:19.830425+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:41:19.831308+01:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:19.831716+01:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:19.831788+01:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:19.836194+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:41:19.838473+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:41:22.395573+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:41:22.397103+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:41:22.397212+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:22.397270+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:22.399022+01:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:67)"} []
[2020-03-18T14:41:22.399129+01:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-03-18T14:41:43.322768+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:41:43.327666+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:41:43.525869+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"280fb9"},"request_uri":"http://localhost:8000/_wdt/280fb9","method":"GET"} []
[2020-03-18T14:41:43.638206+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:41:43.640841+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:41:43.640904+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:43.640947+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:43.642294+01:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:67)"} []
[2020-03-18T14:41:43.642420+01:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-03-18T14:41:47.874571+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:41:47.880309+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:41:48.055823+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:41:49.187111+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:41:49.188038+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:41:49.188111+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:49.188177+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:49.188970+01:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:49.191393+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:41:49.193065+01:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:49.193946+01:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:49.194115+01:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:49.224313+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:41:49.234317+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:41:52.972726+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:41:52.973748+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:41:52.973812+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:52.973856+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:52.975473+01:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:67)"} []
[2020-03-18T14:41:52.975576+01:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-03-18T14:43:29.449914+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:43:29.455407+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:43:29.650194+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"349dca"},"request_uri":"http://localhost:8000/_wdt/349dca","method":"GET"} []
[2020-03-18T14:43:33.344187+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:43:33.355393+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:43:33.518898+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"379e63"},"request_uri":"http://localhost:8000/_wdt/379e63","method":"GET"} []
[2020-03-18T14:43:44.254202+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:43:44.261947+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:43:44.449330+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:43:45.973514+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:43:45.974422+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:43:45.974493+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:43:45.974573+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:43:45.975342+01:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:43:45.979351+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:43:46.008724+01:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:43:46.010941+01:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:43:46.011764+01:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:43:46.059132+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:43:46.085340+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:45:31.455527+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:45:31.459998+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:45:31.713061+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d86b17"},"request_uri":"http://localhost:8000/_wdt/d86b17","method":"GET"} []
[2020-03-18T14:51:54.703665+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:51:54.713687+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:51:54.905823+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:52:03.141357+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:52:03.142594+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:52:03.142697+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:52:03.142771+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:52:03.143689+01:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:52:03.146024+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:52:03.146674+01:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:52:03.146946+01:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:52:03.146986+01:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:52:03.151148+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:52:03.154629+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:52:11.183167+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:52:11.188036+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:52:11.379413+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:52:40.518660+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:52:40.525673+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:52:41.226722+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"902ef7"},"request_uri":"http://localhost:8000/_wdt/902ef7","method":"GET"} []
[2020-03-18T14:52:53.998080+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-03-18T14:52:53.998721+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:52:53.998770+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:52:53.998803+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:52:54.000000+01:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:67)"} []
[2020-03-18T14:52:54.000079+01:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-03-18T14:52:57.943177+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:52:57.948503+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:52:58.715124+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eb4744"},"request_uri":"http://localhost:8000/_wdt/eb4744","method":"GET"} []
[2020-03-18T14:53:01.985090+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-03-18T14:53:01.985806+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:53:01.985861+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:53:01.985896+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:53:01.987458+01:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:67)"} []
[2020-03-18T14:53:01.987637+01:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-03-18T14:53:04.808763+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:53:04.814714+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:53:05.443163+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"198e61"},"request_uri":"http://localhost:8000/_wdt/198e61","method":"GET"} []
[2020-03-18T14:53:07.530063+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:53:07.535821+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:53:07.747786+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:53:10.348634+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-03-18T14:53:10.349551+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:53:10.349640+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:53:10.349684+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:53:10.350918+01:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:67)"} []
[2020-03-18T14:53:10.350980+01:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-03-18T14:53:38.249667+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:53:38.257218+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:53:38.928616+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3383cc"},"request_uri":"http://localhost:8000/_wdt/3383cc","method":"GET"} []
[2020-03-18T14:53:41.449914+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-03-18T14:53:41.450623+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:53:41.450673+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:53:41.450707+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:53:41.450904+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:53:41.890636+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"25db21"},"request_uri":"http://localhost:8000/_wdt/25db21","method":"GET"} []
[2020-03-18T15:02:17.351818+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T15:02:17.357295+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T15:02:17.701912+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2b601d"},"request_uri":"http://localhost:8000/_wdt/2b601d","method":"GET"} []
[2020-03-18T15:03:28.828627+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T15:03:28.832105+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T15:03:29.021696+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T15:03:36.321223+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T15:03:36.322085+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T15:03:36.322138+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T15:03:36.322184+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T15:03:36.322742+01:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T15:03:36.325007+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T15:03:36.325617+01:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T15:03:36.325877+01:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T15:03:36.325914+01:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T15:03:36.340864+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T15:03:36.350211+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-23T22:00:18.568480+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-23T22:00:18.645580+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-23T22:00:19.248683+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4a71df"},"request_uri":"http://127.0.0.1:8000/_wdt/4a71df","method":"GET"} []
[2020-03-23T22:00:23.872118+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-23T22:00:23.878288+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-23T22:00:23.878386+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:00:23.878470+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:00:23.887754+01:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:00:23.890333+01:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:00:48.718474+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-23T22:00:48.780255+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-23T22:00:48.979555+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2020-03-23T22:00:50.768074+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-23T22:00:50.770534+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-23T22:00:50.968127+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2020-03-23T22:00:50.997275+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-23T22:00:51.002681+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-23T22:00:51.187601+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2020-03-23T22:00:52.605812+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-23T22:00:52.610783+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-23T22:00:52.769014+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2020-03-23T22:01:10.719487+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-23T22:01:10.725413+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-23T22:01:11.002997+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8db510"},"request_uri":"http://127.0.0.1:8000/_wdt/8db510","method":"GET"} []
[2020-03-23T22:01:11.772829+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-23T22:01:11.778975+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-23T22:01:11.958377+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2020-03-23T22:01:47.647740+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-23T22:01:47.652107+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-23T22:01:47.847888+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8b73fb"},"request_uri":"http://127.0.0.1:8000/_wdt/8b73fb","method":"GET"} []
[2020-03-23T22:01:50.541198+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-23T22:01:50.546125+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-23T22:01:50.707710+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-23T22:01:53.685848+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-23T22:01:53.687509+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-23T22:01:53.687656+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:01:53.687789+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:01:53.690197+01:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:01:53.692541+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-23T22:01:53.694257+01:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:01:53.694638+01:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:01:53.694694+01:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:01:53.750649+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-23T22:01:53.768435+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-25T09:10:02.717635+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-25T09:10:02.806761+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-25T09:10:03.426058+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"197a12"},"request_uri":"http://localhost:8000/_wdt/197a12","method":"GET"} []
[2020-03-25T09:10:03.557746+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://localhost:8000/")" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://localhost:8000/\") at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-25T09:20:29.837935+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-25T09:20:29.945351+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-25T09:20:30.132370+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-25T09:20:31.194738+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-25T09:20:31.221725+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-25T09:20:31.221809+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:20:31.221878+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:20:31.229218+01:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:20:31.233204+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-25T09:20:31.234929+01:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:20:31.235174+01:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:20:31.235213+01:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:20:31.394859+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-25T09:20:31.408936+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-25T09:26:46.076808+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-25T09:26:46.081535+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-25T09:26:46.279715+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-25T09:26:56.671215+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-03-25T09:26:56.672265+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-25T09:26:56.672335+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:26:56.672379+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:26:56.672622+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-25T09:26:57.060327+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b4777c"},"request_uri":"http://localhost:8000/_wdt/b4777c","method":"GET"} []
[2020-03-25T09:27:46.987212+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-25T09:27:46.993531+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-25T09:27:47.490229+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"79aabd"},"request_uri":"http://localhost:8000/_wdt/79aabd","method":"GET"} []
[2020-03-25T09:27:52.429918+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-25T09:27:52.431902+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-25T09:27:52.431994+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:27:52.432072+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:27:52.433003+01:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:27:52.436700+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-25T09:27:52.437623+01:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:27:52.437999+01:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:27:52.438053+01:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:27:52.443475+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-25T09:27:52.445981+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-31T23:30:36.359505+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-31T23:30:36.362197+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-31T23:30:36.369195+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-31T23:30:36.370704+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-31T23:30:36.372930+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-31T23:30:36.375272+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-31T23:30:36.375585+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'conference' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-31T23:30:36.376290+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'conference' */ WHERE k.table_name = 'conference' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-31T23:30:36.377581+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'conference' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-31T23:30:36.377864+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'conference' [] []
[2020-03-31T23:30:36.378095+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-31T23:30:36.378483+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-31T23:30:36.378764+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-31T23:30:36.378989+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-31T23:30:36.379192+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-31T23:30:36.379692+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-31T23:30:36.380640+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-31T23:30:36.380925+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-03-31T23:30:45.492139+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-31T23:30:45.493440+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-31T23:30:45.497919+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-31T23:30:45.498366+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-31T23:30:45.499984+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-31T23:30:45.501731+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-31T23:30:46.805401+02:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355', '20200317201021', '20200317201232', '20200318120105', '20200331213036') ORDER BY version DESC LIMIT 1 [] []
[2020-03-31T23:30:46.809668+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-31T23:30:46.819312+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-31T23:30:46.864020+02:00] doctrine.DEBUG: CREATE TABLE event (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, description LONGTEXT DEFAULT NULL, date_start DATE NOT NULL, date_end DATE NOT NULL, place VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-03-31T23:30:46.969092+02:00] doctrine.DEBUG: CREATE TABLE admin (id INT AUTO_INCREMENT NOT NULL, user_id INT NOT NULL, event_id INT NOT NULL, responsabilities VARCHAR(255) DEFAULT NULL, INDEX IDX_880E0D76A76ED395 (user_id), INDEX IDX_880E0D7671F7E88B (event_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-03-31T23:30:47.097800+02:00] doctrine.DEBUG: CREATE TABLE medecin (id INT AUTO_INCREMENT NOT NULL, user_id INT NOT NULL, inami_number INT NOT NULL, speciality VARCHAR(255) DEFAULT NULL, UNIQUE INDEX UNIQ_1BDA53C6A76ED395 (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-03-31T23:30:47.210192+02:00] doctrine.DEBUG: CREATE TABLE participant (id INT AUTO_INCREMENT NOT NULL, user_id INT NOT NULL, event_id INT NOT NULL, INDEX IDX_D79F6B11A76ED395 (user_id), INDEX IDX_D79F6B1171F7E88B (event_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-03-31T23:30:47.340544+02:00] doctrine.DEBUG: CREATE TABLE speaker (id INT AUTO_INCREMENT NOT NULL, user_id INT NOT NULL, conference_id INT NOT NULL, description LONGTEXT DEFAULT NULL, INDEX IDX_7B85DB61A76ED395 (user_id), INDEX IDX_7B85DB61604B8382 (conference_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-03-31T23:30:47.460908+02:00] doctrine.DEBUG: ALTER TABLE admin ADD CONSTRAINT FK_880E0D76A76ED395 FOREIGN KEY (user_id) REFERENCES user (id) [] []
[2020-03-31T23:30:47.624811+02:00] doctrine.DEBUG: ALTER TABLE admin ADD CONSTRAINT FK_880E0D7671F7E88B FOREIGN KEY (event_id) REFERENCES event (id) [] []
[2020-03-31T23:30:47.803121+02:00] doctrine.DEBUG: ALTER TABLE medecin ADD CONSTRAINT FK_1BDA53C6A76ED395 FOREIGN KEY (user_id) REFERENCES user (id) [] []
[2020-03-31T23:30:47.980810+02:00] doctrine.DEBUG: ALTER TABLE participant ADD CONSTRAINT FK_D79F6B11A76ED395 FOREIGN KEY (user_id) REFERENCES user (id) [] []
[2020-03-31T23:30:48.153315+02:00] doctrine.DEBUG: ALTER TABLE participant ADD CONSTRAINT FK_D79F6B1171F7E88B FOREIGN KEY (event_id) REFERENCES event (id) [] []
[2020-03-31T23:30:48.324866+02:00] doctrine.DEBUG: ALTER TABLE speaker ADD CONSTRAINT FK_7B85DB61A76ED395 FOREIGN KEY (user_id) REFERENCES user (id) [] []
[2020-03-31T23:30:48.495913+02:00] doctrine.DEBUG: ALTER TABLE speaker ADD CONSTRAINT FK_7B85DB61604B8382 FOREIGN KEY (conference_id) REFERENCES conference (id) [] []
[2020-03-31T23:30:48.662452+02:00] doctrine.DEBUG: ALTER TABLE conference ADD event_id INT DEFAULT NULL, ADD informations LONGTEXT DEFAULT NULL, ADD room VARCHAR(255) DEFAULT NULL [] []
[2020-03-31T23:30:48.833629+02:00] doctrine.DEBUG: ALTER TABLE conference ADD CONSTRAINT FK_911533C871F7E88B FOREIGN KEY (event_id) REFERENCES event (id) [] []
[2020-03-31T23:30:49.026587+02:00] doctrine.DEBUG: CREATE INDEX IDX_911533C871F7E88B ON conference (event_id) [] []
[2020-03-31T23:30:49.115919+02:00] doctrine.DEBUG: ALTER TABLE user ADD telephone VARCHAR(255) DEFAULT NULL, ADD addresse VARCHAR(255) DEFAULT NULL, DROP gsm, DROP profile_pic [] []
[2020-03-31T23:30:49.285612+02:00] doctrine.DEBUG: INSERT INTO migration_versions (version, executed_at) VALUES (?, ?) ["20200331213036","2020-03-31 21:30:49"] []
[2020-03-31T23:30:49.294160+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-17T16:29:16.877140+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:29:16.980148+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:29:17.650181+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c50f80"},"request_uri":"http://127.0.0.1:8000/_wdt/c50f80","method":"GET"} []
[2020-04-17T16:29:17.961266+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-04-17T16:29:18.033789+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:29:18.041420+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:29:19.217629+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:29:19.224620+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:36:50.424934+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:36:50.444023+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:36:51.092999+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e14cd7"},"request_uri":"http://127.0.0.1:8000/_wdt/e14cd7","method":"GET"} []
[2020-04-17T16:36:51.674751+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:36:51.683484+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:36:53.909574+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:36:53.916280+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:36:54.516588+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:36:54.520618+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:36:56.942972+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:36:56.948861+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:38:50.655575+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:38:50.660403+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:38:52.559163+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:38:52.566408+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:39:09.623927+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:39:09.631526+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:39:09.911164+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0dd695"},"request_uri":"http://127.0.0.1:8000/_wdt/0dd695","method":"GET"} []
[2020-04-17T16:39:09.997248+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:39:10.002446+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:39:15.686723+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:39:15.690561+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:39:15.845976+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2d2aa7"},"request_uri":"http://127.0.0.1:8000/_wdt/2d2aa7","method":"GET"} []
[2020-04-17T16:39:15.888285+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:39:15.894417+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:39:24.384190+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:39:24.388183+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:39:24.554053+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5d200e"},"request_uri":"http://127.0.0.1:8000/_wdt/5d200e","method":"GET"} []
[2020-04-17T16:39:24.597166+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:39:24.602606+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:41:38.190899+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:41:38.201530+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:41:38.344273+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fac136"},"request_uri":"http://127.0.0.1:8000/_wdt/fac136","method":"GET"} []
[2020-04-17T16:41:39.204204+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:41:39.209385+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:42:14.217481+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:42:14.224718+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:42:14.442853+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9fffb6"},"request_uri":"http://127.0.0.1:8000/_wdt/9fffb6","method":"GET"} []
[2020-04-17T16:42:15.153472+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:42:15.162234+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:42:24.067347+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:42:24.071286+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:42:24.271007+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9bab46"},"request_uri":"http://127.0.0.1:8000/_wdt/9bab46","method":"GET"} []
[2020-04-17T16:42:24.349996+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:42:24.357408+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:45:00.456181+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:45:00.460591+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:45:00.711319+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a896f9"},"request_uri":"http://127.0.0.1:8000/_wdt/a896f9","method":"GET"} []
[2020-04-17T16:45:00.790126+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:45:00.795189+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:46:13.819360+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:46:13.824274+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:46:14.119850+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"363968"},"request_uri":"http://127.0.0.1:8000/_wdt/363968","method":"GET"} []
[2020-04-17T16:46:14.172701+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:46:14.176840+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:46:32.797520+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "POST /api/users" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"POST /api/users\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/users\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-04-17T16:46:35.529917+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "POST /api/users" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"POST /api/users\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/users\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-04-17T16:46:43.549498+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "POST /api/users" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"POST /api/users\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/users\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-04-17T16:47:18.934263+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:47:18.939822+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:47:19.768482+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1bc42d"},"request_uri":"http://127.0.0.1:8000/_wdt/1bc42d","method":"GET"} []
[2020-04-17T16:47:19.862569+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:47:19.876099+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:47:24.999026+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2020-04-17T16:47:25.000248+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T16:47:25.000346+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:47:25.000409+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:47:25.000776+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:47:25.008194+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-17T16:47:25.011566+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-17T16:48:44.964380+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2020-04-17T16:48:44.964958+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T16:48:44.965007+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:48:44.965042+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:48:44.965222+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:48:45.011910+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-17T16:48:45.029100+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.com","2":[],"3":"salut","4":"Mohimont","5":"Simon","6":null,"7":null} []
[2020-04-17T16:48:45.052669+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-04-17T16:48:45.069179+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\UniqueConstraintViolationException: "An exception occurred while executing 'INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse) VALUES (?, ?, ?, ?, ?, ?, ?)' with params ["simon.mohimont@hotmail.com", "[]", "salut", "Mohimont", "Simon", null, null]:  SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'simon.mohimont@hotmail.com' for key 'UNIQ_8D93D649E7927C74'" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 55 {"exception":"[object] (Doctrine\\DBAL\\Exception\\UniqueConstraintViolationException(code: 0): An exception occurred while executing 'INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse) VALUES (?, ?, ?, ?, ?, ?, ?)' with params [\"simon.mohimont@hotmail.com\", \"[]\", \"salut\", \"Mohimont\", \"Simon\", null, null]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'simon.mohimont@hotmail.com' for key 'UNIQ_8D93D649E7927C74' at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:55)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'simon.mohimont@hotmail.com' for key 'UNIQ_8D93D649E7927C74' at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:123)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'simon.mohimont@hotmail.com' for key 'UNIQ_8D93D649E7927C74' at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:121)"} []
[2020-04-17T16:49:02.776051+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2020-04-17T16:49:02.777791+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T16:49:02.777895+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:49:02.777946+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:49:02.778377+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:49:02.795370+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-17T16:49:02.796019+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimonta@hotmail.com","2":[],"3":"salut","4":"Mohimont","5":"Simon","6":null,"7":null} []
[2020-04-17T16:49:02.797774+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-17T16:49:02.812131+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t9.id AS id_10, t9.inami_number AS inami_number_11, t9.speciality AS speciality_12, t9.user_id AS user_id_13 FROM user t0 LEFT JOIN medecin t9 ON t9.user_id = t0.id WHERE t0.id = ? [4] []
[2020-04-17T16:49:02.895865+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T16:49:02.899939+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-17T16:49:02.902386+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-17T16:49:03.041961+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:49:03.047650+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:58:56.300554+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:58:56.308513+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:58:56.352954+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:58:56.357818+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:58:57.120518+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a68996"},"request_uri":"http://127.0.0.1:8000/_wdt/a68996","method":"GET"} []
[2020-04-17T16:58:57.202810+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:58:57.211282+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:59:05.693391+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2020-04-17T16:59:05.694809+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T16:59:05.694955+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:59:05.695086+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:59:05.695662+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:59:05.721229+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t9.id AS id_10, t9.inami_number AS inami_number_11, t9.speciality AS speciality_12, t9.user_id AS user_id_13 FROM user t0 LEFT JOIN medecin t9 ON t9.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-17T16:59:10.231921+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2020-04-17T16:59:10.233275+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T16:59:10.233402+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:59:10.233475+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:59:10.233928+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:59:10.243261+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t9.id AS id_10, t9.inami_number AS inami_number_11, t9.speciality AS speciality_12, t9.user_id AS user_id_13 FROM user t0 LEFT JOIN medecin t9 ON t9.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-17T16:59:10.248527+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-17T16:59:10.249045+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.comaa","2":[],"3":"salut","4":"Mohimont","5":"Simon","6":null,"7":null} []
[2020-04-17T16:59:10.252461+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-17T16:59:10.262283+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t9.id AS id_10, t9.inami_number AS inami_number_11, t9.speciality AS speciality_12, t9.user_id AS user_id_13 FROM user t0 LEFT JOIN medecin t9 ON t9.user_id = t0.id WHERE t0.id = ? [5] []
[2020-04-17T16:59:10.282553+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-17T16:59:10.324988+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-17T16:59:10.325618+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-17T16:59:10.418520+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:59:10.424921+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:12:30.502595+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-17T17:12:30.505962+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:30.512395+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:30.513890+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:30.516312+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-17T17:12:30.518732+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-17T17:12:30.519185+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'admin' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:30.519758+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'admin' */ WHERE k.table_name = 'admin' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:30.521391+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'admin' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:30.521817+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'admin' [] []
[2020-04-17T17:12:30.522069+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'conference' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:30.522543+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'conference' */ WHERE k.table_name = 'conference' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:30.522886+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'conference' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:30.523264+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'conference' [] []
[2020-04-17T17:12:30.523657+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'event' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:30.524119+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'event' */ WHERE k.table_name = 'event' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:30.524426+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'event' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:30.524661+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'event' [] []
[2020-04-17T17:12:30.525317+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'medecin' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:30.525892+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'medecin' */ WHERE k.table_name = 'medecin' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:30.526325+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'medecin' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:30.526917+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'medecin' [] []
[2020-04-17T17:12:30.527267+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:30.527893+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:30.528265+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:30.528584+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-17T17:12:30.528889+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'participant' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:30.529373+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'participant' */ WHERE k.table_name = 'participant' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:30.530019+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'participant' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:30.530410+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'participant' [] []
[2020-04-17T17:12:30.530682+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'speaker' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:30.531169+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'speaker' */ WHERE k.table_name = 'speaker' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:30.531901+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'speaker' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:30.532296+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'speaker' [] []
[2020-04-17T17:12:30.532764+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:30.533268+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:30.533604+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:30.534024+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-04-17T17:12:34.898174+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-17T17:12:34.899566+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:34.904453+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:34.904904+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:34.906550+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-17T17:12:34.908412+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-04-17T17:12:37.036310+02:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355', '20200317201021', '20200317201232', '20200318120105', '20200331213036', '20200417151230') ORDER BY version DESC LIMIT 1 [] []
[2020-04-17T17:12:37.042836+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-04-17T17:12:37.052900+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-17T17:12:37.094258+02:00] doctrine.DEBUG: ALTER TABLE user ADD is_accepted TINYINT(1) NOT NULL [] []
[2020-04-17T17:12:37.261234+02:00] doctrine.DEBUG: INSERT INTO migration_versions (version, executed_at) VALUES (?, ?) ["20200417151230","2020-04-17 15:12:37"] []
[2020-04-17T17:12:37.270725+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-17T17:15:55.562769+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:15:55.567877+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:15:56.202934+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bc9fe4"},"request_uri":"http://127.0.0.1:8000/_wdt/bc9fe4","method":"GET"} []
[2020-04-17T17:15:56.926431+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:15:56.930432+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:16:36.020027+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:16:36.026615+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:16:36.744644+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bc6e7f"},"request_uri":"http://127.0.0.1:8000/_wdt/bc6e7f","method":"GET"} []
[2020-04-17T17:16:36.904758+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:16:36.910019+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:17:02.927933+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:17:02.936007+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:17:03.793843+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f5b47c"},"request_uri":"http://127.0.0.1:8000/_wdt/f5b47c","method":"GET"} []
[2020-04-17T17:17:03.823543+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:17:03.827947+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:17:06.125877+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-17T17:17:06.132885+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:17:06.649490+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-17T17:17:06.649990+02:00] doctrine.DEBUG: UPDATE user SET password = ? WHERE id = ? ["$argon2i$v=19$m=65536,t=4, [...]",2] []
[2020-04-17T17:17:06.652259+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-17T17:17:06.660242+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-17T17:17:06.754033+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:17:06.758443+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:17:07.883599+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:17:07.892525+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:17:07.950176+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-17T17:17:07.953403+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T17:17:07.953470+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:17:07.953517+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:17:07.958818+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:17:07.959838+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:17:07.963625+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:17:07.963904+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:17:07.963948+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:17:08.014552+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-17T17:17:08.015232+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:17:08.016350+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:17:08.036815+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:17:08.038259+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:17:08.038981+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:17:08.040563+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:17:08.041361+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:17:08.042253+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:17:08.043229+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:17:08.043865+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:17:08.044387+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:17:08.047467+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-17T17:21:01.353862+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:21:01.362535+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:21:02.075397+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d5cceb"},"request_uri":"http://127.0.0.1:8000/_wdt/d5cceb","method":"GET"} []
[2020-04-17T17:21:02.120561+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:21:02.126157+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:21:02.157652+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-17T17:21:02.163423+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T17:21:02.163553+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:02.163673+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:02.164946+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:02.166466+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:21:02.170308+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:02.170705+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:02.170779+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:02.175334+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-17T17:21:02.176249+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:21:02.176955+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:21:02.182346+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:21:02.184297+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:21:02.187502+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:21:02.188425+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:21:02.188840+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:21:02.189136+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:21:02.189643+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:21:02.190045+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:21:02.190399+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:21:02.191306+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-17T17:21:03.012375+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"PUT"} []
[2020-04-17T17:21:03.013330+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T17:21:03.013428+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.013507+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.014236+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.017995+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:21:03.020421+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.020678+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.020729+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.023945+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-04-17T17:21:03.040671+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:21:03.041809+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:21:03.042427+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:21:03.044153+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:21:03.044866+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-17T17:21:03.045095+02:00] doctrine.DEBUG: UPDATE user SET roles = ?, is_accepted = ? WHERE id = ? [["ROLE_USER"],true,2] []
[2020-04-17T17:21:03.045680+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-17T17:21:03.053367+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? [2] []
[2020-04-17T17:21:03.054975+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:21:03.055406+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:21:03.055759+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:21:03.142846+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-17T17:21:03.145622+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T17:21:03.145706+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.145765+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.146375+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.147144+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:21:03.149010+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.149267+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.149311+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.154274+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-17T17:21:03.154766+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:21:03.155119+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:21:03.157630+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:21:03.158727+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:21:03.159229+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:21:03.159855+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:21:03.160243+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:21:03.160599+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:21:03.161407+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-17T17:21:14.039188+02:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"5"},"request_uri":"http://localhost:8000/api/users/5","method":"DELETE"} []
[2020-04-17T17:21:14.040087+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T17:21:14.040182+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:14.040242+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:14.041439+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:14.045446+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:21:14.047990+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:14.048320+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:14.048371+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:14.050817+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [5] []
[2020-04-17T17:21:14.051395+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:21:14.053337+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-17T17:21:14.053524+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [5] []
[2020-04-17T17:21:14.053939+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-17T17:22:40.495173+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:22:40.502859+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:22:41.446221+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5a8fb9"},"request_uri":"http://127.0.0.1:8000/_wdt/5a8fb9","method":"GET"} []
[2020-04-17T17:22:41.934097+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:22:41.940923+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:22:41.965043+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-17T17:22:41.968919+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T17:22:41.968992+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:22:41.969041+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:22:41.969588+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:22:41.970370+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:22:41.972839+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:22:41.973252+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:22:41.973338+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:22:41.979469+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-17T17:22:41.980439+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:22:41.985932+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:22:41.987423+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:22:41.987978+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:22:41.988877+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-17T17:29:07.046623+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:29:07.055673+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:29:07.723564+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a68d5f"},"request_uri":"http://127.0.0.1:8000/_wdt/a68d5f","method":"GET"} []
[2020-04-17T17:29:07.786295+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:29:07.797547+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:29:07.862010+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-17T17:29:07.868621+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T17:29:07.868761+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:29:07.868891+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:29:07.870220+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:29:07.871650+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:29:07.874851+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:29:07.875192+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:29:07.875272+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:29:07.879946+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-17T17:29:07.880524+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:29:07.886671+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:29:07.888502+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:29:07.889134+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:29:07.890386+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-17T17:29:08.406085+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:29:08.409626+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:29:09.634275+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-17T17:29:09.640078+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:29:09.817297+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-17T17:29:09.900489+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:29:09.907010+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:52:13.000410+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:52:13.008679+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:52:38.113203+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:52:38.118113+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:52:38.840769+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"23e16a"},"request_uri":"http://127.0.0.1:8000/_wdt/23e16a","method":"GET"} []
[2020-04-17T17:52:38.865273+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:52:38.869767+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:52:39.719127+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:52:39.723562+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:55:23.257169+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:55:23.268924+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:55:23.952209+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f270dd"},"request_uri":"http://127.0.0.1:8000/_wdt/f270dd","method":"GET"} []
[2020-04-17T17:55:23.976177+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:55:23.984052+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:55:25.633544+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:55:25.637783+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:55:26.258740+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:55:26.268048+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:55:27.637257+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-17T17:55:27.644286+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T17:55:27.644444+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:55:27.644577+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:55:27.645101+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:55:27.648863+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-17T17:55:27.649148+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-17T17:55:27.683975+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:55:27.690380+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:57:32.657673+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:57:32.668546+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:57:33.429460+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f2e9b0"},"request_uri":"http://127.0.0.1:8000/_wdt/f2e9b0","method":"GET"} []
[2020-04-17T17:57:33.474015+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:57:33.479661+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:57:34.392576+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:57:34.397951+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:57:34.834488+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:57:34.840445+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:57:35.954245+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-17T17:57:35.960234+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:57:36.147119+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-17T18:01:49.167623+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T18:01:49.174070+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T18:01:49.911974+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"86dd04"},"request_uri":"http://127.0.0.1:8000/_wdt/86dd04","method":"GET"} []
[2020-04-17T18:01:49.940201+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T18:01:49.947249+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:08:51.797923+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-20T15:08:51.885637+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:08:52.531521+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8bc771"},"request_uri":"http://127.0.0.1:8000/_wdt/8bc771","method":"GET"} []
[2020-04-20T15:08:52.647686+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-20T15:08:52.652394+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:08:52.677909+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-04-20T15:09:09.288614+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-20T15:09:09.292952+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:09:09.885401+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ca1d19"},"request_uri":"http://127.0.0.1:8000/_wdt/ca1d19","method":"GET"} []
[2020-04-20T15:09:09.910665+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-20T15:09:09.918535+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:09:15.227220+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-20T15:09:15.232117+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:09:15.839915+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f174db"},"request_uri":"http://127.0.0.1:8000/_wdt/f174db","method":"GET"} []
[2020-04-20T15:09:15.870589+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-20T15:09:15.876336+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:10:02.168480+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-20T15:10:02.174993+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:10:02.835754+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"523a77"},"request_uri":"http://127.0.0.1:8000/_wdt/523a77","method":"GET"} []
[2020-04-20T15:10:02.862919+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-20T15:10:02.867770+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:10:40.489560+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-20T15:10:40.495039+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:10:41.249460+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dad34c"},"request_uri":"http://127.0.0.1:8000/_wdt/dad34c","method":"GET"} []
[2020-04-20T15:10:41.270240+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-20T15:10:41.276093+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:11:04.980621+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-20T15:11:04.985392+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:11:05.617000+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4dfbca"},"request_uri":"http://127.0.0.1:8000/_wdt/4dfbca","method":"GET"} []
[2020-04-20T15:11:05.648738+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-20T15:11:05.653884+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:11:09.472378+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-20T15:11:09.478953+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:11:10.154425+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a9b2c4"},"request_uri":"http://127.0.0.1:8000/_wdt/a9b2c4","method":"GET"} []
[2020-04-20T15:11:10.173094+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-20T15:11:10.178800+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:11:12.554430+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:11:12.562157+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:11:13.179737+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"83b6f1"},"request_uri":"http://localhost:8000/_wdt/83b6f1","method":"GET"} []
[2020-04-20T15:11:13.261287+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://localhost:8000/")" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://localhost:8000/\") at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-04-20T15:11:13.331074+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:11:13.336397+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:11:16.744549+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:11:16.751252+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:11:25.729870+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:11:25.733989+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:11:26.365262+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:11:26.441206+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:11:26.441290+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:11:26.441366+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:11:26.441637+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:11:26.445496+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-20T15:11:26.446383+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-20T15:11:26.482142+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:11:26.489338+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:11:26.514183+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"14a6d5"},"request_uri":"http://localhost:8000/_wdt/14a6d5","method":"GET"} []
[2020-04-20T15:11:30.783438+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:11:30.805457+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:11:30.987834+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:11:31.084423+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:11:31.091608+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:11:31.091725+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:11:31.091841+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:11:31.098091+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:11:31.100454+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:11:31.103640+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:11:31.103959+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:11:31.104015+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:11:31.155329+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:11:31.182063+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:11:31.183634+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:11:31.184602+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:11:31.187730+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:11:31.218936+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:11:31.224131+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:12:11.846152+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:12:11.851853+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:12:12.537972+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f14ebe"},"request_uri":"http://localhost:8000/_wdt/f14ebe","method":"GET"} []
[2020-04-20T15:12:12.566731+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:12:12.580326+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:12:16.934702+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:12:16.940669+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:12:17.563175+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:12:17.566789+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:12:17.566853+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:17.566914+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:17.567459+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:17.568222+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:12:17.571577+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:17.571961+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:17.572028+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:17.578822+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:12:17.584165+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:12:17.585505+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:12:17.586081+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:12:17.587378+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:12:17.613949+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:12:17.619110+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:12:17.637917+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"09680c"},"request_uri":"http://localhost:8000/_wdt/09680c","method":"GET"} []
[2020-04-20T15:12:20.549088+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:12:20.554398+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:12:20.572753+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-20T15:12:20.575276+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:12:20.575402+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:20.575517+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:20.576448+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:20.580879+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:12:20.584090+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:20.584469+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:20.584521+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:20.638153+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-20T15:12:20.682940+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-20T15:12:20.683829+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-20T15:12:20.684488+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-20T15:12:21.586097+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:12:21.590637+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:12:21.607573+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-20T15:12:21.612547+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:12:21.612632+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:21.612693+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:21.613436+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:21.614673+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:12:21.617226+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:21.617508+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:21.617557+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:21.621390+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-20T15:12:21.621917+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:12:21.629790+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:12:21.631123+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:12:21.631787+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:12:21.632736+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-20T15:12:23.570839+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:12:23.577247+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:12:24.512324+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:12:24.518927+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:12:25.237720+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:12:25.245348+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:12:25.245435+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:25.245513+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:25.246570+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:25.248076+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:12:25.251313+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:25.251644+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:25.251699+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:25.257712+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:12:25.262616+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:12:25.264734+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:12:25.265534+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:12:25.266715+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:12:25.292286+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cd2e48"},"request_uri":"http://localhost:8000/_wdt/cd2e48","method":"GET"} []
[2020-04-20T15:12:25.315727+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:12:25.320897+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:12:56.803741+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:12:56.810597+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:12:57.473189+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:12:57.480447+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:12:57.480540+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:57.480614+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:57.481397+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:57.482422+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:12:57.485356+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:57.485694+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:57.485741+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:12:57.491173+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:12:57.500574+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:12:57.502528+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:12:57.503395+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:12:57.504611+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:12:57.535655+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b57e85"},"request_uri":"http://localhost:8000/_wdt/b57e85","method":"GET"} []
[2020-04-20T15:12:57.559002+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:12:57.564278+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:12:59.205247+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:12:59.211301+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:13:00.569806+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:13:00.574650+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:13:00.743300+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:13:00.829200+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:13:00.833712+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:13:00.833812+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:13:00.833910+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:13:00.834858+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:13:00.835981+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:13:00.837977+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:13:00.838278+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:13:00.838353+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:13:00.844503+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:13:00.848599+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:13:00.849607+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:13:00.850086+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:13:00.850933+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:13:00.877043+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:13:00.883188+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:13:20.086258+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:13:20.091643+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:13:20.833752+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:13:20.840064+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:13:20.840133+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:13:20.840186+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:13:20.840946+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:13:20.841882+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:13:20.844629+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:13:20.845000+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:13:20.845072+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:13:20.852249+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:13:20.857472+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:13:20.859356+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:13:20.860522+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:13:20.862763+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:13:20.891490+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8d0fae"},"request_uri":"http://localhost:8000/_wdt/8d0fae","method":"GET"} []
[2020-04-20T15:13:20.920973+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:13:20.928110+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:14:13.096049+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:14:13.102487+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:14:13.766554+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:14:13.771328+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:14:13.771426+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:14:13.771512+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:14:13.772364+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:14:13.773947+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:14:13.777406+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:14:13.777908+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:14:13.778018+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:14:13.788421+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:14:13.793087+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:14:13.797683+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:14:13.798343+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:14:13.799627+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:14:13.829662+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"37a895"},"request_uri":"http://localhost:8000/_wdt/37a895","method":"GET"} []
[2020-04-20T15:14:13.855142+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:14:13.864213+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:18:47.526965+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:18:47.535075+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:18:48.323289+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"266ebd"},"request_uri":"http://localhost:8000/_wdt/266ebd","method":"GET"} []
[2020-04-20T15:18:48.396520+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:18:48.402816+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:23:07.799911+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:23:07.809647+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:23:08.561113+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"08c0c2"},"request_uri":"http://localhost:8000/_wdt/08c0c2","method":"GET"} []
[2020-04-20T15:23:08.589648+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:23:08.594597+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:23:09.575206+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:23:09.579777+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:23:10.755733+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:23:10.763059+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:23:10.763184+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:23:10.763249+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:23:10.763689+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:23:10.766104+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-20T15:23:10.766409+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-20T15:23:10.803607+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:23:10.813105+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:23:10.986471+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:23:11.019973+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:23:11.026645+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:23:35.899143+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:23:35.905615+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:23:36.257438+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:23:36.267470+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:23:36.267564+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:23:36.267621+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:23:36.267885+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:23:36.324673+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:23:36.327004+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:23:36.343805+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:23:36.344417+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:23:36.344858+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:23:36.345843+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:23:36.394937+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:23:36.400727+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:23:36.569167+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:23:36.618791+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:23:36.623668+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:25:57.788588+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:25:57.792783+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:25:58.523114+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4df8b6"},"request_uri":"http://localhost:8000/_wdt/4df8b6","method":"GET"} []
[2020-04-20T15:25:58.556601+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:25:58.568761+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:25:59.598184+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:25:59.606758+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:26:00.474690+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:26:00.480821+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:26:00.480916+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:26:00.481375+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:26:00.481703+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:26:00.486022+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:26:00.489496+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:26:00.495681+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:26:00.498266+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:26:00.499471+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:26:00.501529+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:26:00.533435+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:26:00.537614+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:26:00.717809+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:26:00.748251+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:26:00.754691+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:26:15.818426+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:26:15.825685+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:26:16.514853+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"328bf8"},"request_uri":"http://localhost:8000/_wdt/328bf8","method":"GET"} []
[2020-04-20T15:26:16.547002+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:26:16.555273+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:26:29.544401+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:26:29.551822+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:26:30.195332+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9622b3"},"request_uri":"http://localhost:8000/_wdt/9622b3","method":"GET"} []
[2020-04-20T15:26:30.225068+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:26:30.232835+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:26:33.653940+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:26:33.657989+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:26:34.234818+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"30dba3"},"request_uri":"http://localhost:8000/_wdt/30dba3","method":"GET"} []
[2020-04-20T15:26:34.252905+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:26:34.257124+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:26:48.372305+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:26:48.376276+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:26:49.114284+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"40ccdc"},"request_uri":"http://localhost:8000/_wdt/40ccdc","method":"GET"} []
[2020-04-20T15:26:49.142044+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:26:49.147551+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:28:50.319193+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:28:50.323627+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:28:50.954827+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"85a38c"},"request_uri":"http://localhost:8000/_wdt/85a38c","method":"GET"} []
[2020-04-20T15:28:50.976455+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:28:50.982113+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:28:51.819111+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:28:51.824912+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:28:52.402405+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e87b46"},"request_uri":"http://localhost:8000/_wdt/e87b46","method":"GET"} []
[2020-04-20T15:28:52.440706+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:28:52.447867+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:28:59.269131+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:28:59.273521+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:28:59.897957+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"01fbac"},"request_uri":"http://localhost:8000/_wdt/01fbac","method":"GET"} []
[2020-04-20T15:28:59.926754+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:28:59.933109+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:29:13.804302+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:29:13.811442+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:29:14.555340+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"31b1ae"},"request_uri":"http://localhost:8000/_wdt/31b1ae","method":"GET"} []
[2020-04-20T15:29:14.593196+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:29:14.600635+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:29:15.725266+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:29:15.732975+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:29:16.501301+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:29:16.508169+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:29:16.508259+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:29:16.508314+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:29:16.508606+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:29:16.514478+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:29:16.517605+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:29:16.522529+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:29:16.525208+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:29:16.525914+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:29:16.526969+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:29:16.557468+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:29:16.561937+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:29:16.747570+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:29:16.780951+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:29:16.787873+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:29:27.787043+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:29:27.792770+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:29:28.410297+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7f44d1"},"request_uri":"http://localhost:8000/_wdt/7f44d1","method":"GET"} []
[2020-04-20T15:29:28.434198+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:29:28.438544+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:29:29.657516+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:29:29.666183+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:29:30.672838+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:29:30.680427+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:29:30.680552+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:29:30.680615+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:29:30.681183+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:29:30.695619+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:29:30.700186+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:29:30.705010+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:29:30.706279+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:29:30.706880+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:29:30.708015+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:29:30.739841+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:29:30.744843+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:29:30.947303+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:29:30.983929+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:29:30.991093+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:30:24.752691+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:30:24.762486+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:30:25.405551+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"851aac"},"request_uri":"http://localhost:8000/_wdt/851aac","method":"GET"} []
[2020-04-20T15:30:25.432941+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:30:25.440476+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:30:26.686255+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:30:26.695960+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:30:27.465641+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:30:27.477051+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:30:27.477193+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:30:27.477283+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:30:27.477763+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:30:27.482859+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:30:27.486464+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:30:27.491520+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:30:27.499061+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:30:27.499770+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:30:27.501310+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:30:27.544432+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:30:27.556156+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:30:27.750686+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:30:27.785229+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:30:27.791966+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:30:48.853977+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:30:48.860225+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:30:49.460708+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9a29c9"},"request_uri":"http://localhost:8000/_wdt/9a29c9","method":"GET"} []
[2020-04-20T15:30:49.480495+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:30:49.484487+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:30:50.517379+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:30:50.521847+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:30:51.341082+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:30:51.351186+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:30:51.351283+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:30:51.351348+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:30:51.351751+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:30:51.357419+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:30:51.362726+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:30:51.368491+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:30:51.370236+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:30:51.370948+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:30:51.372193+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:30:51.405355+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:30:51.408698+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:30:51.580313+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:30:51.611331+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:30:51.616808+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:31:13.067680+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:31:13.074336+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:31:13.711899+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c509b1"},"request_uri":"http://localhost:8000/_wdt/c509b1","method":"GET"} []
[2020-04-20T15:31:13.733758+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:31:13.737676+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:31:15.020712+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:31:15.024606+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:31:15.713875+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:31:15.725447+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:31:15.725574+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:31:15.725663+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:31:15.726103+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:31:15.732991+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:31:15.737108+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:31:15.742371+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:31:15.745056+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:31:15.745814+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:31:15.747818+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:31:15.775475+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:31:15.781685+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:31:15.948251+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:31:15.977195+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:31:15.983279+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:31:32.539368+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:31:32.547242+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:31:33.300869+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"55fbe7"},"request_uri":"http://localhost:8000/_wdt/55fbe7","method":"GET"} []
[2020-04-20T15:31:33.333176+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:31:33.338044+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:31:34.309150+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:31:34.316277+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:31:35.036160+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:31:35.048958+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:31:35.049081+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:31:35.049153+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:31:35.049553+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:31:35.057103+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:31:35.062025+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:31:35.067607+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:31:35.069483+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:31:35.070342+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:31:35.071753+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:31:35.107213+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:31:35.113606+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:31:35.290300+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:31:35.319139+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:31:35.323299+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:33:15.247558+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:33:15.253159+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:33:15.886259+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5fdfac"},"request_uri":"http://localhost:8000/_wdt/5fdfac","method":"GET"} []
[2020-04-20T15:33:15.968063+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:33:15.977228+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:33:16.735320+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:33:16.749519+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:33:17.414581+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:33:17.419686+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:33:17.419790+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:33:17.419847+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:33:17.420081+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:33:17.425226+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:33:17.430670+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:33:17.434010+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:33:17.435243+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:33:17.435847+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:33:17.437100+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:33:17.466274+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:33:17.470991+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:33:17.650973+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:33:17.679608+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:33:17.683098+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:33:39.786648+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:33:39.803432+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:33:40.866553+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:33:40.880693+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:33:40.880806+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:33:40.880859+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:33:40.881056+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:33:40.886972+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:33:40.892813+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:33:40.898051+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:33:40.900963+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:33:40.901775+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:33:40.902975+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:33:40.932742+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:33:40.937643+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:33:41.114659+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:33:41.141159+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:33:41.146948+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:33:44.037566+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:33:44.042999+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:33:44.064878+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-20T15:33:44.069115+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:33:44.069228+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:33:44.069296+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:33:44.069599+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:33:44.074955+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-20T15:33:44.077890+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:33:44.078491+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:33:44.081311+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:33:44.082254+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:33:44.082611+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:33:44.083128+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:33:44.083403+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:33:44.083650+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:33:44.084328+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-20T15:33:50.478843+02:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"DELETE"} []
[2020-04-20T15:33:50.479984+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:33:50.480069+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:33:50.480116+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:33:50.480363+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:33:50.482070+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-20T15:33:50.482195+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-20T15:33:59.087898+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:33:59.093572+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:33:59.832891+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c05c80"},"request_uri":"http://localhost:8000/_wdt/c05c80","method":"GET"} []
[2020-04-20T15:33:59.866520+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:33:59.874353+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:01.022788+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:34:01.033645+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:34:01.033748+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:34:01.033821+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:34:01.034243+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:01.041116+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:34:01.047368+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:01.054701+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:01.056132+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:01.057067+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:01.059382+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:34:01.089352+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:34:01.095042+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:34:01.281646+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:34:01.318322+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:34:01.322526+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:02.461571+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:34:02.466490+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:02.483778+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-20T15:34:02.486378+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:34:02.486441+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:34:02.486478+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:34:02.486624+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:02.490335+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-20T15:34:02.494426+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:02.495116+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:34:02.498058+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:02.499335+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:02.500136+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:02.500888+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:34:02.501235+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:34:02.501537+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:34:02.502214+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-20T15:34:06.333695+02:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"DELETE"} []
[2020-04-20T15:34:06.335194+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:34:06.335317+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:34:06.335404+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:34:06.335840+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:06.338866+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-20T15:34:06.339096+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-20T15:34:43.578610+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:34:43.584015+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:44.910542+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:34:44.918193+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:34:44.918329+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:34:44.918425+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:34:44.918799+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:44.929077+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:34:44.933618+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:44.940212+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:44.942282+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:44.943066+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:44.944713+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:34:44.980848+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:34:44.986172+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:34:45.177532+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:34:45.212709+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:34:45.219147+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:54.229916+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:34:54.234212+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:54.252882+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-20T15:34:54.253533+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:34:54.253580+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:34:54.253613+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:34:54.253754+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:54.255090+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-20T15:34:54.255181+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-20T15:34:55.146501+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:34:55.153109+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:55.894849+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:34:55.900635+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:55.920344+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-20T15:34:55.925205+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:34:55.925302+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:34:55.925364+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:34:55.925635+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:55.931900+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-20T15:34:55.935186+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:55.935729+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:34:55.939061+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:55.941270+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:55.942300+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:55.943234+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:34:55.943821+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:34:55.944616+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:34:55.946363+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-20T15:34:56.750066+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-20T15:34:56.750834+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:34:56.750905+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:34:56.750965+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:34:56.751165+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:56.752938+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-20T15:34:56.753054+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-20T15:34:56.777148+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:34:56.782858+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:57.685551+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-20T15:34:57.688510+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:34:57.688608+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:34:57.688655+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:34:57.688867+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:57.695458+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-20T15:34:57.697708+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:57.698196+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:34:57.700391+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:57.701332+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:57.701755+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:34:57.702290+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:34:57.702611+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:34:57.702869+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-20T15:34:57.703626+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-20T15:34:57.731092+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:34:57.736489+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:58.809034+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-20T15:34:58.810292+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:34:58.810400+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:34:58.810460+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:34:58.810697+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:34:58.812743+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-20T15:34:58.812877+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-20T15:34:58.835237+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:34:58.841928+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:35:02.771580+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:35:02.778592+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:35:45.258175+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:35:45.264204+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:35:45.955737+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"245ae5"},"request_uri":"http://localhost:8000/_wdt/245ae5","method":"GET"} []
[2020-04-20T15:35:45.977350+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:35:45.983882+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:35:47.444386+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:35:47.449125+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:35:47.449240+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:35:47.449323+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:35:47.449650+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:35:47.457891+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:35:47.462781+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:35:47.467920+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:35:47.469850+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:35:47.470829+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:35:47.473412+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:35:47.507104+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:35:47.512195+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:35:47.688146+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:35:47.717989+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:35:47.724985+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:37:28.057003+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:37:28.063273+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:37:29.566594+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaa","method":"GET"} []
[2020-04-20T15:37:29.574775+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:37:29.574901+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:37:29.574969+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:37:29.575247+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:37:29.581730+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:37:29.583893+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:37:29.612209+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:37:29.618119+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:37:29.621552+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T15:37:29.653110+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:37:29.661413+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:37:36.383887+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:37:36.392346+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:39:22.365340+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:39:22.374327+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:39:23.031000+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"455ac9"},"request_uri":"http://localhost:8000/_wdt/455ac9","method":"GET"} []
[2020-04-20T15:39:23.124116+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:39:23.132035+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:39:24.225291+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:39:24.232069+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:39:24.232171+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:39:24.232241+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:39:24.232530+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:39:24.240632+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:39:24.245162+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:39:24.250652+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:39:24.253385+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:39:24.254380+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:39:24.255899+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:39:24.288676+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:39:24.294506+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:39:24.457798+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:39:24.489605+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:39:24.496678+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:39:29.836711+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:39:29.842262+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:39:31.274337+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaaa","method":"GET"} []
[2020-04-20T15:39:31.280448+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:39:31.280571+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:39:31.280645+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:39:31.280886+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:39:31.287442+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaaa"] []
[2020-04-20T15:39:31.288717+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaaa"] []
[2020-04-20T15:39:31.316681+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:39:31.322492+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaaa"] []
[2020-04-20T15:39:31.323614+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T15:39:31.353377+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:39:31.360301+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:39:55.249463+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:39:55.258844+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:39:55.946199+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"26116d"},"request_uri":"http://localhost:8000/_wdt/26116d","method":"GET"} []
[2020-04-20T15:39:56.250629+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:39:56.259382+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:39:57.122840+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:39:57.127137+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:40:00.385127+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:40:00.392801+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:40:00.393701+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T15:40:33.373700+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:40:33.378227+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:40:33.544157+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:40:33.630503+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:40:33.635448+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:40:35.237050+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:40:35.242739+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:40:37.795393+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:40:37.798974+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:40:37.799628+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T15:42:57.821323+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:42:57.825628+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:42:58.535995+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"504338"},"request_uri":"http://localhost:8000/_wdt/504338","method":"GET"} []
[2020-04-20T15:42:58.560768+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:42:58.566091+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:43:05.955451+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:43:05.963421+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:43:06.596090+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6dce6a"},"request_uri":"http://localhost:8000/_wdt/6dce6a","method":"GET"} []
[2020-04-20T15:43:06.628609+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:43:06.635618+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:43:09.521760+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:43:09.528707+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:43:09.529799+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T15:43:09.567952+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaa","method":"GET"} []
[2020-04-20T15:43:09.572932+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:43:09.573032+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:43:09.573088+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:43:09.573493+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:43:09.580975+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:43:09.582688+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:43:09.618150+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:43:09.626611+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:43:37.248705+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:43:37.254355+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:43:37.966196+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a0d3d7"},"request_uri":"http://localhost:8000/_wdt/a0d3d7","method":"GET"} []
[2020-04-20T15:43:38.038529+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:43:38.044110+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:43:38.594375+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:43:38.606222+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:43:39.247037+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:43:39.256819+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:43:39.427721+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:43:39.461979+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:43:39.465725+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:43:39.465866+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:43:39.465955+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:43:39.466339+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:43:39.472354+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:43:39.476181+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:43:39.480517+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:43:39.481851+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:43:39.482772+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:43:39.484473+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:43:39.513224+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:43:39.520113+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:44:03.756402+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:44:03.763119+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:44:04.554095+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0a0f65"},"request_uri":"http://localhost:8000/_wdt/0a0f65","method":"GET"} []
[2020-04-20T15:44:04.578310+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:44:04.584260+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:44:05.651188+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:44:05.658693+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:44:06.321698+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:44:06.328346+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:44:06.534374+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:44:06.573837+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:44:06.578058+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:44:06.578180+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:44:06.578271+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:44:06.578704+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:44:06.583877+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:44:06.585936+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:44:06.589155+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:44:06.590200+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:44:06.590683+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:44:06.591717+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:44:06.623620+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:44:06.630681+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:44:24.138989+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:44:24.143964+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:44:24.806723+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"31686a"},"request_uri":"http://localhost:8000/_wdt/31686a","method":"GET"} []
[2020-04-20T15:44:24.842850+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:44:24.851948+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:44:25.113988+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:44:25.120344+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:44:25.780602+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:44:25.788339+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:44:25.980620+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:44:26.019384+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:44:26.022606+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:44:26.022735+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:44:26.022877+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:44:26.023184+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:44:26.028434+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:44:26.032398+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:44:26.036963+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:44:26.038010+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:44:26.038571+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:44:26.039635+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:44:26.068700+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:44:26.076291+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:45:05.254061+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:45:05.264197+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:45:06.620976+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:45:06.630173+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:45:06.836147+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:45:06.869139+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:45:06.873066+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:45:06.873150+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:45:06.873194+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:45:06.873400+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:45:06.878535+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:45:06.882562+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:45:06.885800+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:45:06.887325+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:45:06.888278+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:45:06.889781+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:45:06.921916+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:45:06.928623+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:46:11.380788+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:46:11.386677+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:46:12.180595+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"52317c"},"request_uri":"http://localhost:8000/_wdt/52317c","method":"GET"} []
[2020-04-20T15:46:12.211374+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:46:12.218248+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:46:12.903221+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:46:12.913414+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:46:13.693685+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:46:13.702774+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:46:13.895487+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:46:13.934873+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:46:13.939351+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:46:13.939452+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:46:13.939533+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:46:13.939921+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:46:13.944456+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:46:13.946696+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:46:13.950231+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:46:13.951529+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:46:13.952114+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:46:13.953206+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:46:13.984718+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:46:13.993281+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:46:35.488129+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:46:35.492080+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:46:36.243344+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:46:36.251232+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:46:36.277786+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ca33f1"},"request_uri":"http://localhost:8000/_wdt/ca33f1","method":"GET"} []
[2020-04-20T15:46:36.763695+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:46:36.769282+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:46:37.524564+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:46:37.531466+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:46:37.721530+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:46:37.757166+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:46:37.760527+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:46:37.760628+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:46:37.760671+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:46:37.760906+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:46:37.768452+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:46:37.771567+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:46:37.775406+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:46:37.776543+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:46:37.777148+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:46:37.778152+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:46:37.806341+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:46:37.812888+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:47:04.580634+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:47:04.587043+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:47:05.244778+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"757e95"},"request_uri":"http://localhost:8000/_wdt/757e95","method":"GET"} []
[2020-04-20T15:47:05.285118+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:47:05.288930+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:47:05.786399+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:47:05.790564+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:47:06.512714+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:47:06.520295+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:47:06.520387+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:47:06.520497+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:47:06.520918+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:47:06.527333+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:47:06.534267+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:47:06.544268+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:47:06.547096+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:47:06.548097+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:47:06.550499+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:47:06.587370+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:47:06.593675+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:47:06.788892+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:47:06.824327+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:47:06.828377+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:47:21.348289+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:47:21.352663+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:47:22.034991+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ff3ecb"},"request_uri":"http://localhost:8000/_wdt/ff3ecb","method":"GET"} []
[2020-04-20T15:47:22.059317+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:47:22.065126+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:47:23.035203+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:47:23.043888+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:47:23.587224+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:47:23.595567+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:47:23.797476+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:47:23.834864+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:47:23.838833+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:47:23.838943+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:47:23.839015+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:47:23.839321+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:47:23.844434+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:47:23.846728+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:47:23.849743+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:47:23.850959+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:47:23.851596+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:47:23.852734+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:47:23.882068+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:47:23.891291+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:48:44.082585+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:48:44.087450+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:48:44.832535+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ae9c2"},"request_uri":"http://localhost:8000/_wdt/2ae9c2","method":"GET"} []
[2020-04-20T15:48:44.864542+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:48:44.873321+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:48:45.672130+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:48:45.678552+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:48:46.388565+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:48:46.401255+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:48:46.584982+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:48:46.626521+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:48:46.630718+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:48:46.630809+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:48:46.630874+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:48:46.631091+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:48:46.635026+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:48:46.638960+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:48:46.644328+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:48:46.646090+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:48:46.646693+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:48:46.648438+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:48:46.675782+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:48:46.682804+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:48:53.047111+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:48:53.052182+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:48:53.700643+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dc03b3"},"request_uri":"http://localhost:8000/_wdt/dc03b3","method":"GET"} []
[2020-04-20T15:48:53.746242+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:48:53.761948+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:48:55.280502+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:48:55.285096+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:48:55.868444+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:48:55.880448+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:48:56.055433+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:48:56.087327+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:48:56.092254+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:48:56.092362+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:48:56.092441+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:48:56.092762+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:48:56.097688+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:48:56.100204+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:48:56.103050+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:48:56.104417+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:48:56.105823+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:48:56.107090+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:48:56.132212+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:48:56.136600+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:49:04.566702+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:49:04.572554+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:49:05.344207+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"57bb45"},"request_uri":"http://localhost:8000/_wdt/57bb45","method":"GET"} []
[2020-04-20T15:49:05.380822+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:49:05.387877+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:49:06.132832+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:49:06.137836+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:49:06.796491+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:49:06.803312+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:49:06.965724+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:49:06.997415+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:49:07.000297+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:49:07.000380+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:49:07.000425+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:49:07.000629+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:49:07.005108+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:49:07.009083+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:49:07.012661+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:49:07.013699+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:49:07.014337+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:49:07.015179+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:49:07.045165+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:49:07.052303+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:49:34.280405+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:49:34.291626+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:49:34.926291+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b8ce66"},"request_uri":"http://localhost:8000/_wdt/b8ce66","method":"GET"} []
[2020-04-20T15:49:34.961427+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:49:34.966548+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:49:36.019892+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:49:36.025640+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:49:37.043215+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:49:37.052554+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:49:37.251834+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:49:37.286952+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:49:37.289873+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:49:37.289957+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:49:37.290002+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:49:37.290223+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:49:37.296024+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:49:37.299180+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:49:37.302349+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:49:37.303530+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:49:37.304187+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:49:37.305309+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:49:37.331501+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:49:37.339580+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:50:01.000316+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:50:01.005687+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:50:01.715523+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a50aa0"},"request_uri":"http://localhost:8000/_wdt/a50aa0","method":"GET"} []
[2020-04-20T15:50:01.743434+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:50:01.749160+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:50:02.441406+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:50:02.445992+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:50:03.160789+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:50:03.170517+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:50:03.361512+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:50:03.396299+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:50:03.401854+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:50:03.401954+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:50:03.402001+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:50:03.402311+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:50:03.408048+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:50:03.410022+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:50:03.413939+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:50:03.415290+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:50:03.415951+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:50:03.417053+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:50:03.448135+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:50:03.456614+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:50:32.098807+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:50:32.106220+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:50:32.858700+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4965fc"},"request_uri":"http://localhost:8000/_wdt/4965fc","method":"GET"} []
[2020-04-20T15:50:32.888023+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:50:32.894282+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:50:33.975695+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:50:33.980383+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:50:34.528253+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:50:34.536289+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:50:34.708289+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:50:34.743170+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:50:34.745905+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:50:34.745971+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:50:34.746019+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:50:34.746166+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:50:34.749404+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:50:34.753041+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:50:34.757136+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:50:34.758257+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:50:34.758852+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:50:34.760043+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:50:34.784514+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:50:34.791148+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:50:38.577589+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:50:38.581532+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:50:45.052013+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:50:45.058443+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:50:45.060083+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T15:50:45.100305+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaa","method":"GET"} []
[2020-04-20T15:50:45.107054+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:50:45.107170+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:50:45.107250+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:50:45.107629+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:50:45.115161+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:50:45.116758+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:50:45.147717+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:50:45.156489+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:50:47.332997+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:50:47.338238+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:50:56.862224+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:50:56.870743+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:50:57.059108+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:50:57.096203+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:50:57.100614+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:50:57.100719+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:50:57.100786+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:50:57.101126+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:50:57.106770+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:50:57.109366+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:50:57.112959+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:50:57.114003+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:50:57.114588+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:50:57.115594+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:50:57.141744+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:50:57.146698+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:51:22.244730+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:51:22.250255+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:51:23.067446+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8ad5bc"},"request_uri":"http://localhost:8000/_wdt/8ad5bc","method":"GET"} []
[2020-04-20T15:51:23.095103+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:51:23.101079+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:51:24.059670+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:51:24.067034+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:51:24.737186+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:51:24.746296+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:51:24.922659+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:51:24.960618+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:51:24.964962+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:51:24.965097+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:51:24.965161+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:51:24.965387+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:51:24.970661+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:51:24.973084+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:51:24.978500+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:51:24.979684+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:51:24.980209+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:51:24.981318+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:51:25.015567+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:51:25.022133+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:51:26.310297+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:51:26.315458+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:51:27.818278+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:51:27.827689+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:51:27.829929+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T15:51:27.865140+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaa","method":"GET"} []
[2020-04-20T15:51:27.876206+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:51:27.876325+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:51:27.876388+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:51:27.876653+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:51:27.881502+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:51:27.882759+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:51:27.912997+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:51:27.918684+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:51:31.410996+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:51:31.415334+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:54:37.486499+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:54:37.494095+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:54:38.259268+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cbfa5c"},"request_uri":"http://localhost:8000/_wdt/cbfa5c","method":"GET"} []
[2020-04-20T15:54:39.336205+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:54:39.340043+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:55:21.032519+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:55:21.042705+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:55:21.257556+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:55:21.293670+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:55:21.297683+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:55:21.297782+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:55:21.297842+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:55:21.298154+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:55:21.303289+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:55:21.305730+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:55:21.309034+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:55:21.310148+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:55:21.310633+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:55:21.312011+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:55:23.125585+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:55:23.134067+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:55:23.319644+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:55:23.353978+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:55:23.356816+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:55:23.356886+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:55:23.356924+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:55:23.357132+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:55:23.362326+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:55:23.364354+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:55:23.366835+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:55:23.367879+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:55:23.368340+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:55:23.369088+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:55:24.241250+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:55:24.251987+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:55:24.442532+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T15:55:24.480007+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T15:55:24.485959+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:55:24.486066+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:55:24.486145+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:55:24.486579+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:55:24.494339+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:55:24.498656+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:55:24.504801+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:55:24.506198+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:55:24.506942+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T15:55:24.508688+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T15:55:53.943754+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:55:53.948863+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:55:53.950641+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T15:55:53.979489+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaa","method":"GET"} []
[2020-04-20T15:55:53.984437+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:55:53.984532+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:55:53.984588+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:55:53.984876+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:55:53.991222+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:55:53.992925+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:55:56.591976+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaa","method":"GET"} []
[2020-04-20T15:55:56.596186+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:55:56.596268+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:55:56.596315+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:55:56.596555+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:55:56.603692+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:55:56.605128+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:55:56.639764+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:55:56.644056+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:55:56.645107+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T15:56:26.569243+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T15:56:26.575300+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:56:26.576063+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T15:56:26.603909+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaa","method":"GET"} []
[2020-04-20T15:56:26.608481+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T15:56:26.608558+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:56:26.608597+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T15:56:26.608790+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:56:26.613424+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:56:26.615054+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T15:57:42.569562+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:57:42.576130+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T15:57:43.226434+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8b1618"},"request_uri":"http://localhost:8000/_wdt/8b1618","method":"GET"} []
[2020-04-20T15:57:43.251706+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T15:57:43.257108+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T16:07:15.821867+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T16:07:15.826361+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T16:07:16.588988+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5fa5f6"},"request_uri":"http://localhost:8000/_wdt/5fa5f6","method":"GET"} []
[2020-04-20T16:07:16.634548+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T16:07:16.642742+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T16:07:17.527539+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T16:07:17.543710+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T16:07:17.547824+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2020-04-20T16:07:24.789394+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T16:07:24.802464+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T16:07:24.807330+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2020-04-20T16:07:42.218306+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T16:07:42.255191+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T16:07:42.257121+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2020-04-20T16:07:43.075804+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T16:07:43.084498+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T16:07:43.670733+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"488aa5"},"request_uri":"http://localhost:8000/_wdt/488aa5","method":"GET"} []
[2020-04-20T16:07:43.695898+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T16:07:43.702378+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T16:07:44.812517+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T16:07:44.821501+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T16:07:44.823881+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2020-04-20T16:08:09.738118+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T16:08:09.742558+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T16:08:09.908256+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T16:08:14.728373+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T16:08:14.734475+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T16:08:14.896734+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T16:08:38.075201+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T16:08:38.101730+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T16:08:38.282118+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T16:09:25.284715+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T16:09:25.289794+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T16:09:25.945397+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"897906"},"request_uri":"http://localhost:8000/_wdt/897906","method":"GET"} []
[2020-04-20T16:09:25.985419+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T16:09:25.992273+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T16:09:27.015831+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T16:09:27.023887+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T16:09:27.198225+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T16:09:41.941403+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T16:09:41.961508+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T16:09:42.123257+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T16:09:43.812682+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T16:09:43.824153+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T16:09:44.437054+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7d0c34"},"request_uri":"http://localhost:8000/_wdt/7d0c34","method":"GET"} []
[2020-04-20T16:09:44.468522+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T16:09:44.476665+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T16:09:45.076530+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T16:09:45.081673+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T16:09:45.264641+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T16:09:46.993852+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T16:09:47.001839+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T16:09:47.621996+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b89609"},"request_uri":"http://localhost:8000/_wdt/b89609","method":"GET"} []
[2020-04-20T16:09:47.655532+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T16:09:47.662813+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T16:09:50.627504+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T16:09:50.634976+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T16:09:51.289179+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e8d00d"},"request_uri":"http://localhost:8000/_wdt/e8d00d","method":"GET"} []
[2020-04-20T16:09:51.311962+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T16:09:51.317511+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T16:09:58.115245+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T16:09:58.121558+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T16:09:58.779696+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6014d1"},"request_uri":"http://localhost:8000/_wdt/6014d1","method":"GET"} []
[2020-04-20T16:09:58.813823+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T16:09:58.821635+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T16:10:00.306435+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T16:10:00.311520+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T16:10:00.496897+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T16:11:08.815884+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T16:11:08.823229+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T16:11:08.994029+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T16:11:26.921847+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T16:11:26.925883+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T16:11:27.542336+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9cf8f5"},"request_uri":"http://localhost:8000/_wdt/9cf8f5","method":"GET"} []
[2020-04-20T16:11:27.575451+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T16:11:27.579257+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T16:11:28.292443+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T16:11:28.303098+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T16:11:28.469482+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T16:11:30.627469+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T16:11:30.632892+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T16:11:30.840649+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T16:12:41.064146+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T16:12:41.082106+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T16:12:41.278692+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T16:13:19.845290+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T16:13:19.885960+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T16:13:20.102120+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T16:15:33.464975+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T16:15:33.483220+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T16:15:33.650113+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:16:51.778018+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:16:51.785802+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:16:52.518112+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0fb2e4"},"request_uri":"http://localhost:8000/_wdt/0fb2e4","method":"GET"} []
[2020-04-20T17:16:52.845551+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:16:52.849930+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:16:53.424038+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:16:53.429567+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:16:53.620385+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:16:53.659749+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:16:53.669768+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:16:53.669857+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:16:53.669907+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:16:53.670129+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:16:53.764144+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:16:53.769612+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:16:53.786936+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:16:53.790980+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:16:53.791746+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:16:53.792794+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:18:01.053106+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:18:01.057684+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaaa"] []
[2020-04-20T17:18:01.058425+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T17:18:01.090466+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaaa","method":"GET"} []
[2020-04-20T17:18:01.096180+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:18:01.096311+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:18:01.096405+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:18:01.096837+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:18:01.104240+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaaa"] []
[2020-04-20T17:18:01.105891+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaaa"] []
[2020-04-20T17:18:19.209975+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:18:19.217232+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaaa"] []
[2020-04-20T17:18:19.218465+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T17:18:19.256783+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaaa","method":"GET"} []
[2020-04-20T17:18:19.261737+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:18:19.261852+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:18:19.261928+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:18:19.262300+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:18:19.269187+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaaa"] []
[2020-04-20T17:18:19.270620+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaaa"] []
[2020-04-20T17:18:40.787460+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:18:40.791980+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:18:41.445126+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c4ed60"},"request_uri":"http://localhost:8000/_wdt/c4ed60","method":"GET"} []
[2020-04-20T17:18:41.476618+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:18:41.485106+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:18:43.528434+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:18:43.533652+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T17:18:43.535381+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T17:18:43.562477+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaa","method":"GET"} []
[2020-04-20T17:18:43.566103+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:18:43.566263+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:18:43.566386+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:18:43.566871+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:18:43.573021+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T17:18:43.575599+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T17:19:34.011791+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:19:34.025749+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.coma"] []
[2020-04-20T17:19:34.027852+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.coma\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T17:19:34.069149+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.coma","method":"GET"} []
[2020-04-20T17:19:34.074315+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:19:34.074423+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:19:34.074490+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:19:34.074878+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:19:34.081161+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.coma"] []
[2020-04-20T17:19:34.082737+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.coma"] []
[2020-04-20T17:19:35.479582+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:19:35.484917+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:19:35.654982+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:19:35.687557+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:19:35.692144+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:19:35.692222+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:19:35.692262+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:19:35.692435+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:19:35.696032+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:19:35.697794+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:19:35.703157+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:19:35.704456+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:19:35.705074+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:19:35.705980+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:25:15.249295+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:25:15.258001+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:25:16.045136+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d5943e"},"request_uri":"http://localhost:8000/_wdt/d5943e","method":"GET"} []
[2020-04-20T17:25:16.078309+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:25:16.088288+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:25:17.213614+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:25:17.222064+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:25:17.396387+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:25:17.430781+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:25:17.433742+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:25:17.433809+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:25:17.433845+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:25:17.434016+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:25:17.440023+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:25:17.443348+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:25:17.447537+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:25:17.448662+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:25:17.449163+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:25:17.450044+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:25:34.114122+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:25:34.118769+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:25:34.766804+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"323750"},"request_uri":"http://localhost:8000/_wdt/323750","method":"GET"} []
[2020-04-20T17:25:34.793933+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:25:34.800829+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:25:36.415998+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:25:36.424615+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:25:36.609585+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:25:36.645381+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:25:36.650532+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:25:36.650704+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:25:36.650808+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:25:36.651139+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:25:36.658294+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:25:36.661478+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:25:36.664709+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:25:36.665933+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:25:36.666533+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:25:36.667483+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:25:48.062805+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:25:48.067198+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:25:48.245308+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:25:48.281668+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:25:48.285324+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:25:48.285411+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:25:48.285468+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:25:48.285836+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:25:48.290989+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:25:48.293331+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:25:48.297022+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:25:48.298350+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:25:48.298982+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:25:48.300328+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:26:24.341155+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:26:24.346735+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:26:25.142226+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e3a305"},"request_uri":"http://localhost:8000/_wdt/e3a305","method":"GET"} []
[2020-04-20T17:26:25.189544+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:26:25.200815+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:26:26.673966+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:26:26.678099+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:26:27.267519+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"23c714"},"request_uri":"http://localhost:8000/_wdt/23c714","method":"GET"} []
[2020-04-20T17:26:27.295360+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:26:27.301190+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:26:28.311207+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:26:28.317980+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:26:28.491639+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:26:28.524811+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:26:28.527855+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:26:28.527919+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:26:28.527953+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:26:28.528098+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:26:28.531412+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:26:28.533248+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:26:28.536057+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:26:28.538018+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:26:28.538927+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:26:28.540484+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:26:32.759389+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:26:32.763569+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T17:26:32.764316+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T17:26:32.793904+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaa","method":"GET"} []
[2020-04-20T17:26:32.797425+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:26:32.797504+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:26:32.797544+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:26:32.797735+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:26:32.802767+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T17:26:32.804585+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T17:26:36.828530+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:26:36.832967+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:26:37.000454+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:26:37.032802+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:26:37.035417+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:26:37.035479+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:26:37.035514+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:26:37.035668+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:26:37.041409+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:26:37.043733+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:26:37.046621+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:26:37.047586+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:26:37.048032+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:26:37.048887+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:27:47.191036+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:27:47.196730+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:27:47.890582+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1dcc4a"},"request_uri":"http://localhost:8000/_wdt/1dcc4a","method":"GET"} []
[2020-04-20T17:27:47.956003+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:27:47.963060+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:27:48.830624+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:27:48.835979+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:27:49.006757+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:27:49.036968+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:27:49.042508+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:27:49.042631+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:27:49.042690+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:27:49.043113+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:27:49.047766+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:27:49.050266+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:27:49.053734+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:27:49.055565+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:27:49.056253+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:27:49.057373+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:28:39.977007+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:28:39.980893+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:28:40.603922+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"48ac1a"},"request_uri":"http://localhost:8000/_wdt/48ac1a","method":"GET"} []
[2020-04-20T17:28:40.659757+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:28:40.666537+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:28:41.210916+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:28:41.215932+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:28:41.384335+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:28:41.414990+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:28:41.417812+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:28:41.417881+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:28:41.417919+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:28:41.418107+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:28:41.423783+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:28:41.426958+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:28:41.430471+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:28:41.431452+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:28:41.431844+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:28:41.432673+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:28:46.836295+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:28:46.841618+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:28:47.419488+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fb2cd3"},"request_uri":"http://localhost:8000/_wdt/fb2cd3","method":"GET"} []
[2020-04-20T17:28:47.448749+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:28:47.453340+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:28:48.104701+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:28:48.112727+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:28:48.281987+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:28:48.314208+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:28:48.317013+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:28:48.317095+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:28:48.317139+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:28:48.317343+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:28:48.321819+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:28:48.325934+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:28:48.329372+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:28:48.330353+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:28:48.330792+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:28:48.331587+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:29:19.148332+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:29:19.152687+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:29:19.793802+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"40072f"},"request_uri":"http://localhost:8000/_wdt/40072f","method":"GET"} []
[2020-04-20T17:29:19.815024+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:29:19.819221+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:29:20.685258+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:29:20.693800+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:29:20.863535+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:29:20.896284+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:29:20.900074+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:29:20.900161+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:29:20.900214+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:29:20.900556+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:29:20.905015+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:29:20.908737+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:29:20.912373+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:29:20.913299+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:29:20.913670+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:29:20.914496+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:30:48.361304+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:30:48.370575+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:30:49.137572+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9fd41b"},"request_uri":"http://localhost:8000/_wdt/9fd41b","method":"GET"} []
[2020-04-20T17:30:49.251442+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:30:49.258752+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:31:19.062842+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:31:19.066852+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:31:19.702693+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b551d9"},"request_uri":"http://localhost:8000/_wdt/b551d9","method":"GET"} []
[2020-04-20T17:31:19.737859+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:31:19.743516+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:31:21.096761+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:31:21.102841+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:31:21.277604+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:31:21.310848+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:31:21.315337+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:31:21.315415+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:31:21.315471+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:31:21.317261+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:31:21.318175+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:31:21.320124+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:31:21.320357+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:31:21.320396+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:31:21.324186+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:31:21.328714+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:31:21.329826+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:31:21.330279+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:31:21.331137+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:33:51.284018+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:33:51.289314+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:33:51.940110+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b03758"},"request_uri":"http://localhost:8000/_wdt/b03758","method":"GET"} []
[2020-04-20T17:33:52.250543+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:33:52.254125+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:34:21.241109+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:34:21.248503+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:34:21.983987+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"becc1c"},"request_uri":"http://localhost:8000/_wdt/becc1c","method":"GET"} []
[2020-04-20T17:34:22.013462+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:34:22.021156+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:34:23.274557+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:34:23.284484+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:34:23.459530+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:34:23.490409+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:34:23.493462+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:34:23.493587+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:34:23.493684+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:34:23.494699+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:34:23.495823+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:34:23.498906+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:34:23.499369+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:34:23.499455+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:34:23.504238+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:34:23.507818+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:34:23.508820+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:34:23.509274+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:34:23.510718+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:34:46.901929+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:34:46.908314+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:34:47.526673+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4613f5"},"request_uri":"http://localhost:8000/_wdt/4613f5","method":"GET"} []
[2020-04-20T17:34:47.550367+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:34:47.555790+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:34:48.116696+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:34:48.123138+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:34:48.301600+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:34:48.339548+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:34:48.343923+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:34:48.344050+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:34:48.344165+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:34:48.345238+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:34:48.346580+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:34:48.350654+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:34:48.351128+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:34:48.351230+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:34:48.355581+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:34:48.359173+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:34:48.360453+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:34:48.361222+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:34:48.362451+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:36:15.917319+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:36:15.923638+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:36:16.648021+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6de19b"},"request_uri":"http://localhost:8000/_wdt/6de19b","method":"GET"} []
[2020-04-20T17:36:16.676007+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:36:16.681290+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:36:17.306361+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:36:17.311699+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:36:17.483290+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:36:17.516626+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:36:17.519604+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:36:17.519671+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:36:17.519717+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:36:17.520216+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:36:17.521113+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:36:17.523174+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:36:17.523411+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:36:17.523449+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:36:17.527067+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:36:17.530356+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:36:17.531773+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:36:17.532373+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:36:17.533709+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:36:39.293372+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:36:39.298699+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:36:39.887671+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9a3fe2"},"request_uri":"http://localhost:8000/_wdt/9a3fe2","method":"GET"} []
[2020-04-20T17:36:39.912906+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:36:39.919192+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:36:40.732031+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:36:40.737382+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:36:40.907945+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:36:40.939978+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:36:40.942677+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:36:40.942745+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:36:40.942792+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:36:40.943581+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:36:40.944759+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:36:40.947813+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:36:40.948480+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:36:40.948627+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:36:40.954239+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:36:40.957775+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:36:40.959011+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:36:40.959492+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:36:40.960285+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:36:52.897602+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:36:52.903621+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:36:53.530520+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"54bf70"},"request_uri":"http://localhost:8000/_wdt/54bf70","method":"GET"} []
[2020-04-20T17:36:53.565929+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:36:53.572657+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:36:54.178982+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:36:54.187639+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:36:54.359568+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:36:54.389712+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:36:54.392271+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:36:54.392339+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:36:54.392386+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:36:54.392900+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:36:54.393848+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:36:54.396780+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:36:54.397203+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:36:54.397284+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:36:54.403732+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:36:54.407056+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:36:54.408059+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:36:54.408510+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:36:54.409379+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:37:10.426198+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:37:10.433022+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:37:11.129769+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b0791c"},"request_uri":"http://localhost:8000/_wdt/b0791c","method":"GET"} []
[2020-04-20T17:37:11.154448+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:37:11.158743+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:37:11.692449+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:37:11.699552+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:37:11.870859+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:37:11.904110+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:37:11.907971+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:37:11.908051+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:37:11.908109+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:37:11.908701+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:37:11.909571+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:37:11.911735+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:37:11.911979+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:37:11.912018+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:37:11.917992+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:37:11.921341+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:37:11.922753+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:37:11.923334+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:37:11.924538+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:42:44.241675+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:42:44.248086+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:42:44.908223+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"70b9a7"},"request_uri":"http://localhost:8000/_wdt/70b9a7","method":"GET"} []
[2020-04-20T17:42:44.939075+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:42:44.945185+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:42:46.149141+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:42:46.155845+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:42:46.357289+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:42:46.392667+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:42:46.396414+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:42:46.396499+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:42:46.396582+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:42:46.397453+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:42:46.398689+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:42:46.401680+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:42:46.402279+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:42:46.402408+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:42:46.408266+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:42:46.412074+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:42:46.413124+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:42:46.413519+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:42:46.414390+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:44:03.344587+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:44:03.350607+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:44:03.959774+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3a8ce2"},"request_uri":"http://localhost:8000/_wdt/3a8ce2","method":"GET"} []
[2020-04-20T17:44:04.063273+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:44:04.077337+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:44:05.081645+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:44:05.088152+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:44:05.293274+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:44:05.330584+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:44:05.335583+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:44:05.335740+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:44:05.335928+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:44:05.337251+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:44:05.338633+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:44:05.342109+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:44:05.342523+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:44:05.342626+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:44:05.346851+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:44:05.350971+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:44:05.352428+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:44:05.353193+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:44:05.354478+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:45:28.309406+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:45:28.316640+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:45:28.960026+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"332e9d"},"request_uri":"http://localhost:8000/_wdt/332e9d","method":"GET"} []
[2020-04-20T17:45:29.065077+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:45:29.073858+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:45:30.031952+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:45:30.039150+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:45:30.213769+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:45:30.245813+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:45:30.248492+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:45:30.248569+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:45:30.248629+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:45:30.249339+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:45:30.250243+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:45:30.252166+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:45:30.252798+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:45:30.252927+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:45:30.259465+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:45:30.262792+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:45:30.263693+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:45:30.264102+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:45:30.264885+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:46:18.396165+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:46:18.400093+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:46:19.062698+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"11922f"},"request_uri":"http://localhost:8000/_wdt/11922f","method":"GET"} []
[2020-04-20T17:46:19.095512+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:46:19.108577+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:46:19.746483+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T17:46:19.751097+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:46:19.918300+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T17:46:19.948844+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T17:46:19.951420+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T17:46:19.951483+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:46:19.951529+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:46:19.952118+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:46:19.952866+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:46:19.956532+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:46:19.956932+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:46:19.957031+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T17:46:19.961812+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:46:19.965620+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:46:19.966514+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:46:19.966876+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T17:46:19.967958+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T17:53:12.254190+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:53:12.264425+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:53:13.129177+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"01db68"},"request_uri":"http://localhost:8000/_wdt/01db68","method":"GET"} []
[2020-04-20T17:53:13.335206+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:53:13.343868+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:53:18.290949+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:53:18.297960+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:53:18.950139+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3d1157"},"request_uri":"http://localhost:8000/_wdt/3d1157","method":"GET"} []
[2020-04-20T17:53:19.304481+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:53:19.308143+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:54:04.296023+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:54:04.304670+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:54:04.949334+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f483e0"},"request_uri":"http://localhost:8000/_wdt/f483e0","method":"GET"} []
[2020-04-20T17:54:05.354516+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:54:05.364421+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:57:58.344731+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:57:58.353614+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:57:58.991540+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"08399d"},"request_uri":"http://localhost:8000/_wdt/08399d","method":"GET"} []
[2020-04-20T17:57:59.255851+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:57:59.260144+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:58:27.304550+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:58:27.311353+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:58:27.903609+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b148c6"},"request_uri":"http://localhost:8000/_wdt/b148c6","method":"GET"} []
[2020-04-20T17:58:28.309631+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:58:28.315122+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:58:56.308967+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:58:56.315534+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:58:56.934417+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"74a83f"},"request_uri":"http://localhost:8000/_wdt/74a83f","method":"GET"} []
[2020-04-20T17:58:57.285395+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:58:57.289362+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:59:18.242015+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:59:18.246643+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T17:59:18.901657+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"94982e"},"request_uri":"http://localhost:8000/_wdt/94982e","method":"GET"} []
[2020-04-20T17:59:19.307133+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T17:59:19.312775+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:02:12.302165+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:02:12.321873+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:02:13.015016+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"80177a"},"request_uri":"http://localhost:8000/_wdt/80177a","method":"GET"} []
[2020-04-20T18:02:13.043185+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:02:13.051377+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:02:13.746154+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:02:13.755444+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:02:13.922343+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:02:13.955586+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:02:13.959248+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:02:13.959325+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:02:13.959382+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:02:13.959998+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:02:13.960766+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:02:13.962911+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:02:13.963169+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:02:13.963209+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:02:13.968344+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:02:13.973063+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:02:13.974209+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:02:13.974822+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:02:13.975919+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:04:18.982540+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:04:18.990873+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:04:19.685356+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b4d488"},"request_uri":"http://localhost:8000/_wdt/b4d488","method":"GET"} []
[2020-04-20T18:04:19.712391+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:04:19.719991+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:04:20.163333+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:04:20.170113+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:04:20.332363+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:04:20.363295+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:04:20.365906+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:04:20.365970+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:04:20.366017+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:04:20.366764+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:04:20.368664+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:04:20.371671+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:04:20.371992+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:04:20.372053+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:04:20.376393+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:04:20.380638+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:04:20.381929+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:04:20.382516+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:04:20.383859+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:04:26.346839+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:04:26.354680+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:04:26.983007+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4b5d01"},"request_uri":"http://localhost:8000/_wdt/4b5d01","method":"GET"} []
[2020-04-20T18:04:27.012024+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:04:27.016206+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:05:01.929711+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:05:01.933716+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:05:02.494699+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6a77d8"},"request_uri":"http://localhost:8000/_wdt/6a77d8","method":"GET"} []
[2020-04-20T18:05:02.525587+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:05:02.531512+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:05:05.568004+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:05:05.581399+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:05:05.755863+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:05:05.789265+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:05:05.792828+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:05:05.792939+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:05:05.793037+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:05:05.794121+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:05:05.795473+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:05:05.798411+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:05:05.798769+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:05:05.798828+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:05:05.803998+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:05:05.808799+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:05:05.810242+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:05:05.810723+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:05:05.811820+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:05:44.107795+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:05:44.112412+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:05:44.854129+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c26b69"},"request_uri":"http://localhost:8000/_wdt/c26b69","method":"GET"} []
[2020-04-20T18:05:44.879118+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:05:44.883358+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:06:05.089917+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:06:05.093722+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:06:05.778445+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b73d0d"},"request_uri":"http://localhost:8000/_wdt/b73d0d","method":"GET"} []
[2020-04-20T18:06:05.804916+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:06:05.810340+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:06:29.458595+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:06:29.466487+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:06:30.077801+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1388c8"},"request_uri":"http://localhost:8000/_wdt/1388c8","method":"GET"} []
[2020-04-20T18:06:30.103742+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:06:30.110286+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:06:33.528432+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:06:33.532543+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:06:33.701175+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:06:33.733115+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:06:33.737877+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:06:33.737979+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:06:33.738073+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:06:33.739305+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:06:33.740569+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:06:33.742988+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:06:33.743249+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:06:33.743299+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:06:33.747754+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:06:33.751919+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:06:33.753286+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:06:33.753799+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:06:33.754853+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:06:50.599911+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:06:50.605309+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:06:51.197936+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2497e2"},"request_uri":"http://localhost:8000/_wdt/2497e2","method":"GET"} []
[2020-04-20T18:06:51.222643+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:06:51.228394+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:06:51.716840+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:06:51.726321+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:06:51.904041+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:06:51.936243+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:06:51.939669+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:06:51.939737+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:06:51.939786+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:06:51.940322+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:06:51.941246+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:06:51.943468+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:06:51.943726+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:06:51.943767+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:06:51.947474+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:06:51.950364+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:06:51.951993+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:06:51.952733+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:06:51.954138+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:10:31.764607+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:10:31.770927+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:10:32.550024+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"deff35"},"request_uri":"http://localhost:8000/_wdt/deff35","method":"GET"} []
[2020-04-20T18:10:32.599411+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:10:32.606421+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:10:33.265378+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:10:33.273738+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:10:33.443002+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:10:33.475498+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:10:33.478863+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:10:33.478990+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:10:33.479057+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:10:33.479783+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:10:33.480560+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:10:33.482319+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:10:33.482560+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:10:33.482601+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:10:33.487343+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:10:33.491845+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:10:33.492940+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:10:33.493411+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:10:33.494211+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:11:02.035303+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:11:02.041355+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:11:02.745893+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8f3f4f"},"request_uri":"http://localhost:8000/_wdt/8f3f4f","method":"GET"} []
[2020-04-20T18:11:02.766697+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:11:02.773677+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:11:03.255431+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:11:03.264531+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:11:03.430710+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:11:03.461583+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:11:03.464362+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:11:03.464457+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:11:03.464521+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:11:03.465361+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:11:03.466569+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:11:03.468611+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:11:03.468998+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:11:03.469145+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:11:03.474757+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:11:03.477858+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:11:03.478750+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:11:03.479155+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:11:03.479915+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:11:26.352403+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:11:26.360237+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:11:26.984892+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"be23ab"},"request_uri":"http://localhost:8000/_wdt/be23ab","method":"GET"} []
[2020-04-20T18:11:27.015517+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:11:27.021025+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:23:22.765763+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:23:22.772690+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:23:23.632220+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5296f7"},"request_uri":"http://localhost:8000/_wdt/5296f7","method":"GET"} []
[2020-04-20T18:23:23.705028+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:23:23.715147+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:23:24.401785+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:23:24.407349+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:23:24.575209+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:23:24.606192+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:23:24.609422+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:23:24.609549+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:23:24.609651+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:23:24.610718+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:23:24.611839+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:23:24.614033+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:23:24.614336+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:23:24.614388+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:23:24.618585+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:23:24.621998+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:23:24.622871+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:23:24.623256+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:23:24.624010+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:23:27.450544+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:23:27.454880+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:23:27.621925+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:23:27.653836+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:23:27.657026+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:23:27.657112+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:23:27.657178+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:23:27.657954+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:23:27.659461+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:23:27.662566+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:23:27.662862+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:23:27.662948+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:23:27.667824+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:23:27.670851+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:23:27.671760+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:23:27.672131+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:23:27.673026+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:23:29.988146+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:23:29.991567+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:23:29.992782+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T18:23:30.023686+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaa","method":"GET"} []
[2020-04-20T18:23:30.031211+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:23:30.031328+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:23:30.031429+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:23:30.032455+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:23:30.033806+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:23:30.036626+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:23:30.037118+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:23:30.037204+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:23:30.045071+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:23:30.046533+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:24:06.637852+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:24:06.648035+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:24:07.290170+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"21a875"},"request_uri":"http://localhost:8000/_wdt/21a875","method":"GET"} []
[2020-04-20T18:24:07.316188+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:24:07.322139+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:24:07.919419+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:24:07.924193+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:24:08.089743+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:24:08.120675+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:24:08.123344+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:24:08.123415+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:08.123462+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:08.124055+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:08.125158+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:24:08.127815+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:08.128066+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:08.128109+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:08.132981+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:24:08.136043+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:24:08.137032+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:24:08.137481+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:24:08.138372+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:24:25.069620+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:24:25.073608+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:24:25.678478+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c43959"},"request_uri":"http://localhost:8000/_wdt/c43959","method":"GET"} []
[2020-04-20T18:24:25.717528+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:24:25.727284+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:24:26.250025+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:24:26.254189+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:24:26.422366+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:24:26.453986+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:24:26.456602+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:24:26.456672+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:26.456720+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:26.457234+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:26.458250+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:24:26.461540+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:26.461906+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:26.461993+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:26.467054+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:24:26.470567+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:24:26.471607+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:24:26.472099+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:24:26.472990+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:24:45.266679+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:24:45.272685+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:24:45.940552+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"261c15"},"request_uri":"http://localhost:8000/_wdt/261c15","method":"GET"} []
[2020-04-20T18:24:45.984892+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:24:45.991295+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:24:46.575097+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:24:46.583347+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:24:46.755921+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:24:46.786259+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:24:46.788922+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:24:46.788987+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:46.789036+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:46.789555+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:46.790568+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:24:46.793316+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:46.793597+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:46.793638+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:46.797382+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:24:46.800213+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:24:46.801165+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:24:46.801590+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:24:46.802410+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:24:46.862917+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:24:46.867381+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:24:49.081709+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:24:49.085759+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:24:53.281921+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:24:53.287264+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:24:53.454473+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:24:53.484961+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:24:53.487456+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:24:53.487521+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:53.487557+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:53.487715+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:24:53.491663+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:24:53.495419+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:24:53.499689+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:24:53.500966+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:24:53.501495+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:24:53.502301+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:24:53.583580+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:24:53.589984+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:24:54.985593+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:24:54.989343+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:24:57.807407+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:24:57.814940+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:24:57.815983+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T18:24:57.842215+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaa","method":"GET"} []
[2020-04-20T18:24:57.846610+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:24:57.846713+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:57.846779+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:24:57.847144+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:24:57.854029+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:24:57.855248+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:25:00.069987+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:25:00.075110+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:25:00.076134+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T18:25:00.110642+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaa","method":"GET"} []
[2020-04-20T18:25:00.115895+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:25:00.115981+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:25:00.116047+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:25:00.116358+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:25:00.121507+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:25:00.122938+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:27:55.846739+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:27:55.853043+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaaaa"] []
[2020-04-20T18:27:55.853723+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaaaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T18:27:55.884175+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaaaa","method":"GET"} []
[2020-04-20T18:27:55.888754+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:27:55.888876+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:27:55.888956+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:27:55.889346+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:27:55.898219+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaaaa"] []
[2020-04-20T18:27:55.900185+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaaaa"] []
[2020-04-20T18:28:20.426449+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:28:20.432933+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:28:21.033331+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"69cf29"},"request_uri":"http://localhost:8000/_wdt/69cf29","method":"GET"} []
[2020-04-20T18:28:21.061435+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:28:21.069424+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:28:22.139719+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:28:22.145256+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:28:22.314585+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:28:22.343770+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:28:22.348080+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:28:22.348174+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:28:22.348230+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:28:22.348509+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:28:22.353597+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:28:22.355714+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:28:22.359333+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:28:22.360305+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:28:22.360749+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:28:22.362150+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:28:22.435074+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:28:22.438615+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:28:24.791793+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:28:24.797046+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:28:28.493641+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:28:28.500901+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:28:28.501958+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T18:28:28.526241+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaa","method":"GET"} []
[2020-04-20T18:28:28.532352+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:28:28.532434+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:28:28.532502+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:28:28.532767+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:28:28.543281+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:28:28.544951+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:28:44.309298+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:28:44.316966+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:28:45.023301+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e49166"},"request_uri":"http://localhost:8000/_wdt/e49166","method":"GET"} []
[2020-04-20T18:28:45.042603+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:28:45.048576+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:28:45.999629+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:28:46.008749+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:28:46.193431+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:28:46.227935+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:28:46.232172+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:28:46.232248+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:28:46.232286+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:28:46.232439+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:28:46.236105+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:28:46.238077+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:28:46.241191+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:28:46.242252+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:28:46.242756+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:28:46.243803+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:28:46.329947+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:28:46.336097+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:28:47.240960+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:28:47.245603+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:28:48.745618+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:28:48.751958+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:28:48.752804+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T18:28:48.782014+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaa","method":"GET"} []
[2020-04-20T18:28:48.787867+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:28:48.787987+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:28:48.788070+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:28:48.788407+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:28:48.794915+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:28:48.797614+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:28:50.958735+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:28:50.964793+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:28:50.966031+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T18:28:50.992263+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaa","method":"GET"} []
[2020-04-20T18:28:50.996133+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:28:50.996259+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:28:50.996368+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:28:50.996844+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:28:51.003806+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:28:51.005440+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:28:52.984820+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:28:52.988568+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:28:52.989226+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T18:28:53.018736+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaa","method":"GET"} []
[2020-04-20T18:28:53.024568+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:28:53.024687+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:28:53.024763+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:28:53.025231+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:28:53.032430+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:28:53.034092+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:29:08.004285+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:29:08.008940+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:29:08.615538+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"569074"},"request_uri":"http://localhost:8000/_wdt/569074","method":"GET"} []
[2020-04-20T18:29:08.646131+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:29:08.656961+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:29:09.325974+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:29:09.331769+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:29:09.503298+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:29:09.535364+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:29:09.539422+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:29:09.539524+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:29:09.539589+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:29:09.539883+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:29:09.544031+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:29:09.547035+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:29:09.550572+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:29:09.551525+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:29:09.552000+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:29:09.552888+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:29:09.618404+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:29:09.622154+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:29:11.141788+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:29:11.148670+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:29:12.477766+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:29:12.486342+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:29:12.487218+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T18:29:12.512792+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaa","method":"GET"} []
[2020-04-20T18:29:12.518899+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:29:12.519025+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:29:12.519106+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:29:12.519501+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:29:12.527135+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:29:12.528877+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:29:23.508993+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:29:23.517074+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:29:24.134565+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aef34d"},"request_uri":"http://localhost:8000/_wdt/aef34d","method":"GET"} []
[2020-04-20T18:29:24.156540+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:29:24.162332+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:29:33.058671+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:29:33.065522+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:29:33.644510+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"667391"},"request_uri":"http://localhost:8000/_wdt/667391","method":"GET"} []
[2020-04-20T18:29:33.662710+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:29:33.667600+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:29:34.722109+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:29:34.726913+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:29:34.888474+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:29:34.919228+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:29:34.922720+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:29:34.922786+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:29:34.922824+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:29:34.923010+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:29:34.927170+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:29:34.930153+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:29:34.933791+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:29:34.934877+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:29:34.935361+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:29:34.936199+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:29:51.881903+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:29:51.887188+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:29:52.477234+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b5f70c"},"request_uri":"http://localhost:8000/_wdt/b5f70c","method":"GET"} []
[2020-04-20T18:29:52.503477+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:29:52.510044+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:29:54.666996+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:29:54.673291+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:29:54.674272+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T18:29:54.704144+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.comaa","method":"GET"} []
[2020-04-20T18:29:54.708106+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:29:54.708217+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:29:54.708291+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:29:54.708663+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:29:54.716347+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:29:54.717530+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:30:56.371199+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:30:56.380113+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:30:56.998871+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9b6b9d"},"request_uri":"http://localhost:8000/_wdt/9b6b9d","method":"GET"} []
[2020-04-20T18:30:57.024911+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:30:57.031363+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:35:55.512078+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:35:55.522603+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:35:56.195391+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bcdd43"},"request_uri":"http://localhost:8000/_wdt/bcdd43","method":"GET"} []
[2020-04-20T18:35:56.223889+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:35:56.229166+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:35:57.536280+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:35:57.543330+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:35:57.712586+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:36:17.768068+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:36:17.774152+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:36:18.522612+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"23234a"},"request_uri":"http://localhost:8000/_wdt/23234a","method":"GET"} []
[2020-04-20T18:36:18.551602+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:36:18.558439+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:36:19.062284+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:36:19.068806+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:36:19.234134+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:38:13.542583+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:38:13.547322+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:38:14.251475+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2c4dee"},"request_uri":"http://localhost:8000/_wdt/2c4dee","method":"GET"} []
[2020-04-20T18:38:14.280817+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:38:14.288859+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:44:36.365452+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:44:36.376886+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:44:37.033932+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"649aec"},"request_uri":"http://localhost:8000/_wdt/649aec","method":"GET"} []
[2020-04-20T18:44:37.280018+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:44:37.285252+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:44:47.316941+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:44:47.328752+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:44:48.078821+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"07eaa2"},"request_uri":"http://localhost:8000/_wdt/07eaa2","method":"GET"} []
[2020-04-20T18:44:48.332849+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:44:48.337720+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:44:54.247049+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:44:54.252175+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:44:54.912783+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5a8bff"},"request_uri":"http://localhost:8000/_wdt/5a8bff","method":"GET"} []
[2020-04-20T18:44:55.410939+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:44:55.421346+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:45:07.271249+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:45:07.277121+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:45:07.986250+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"da6c23"},"request_uri":"http://localhost:8000/_wdt/da6c23","method":"GET"} []
[2020-04-20T18:45:08.249463+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:45:08.253341+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:45:46.324769+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:45:46.331800+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:45:46.950707+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9003fd"},"request_uri":"http://localhost:8000/_wdt/9003fd","method":"GET"} []
[2020-04-20T18:45:47.368373+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:45:47.374010+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:49:50.287974+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:49:50.295638+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:49:50.914063+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"98854d"},"request_uri":"http://localhost:8000/_wdt/98854d","method":"GET"} []
[2020-04-20T18:49:51.339546+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:49:51.344204+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:50:15.358248+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:50:15.369323+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:50:16.031431+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6230c5"},"request_uri":"http://localhost:8000/_wdt/6230c5","method":"GET"} []
[2020-04-20T18:50:16.377219+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:50:16.385060+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:50:25.690376+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:50:25.697420+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:50:25.868754+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:50:34.001005+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:50:34.006365+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:50:34.650839+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6eccd4"},"request_uri":"http://localhost:8000/_wdt/6eccd4","method":"GET"} []
[2020-04-20T18:50:34.676960+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:50:34.685542+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:50:35.086089+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:50:35.094972+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:50:35.266710+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:50:35.294996+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:50:35.297888+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:50:35.458222+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:50:42.357975+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:50:42.363533+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:50:43.117313+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e7be21"},"request_uri":"http://localhost:8000/_wdt/e7be21","method":"GET"} []
[2020-04-20T18:50:43.152825+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:50:43.163595+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:51:10.334021+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:51:10.340407+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:51:11.097321+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1d020d"},"request_uri":"http://localhost:8000/_wdt/1d020d","method":"GET"} []
[2020-04-20T18:51:11.239381+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:51:11.249001+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:51:11.844898+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:51:11.852224+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:51:12.025778+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:51:23.164665+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:51:23.169994+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:51:23.171031+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T18:51:45.271369+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:51:45.277583+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:51:45.887226+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d508b2"},"request_uri":"http://localhost:8000/_wdt/d508b2","method":"GET"} []
[2020-04-20T18:51:45.994254+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:51:46.002208+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:51:46.658196+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:51:46.666874+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:51:46.847153+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:51:48.980519+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:51:48.987027+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:51:48.988138+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T18:54:11.322674+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:54:11.330357+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:54:11.986103+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"00909c"},"request_uri":"http://localhost:8000/_wdt/00909c","method":"GET"} []
[2020-04-20T18:54:12.085679+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:54:12.092221+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:54:13.036879+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:54:13.043780+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:54:13.236023+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:54:25.189079+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:54:25.192839+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["aasimon.mohimont@hotmail.com"] []
[2020-04-20T18:54:25.193624+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"aasimon.mohimont@hotmail.com\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T18:56:10.973328+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:56:10.977174+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:56:11.576701+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f1cad6"},"request_uri":"http://localhost:8000/_wdt/f1cad6","method":"GET"} []
[2020-04-20T18:56:11.596940+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:56:11.602051+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:56:49.003308+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:56:49.009172+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:56:49.598949+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2d54c6"},"request_uri":"http://localhost:8000/_wdt/2d54c6","method":"GET"} []
[2020-04-20T18:56:49.621197+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:56:49.627627+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:56:50.302105+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:56:50.307747+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:56:50.499974+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:56:50.549811+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:56:50.552708+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:56:50.552771+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:56:50.552811+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:56:50.552959+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:56:50.556246+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:56:50.558192+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:56:50.561528+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:56:50.562931+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:56:50.563688+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:56:50.565037+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:56:59.335505+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:56:59.339428+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:57:00.010579+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cdab69"},"request_uri":"http://localhost:8000/_wdt/cdab69","method":"GET"} []
[2020-04-20T18:57:00.042721+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:57:00.050968+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:57:00.452194+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:57:00.456496+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:57:00.639420+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:57:00.694178+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:57:00.698946+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:57:00.699026+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:57:00.699066+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:57:00.699240+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:57:00.704051+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:57:00.706289+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:57:00.709513+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:57:00.710585+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:57:00.711125+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:57:00.712175+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:57:18.966158+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:57:18.970550+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:57:19.588950+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6185af"},"request_uri":"http://localhost:8000/_wdt/6185af","method":"GET"} []
[2020-04-20T18:57:19.610510+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:57:19.616608+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:57:20.070222+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:57:20.075178+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:57:20.242675+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:57:20.285228+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:57:20.287865+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:57:20.287929+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:57:20.287964+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:57:20.288111+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:57:20.291242+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:57:20.293085+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:57:20.296028+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:57:20.297695+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:57:20.298405+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:57:20.299502+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:57:34.057598+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:57:34.061462+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:57:34.646875+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f40746"},"request_uri":"http://localhost:8000/_wdt/f40746","method":"GET"} []
[2020-04-20T18:57:34.674658+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T18:57:34.683106+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:57:38.067786+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:57:38.072392+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:57:38.237975+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T18:57:38.289096+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T18:57:38.294942+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T18:57:38.295032+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:57:38.295091+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T18:57:38.295289+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T18:57:38.302925+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:57:38.306299+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:57:38.311281+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:57:38.312885+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:57:38.313983+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T18:57:38.315728+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T18:57:41.252397+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T18:57:41.260061+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T18:57:41.261412+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T19:01:00.783223+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:01:00.790710+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:01:01.451220+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d9cf24"},"request_uri":"http://localhost:8000/_wdt/d9cf24","method":"GET"} []
[2020-04-20T19:01:01.514775+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:01:01.521892+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:01:04.357498+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:01:04.367424+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:01:04.555258+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T19:01:04.615602+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T19:01:04.619989+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T19:01:04.620088+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:01:04.620164+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:01:04.620896+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:01:04.621950+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:01:04.624742+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:01:04.625143+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:01:04.625206+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:01:04.630103+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:01:04.636152+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:01:04.637503+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:01:04.638207+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:01:04.639556+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:01:25.546437+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:01:25.553248+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:01:26.144015+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"51f378"},"request_uri":"http://localhost:8000/_wdt/51f378","method":"GET"} []
[2020-04-20T19:01:26.188618+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:01:26.196479+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:01:26.775761+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:01:26.781192+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:01:26.944730+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T19:01:27.013208+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T19:01:27.021546+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T19:01:27.021639+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:01:27.021727+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:01:27.022661+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:01:27.023509+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:01:27.025362+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:01:27.025665+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:01:27.025712+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:01:27.085221+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:01:27.103560+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:01:27.104487+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:01:27.105472+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:01:27.106701+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:01:42.229767+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:01:42.236998+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:01:42.856290+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"33e067"},"request_uri":"http://localhost:8000/_wdt/33e067","method":"GET"} []
[2020-04-20T19:01:42.884924+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:01:42.891231+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:02:14.752833+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:02:14.760739+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:02:14.921395+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T19:02:14.971797+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T19:02:14.975433+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T19:02:14.975530+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:14.975620+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:14.976498+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:14.977587+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:02:14.980065+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:14.980708+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:14.980866+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:14.987521+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:02:14.991519+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:02:14.992546+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:02:14.993009+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:02:14.993891+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:02:16.434130+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:02:16.443006+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:02:17.199505+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"623369"},"request_uri":"http://localhost:8000/_wdt/623369","method":"GET"} []
[2020-04-20T19:02:17.219755+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:02:17.225954+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:02:18.132230+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:02:18.137970+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:02:18.309908+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T19:02:18.353200+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T19:02:18.358363+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T19:02:18.358458+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:18.358532+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:18.359559+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:18.361301+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:02:18.363968+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:18.364211+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:18.364248+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:18.367553+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:02:18.371592+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:02:18.373061+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:02:18.374042+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:02:18.375566+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:02:32.198650+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:02:32.204139+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:02:32.918774+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6582a0"},"request_uri":"http://localhost:8000/_wdt/6582a0","method":"GET"} []
[2020-04-20T19:02:32.947889+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:02:32.954647+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:02:33.903540+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:02:33.919345+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:02:34.088288+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T19:02:34.144884+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T19:02:34.149180+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T19:02:34.149255+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:34.149306+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:34.149830+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:34.150546+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:02:34.152820+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:34.153198+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:34.153252+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:34.159803+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:02:34.164151+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:02:34.165452+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:02:34.165982+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:02:34.166786+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:02:46.089613+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:02:46.100676+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:02:46.273194+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T19:02:46.320547+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T19:02:46.323612+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T19:02:46.323674+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:46.323710+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:46.323870+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:02:46.325114+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-20T19:02:46.325211+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-20T19:02:52.837236+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:02:52.844013+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:02:53.089038+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:02:53.093957+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:02:53.776139+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c4d9e3"},"request_uri":"http://localhost:8000/_wdt/c4d9e3","method":"GET"} []
[2020-04-20T19:02:53.800676+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:02:53.808782+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:02:55.492178+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:02:55.496760+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:02:55.659797+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T19:02:55.707597+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T19:02:55.710213+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T19:02:55.710274+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:55.710322+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:55.710816+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:55.711524+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:02:55.713021+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:55.713249+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:55.713289+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:02:55.716571+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:02:55.720427+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:02:55.721741+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:02:55.722232+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:02:55.723038+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:06:14.843261+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:06:14.851683+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:06:15.527357+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2a43f2"},"request_uri":"http://localhost:8000/_wdt/2a43f2","method":"GET"} []
[2020-04-20T19:06:15.553335+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:06:15.558972+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:06:16.281803+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:06:16.289878+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:06:16.453735+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T19:06:16.506565+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T19:06:16.512795+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T19:06:16.512865+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:06:16.512913+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:06:16.513478+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:06:16.514236+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:06:16.516051+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:06:16.516299+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:06:16.516339+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:06:16.521330+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:06:16.526957+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:06:16.528466+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:06:16.529248+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:06:16.530628+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:06:20.882772+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:06:20.892144+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T19:06:20.893387+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T19:10:56.602392+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:10:56.606507+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:10:57.263203+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ced389"},"request_uri":"http://localhost:8000/_wdt/ced389","method":"GET"} []
[2020-04-20T19:10:57.289070+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:10:57.295664+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:10:58.204477+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:10:58.211698+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:10:58.377035+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T19:10:58.427167+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T19:10:58.430246+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T19:10:58.430310+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:10:58.430356+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:10:58.430905+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:10:58.431567+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:10:58.433145+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:10:58.433379+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:10:58.433418+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:10:58.436954+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:10:58.441668+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:10:58.442855+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:10:58.443388+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:10:58.444193+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:11:06.606791+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:11:06.615267+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:11:06.785843+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T19:11:06.838237+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T19:11:06.845510+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T19:11:06.845624+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:11:06.845710+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:11:06.847003+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:11:06.848397+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:11:06.851176+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:11:06.851545+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:11:06.851622+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:11:06.857451+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:11:06.862375+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:11:06.864198+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:11:06.864908+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:11:06.866534+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:11:09.540800+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:11:09.551642+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T19:11:09.552772+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T19:11:38.100187+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:11:38.109039+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:11:38.783116+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ff45d8"},"request_uri":"http://localhost:8000/_wdt/ff45d8","method":"GET"} []
[2020-04-20T19:11:38.852560+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:11:38.859927+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:11:39.977920+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:11:39.984330+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:11:40.149146+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T19:12:30.398736+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:12:30.403281+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:12:31.123284+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5648fa"},"request_uri":"http://localhost:8000/_wdt/5648fa","method":"GET"} []
[2020-04-20T19:12:31.147062+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:12:31.153319+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:12:31.883917+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:12:31.893186+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:12:32.055217+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T19:12:32.100577+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T19:12:32.104612+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T19:12:32.104692+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:12:32.104749+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:12:32.105353+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:12:32.106173+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:12:32.107720+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:12:32.107951+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:12:32.107988+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:12:32.111189+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:12:32.114038+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:12:32.115026+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:12:32.115493+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:12:32.116356+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:12:34.847160+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:12:34.861165+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T19:12:34.862372+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T19:12:47.066756+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:12:47.074247+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.comaa"] []
[2020-04-20T19:12:47.075531+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.comaa\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-20T19:12:54.248870+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:12:54.256226+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:12:54.423513+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T19:12:54.472939+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T19:12:54.475535+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T19:12:54.475616+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:12:54.475678+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:12:54.476333+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:12:54.477256+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:12:54.479097+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:12:54.479332+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:12:54.479383+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:12:54.485017+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:12:54.488402+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:12:54.489359+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:12:54.489770+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:12:54.490542+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:12:54.572867+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:12:54.578566+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:12:56.751011+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:12:56.756657+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:13:06.760378+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:13:06.767629+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:13:06.941717+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T19:13:06.986929+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T19:13:06.989891+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T19:13:06.989955+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:13:06.990001+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:13:06.990525+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:13:06.991219+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:13:06.992805+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:13:06.993039+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:13:06.993079+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:13:06.996894+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:13:07.001187+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:13:07.002266+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:13:07.002714+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:13:07.003535+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:13:10.939196+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:13:10.946927+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:13:11.111741+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T19:13:11.155990+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T19:13:11.159582+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T19:13:11.159659+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:13:11.159717+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:13:11.160271+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:13:11.161248+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:13:11.163203+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:13:11.163440+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:13:11.163479+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:13:11.166544+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:13:11.169189+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:13:11.170010+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:13:11.170376+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:13:11.171118+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:23:23.361333+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:23:23.368677+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:23:24.226532+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1aee44"},"request_uri":"http://localhost:8000/_wdt/1aee44","method":"GET"} []
[2020-04-20T19:23:24.315548+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:23:24.320378+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:28:53.527761+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-20T19:28:53.534659+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:28:53.703356+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-20T19:28:53.750352+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-20T19:28:53.753923+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T19:28:53.754008+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:28:53.754073+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:28:53.754773+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:28:53.755716+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:28:53.757281+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:28:53.757527+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:28:53.757567+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:28:53.762121+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:28:53.765905+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:28:53.766946+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:28:53.767422+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-20T19:28:53.768289+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-20T19:29:04.521090+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:29:04.527250+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:29:15.260433+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2020-04-20T19:29:15.261751+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T19:29:15.261843+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:29:15.261895+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:29:15.262225+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:29:15.297069+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimonaat@hotmail.com"] []
[2020-04-20T19:29:15.300740+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-20T19:29:15.302016+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimonaat@hotmail.com","2":[],"3":"aaaaaaa","4":"Mohimont","5":"Simon","6":null,"7":null,"8":null} []
[2020-04-20T19:29:15.305814+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-04-20T19:29:15.306955+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\NotNullConstraintViolationException: "An exception occurred while executing 'INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?)' with params ["simon.mohimonaat@hotmail.com", "[]", "aaaaaaa", "Mohimont", "Simon", null, null, null]:  SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'is_accepted' cannot be null" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 103 {"exception":"[object] (Doctrine\\DBAL\\Exception\\NotNullConstraintViolationException(code: 0): An exception occurred while executing 'INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?)' with params [\"simon.mohimonaat@hotmail.com\", \"[]\", \"aaaaaaa\", \"Mohimont\", \"Simon\", null, null, null]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1048 Column 'is_accepted' cannot be null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:103)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'is_accepted' cannot be null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:123)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'is_accepted' cannot be null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:121)"} []
[2020-04-20T19:29:58.882600+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2020-04-20T19:29:58.883613+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T19:29:58.883712+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:29:58.883771+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:29:58.883999+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:29:58.899050+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimonaat@hotmail.com"] []
[2020-04-20T19:29:58.902740+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-20T19:29:58.903191+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimonaat@hotmail.com","2":[],"3":"aaaaaaa","4":"Mohimont","5":"Simon","6":null,"7":null,"8":false} []
[2020-04-20T19:29:58.904040+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-20T19:29:58.917236+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? [5] []
[2020-04-20T19:29:58.921650+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-20T19:29:58.922145+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-20T19:29:58.922497+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-20T19:29:59.022702+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:29:59.031365+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:39:11.231077+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:39:11.273119+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:39:11.950544+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8a7edd"},"request_uri":"http://localhost:8000/_wdt/8a7edd","method":"GET"} []
[2020-04-20T19:39:12.079525+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:39:12.086893+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:39:14.586518+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:39:14.592385+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:39:22.067107+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2020-04-20T19:39:22.071011+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-20T19:39:22.071093+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:39:22.071136+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-20T19:39:22.071501+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:39:22.197258+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.sssssmohimont@hotmail.com"] []
[2020-04-20T19:39:22.214574+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-20T19:39:22.215921+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"simon.sssssmohimont@hotmail.com","2":[],"3":"salut","4":"Mohimont","5":"Simon","6":null,"7":null,"8":false} []
[2020-04-20T19:39:22.216778+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-20T19:39:22.231245+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? [6] []
[2020-04-20T19:39:22.299034+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-04-20T19:39:22.299991+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-04-20T19:39:22.300760+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-04-20T19:39:22.373773+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:39:22.380727+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:43:51.206208+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:43:51.210839+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:43:58.749711+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2020-04-20T19:43:58.750947+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-20T19:43:58.778179+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.moaassahimont@hotmail.com"] []
[2020-04-20T19:43:58.782017+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-20T19:43:58.782490+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"simon.moaassahimont@hotmail.com","2":[],"3":"salut","4":"Mohimont","5":"Simon","6":null,"7":null,"8":false} []
[2020-04-20T19:43:58.782958+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-20T19:43:58.790802+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? [7] []
[2020-04-20T19:43:58.826121+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [7] []
[2020-04-20T19:43:58.826660+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [7] []
[2020-04-20T19:43:58.827006+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [7] []
[2020-04-20T19:43:58.910714+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-20T19:43:58.919638+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:55:19.596756+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:55:19.644532+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:55:19.669086+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:55:19.672875+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:55:20.328393+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"645bf7"},"request_uri":"http://localhost:8000/_wdt/645bf7","method":"GET"} []
[2020-04-21T21:55:20.978831+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:55:20.982406+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:55:21.037128+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:55:21.041886+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:55:22.610668+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:55:22.619888+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:55:22.653733+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:55:22.659640+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:55:24.231592+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T21:55:24.340943+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:55:24.589108+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-21T21:55:24.765066+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-21T21:55:24.782818+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:55:24.782920+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:55:24.783009+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:55:24.787208+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:55:24.787950+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:55:24.790118+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:55:24.790348+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:55:24.790386+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:55:24.917964+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:55:24.927795+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-21T21:55:24.929559+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-21T21:55:24.930058+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-21T21:55:24.932559+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:55:26.196868+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T21:55:26.202657+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:55:26.357305+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-21T21:55:26.407344+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-21T21:55:26.410298+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:55:26.410361+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:55:26.410406+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:55:26.410877+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:55:26.411563+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:55:26.413194+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:55:26.413426+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:55:26.413464+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:55:26.416418+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:55:26.418669+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-21T21:55:26.419512+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-21T21:55:26.419948+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-21T21:55:26.420727+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:55:59.821118+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T21:55:59.829714+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:55:59.985644+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-21T21:56:00.028771+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-21T21:56:00.033836+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:56:00.033932+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:56:00.034014+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:56:00.034960+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:56:00.036356+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:56:00.038383+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:56:00.038661+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:56:00.038709+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:56:00.043176+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:56:00.046558+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-21T21:56:00.047521+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-21T21:56:00.048019+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-21T21:56:00.048871+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:56:00.134097+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:56:00.140022+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:56:01.459173+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:56:01.463280+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:56:01.487743+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T21:56:01.490553+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:56:01.490643+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:56:01.490711+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:56:01.491550+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:56:01.492841+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:56:01.495086+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:56:01.495340+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:56:01.495380+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:56:01.500654+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T21:56:01.501411+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T21:56:01.502891+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-21T21:56:01.503487+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-04-21T21:56:01.504046+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [7] []
[2020-04-21T21:56:01.507263+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T21:56:01.508462+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-21T21:56:01.509179+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-21T21:56:01.510027+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-21T21:56:01.510553+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-21T21:56:01.511235+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-21T21:56:01.512126+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-04-21T21:56:01.512623+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-04-21T21:56:01.512963+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-04-21T21:56:01.513640+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [7] []
[2020-04-21T21:56:01.514045+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [7] []
[2020-04-21T21:56:01.514323+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [7] []
[2020-04-21T21:56:01.514992+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T22:00:49.721616+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T22:00:49.738525+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T22:00:50.547680+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d70e1b"},"request_uri":"http://localhost:8000/_wdt/d70e1b","method":"GET"} []
[2020-04-21T22:00:50.585202+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T22:00:50.609592+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T22:00:50.609704+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:00:50.609807+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:00:50.614721+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:00:50.619467+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T22:00:50.641674+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:00:50.642081+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:00:50.642158+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:00:50.650498+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T22:00:50.651718+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:00:50.652204+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:00:50.652645+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:00:50.652958+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [7] []
[2020-04-21T22:00:50.672019+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:00:50.676370+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:00:50.676975+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:00:50.677658+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:00:50.677944+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:00:50.678182+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:00:50.678584+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:00:50.678866+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:00:50.679255+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:00:50.680113+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:00:50.680646+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:00:50.681128+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:00:50.682011+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [7] []
[2020-04-21T22:00:50.682606+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [7] []
[2020-04-21T22:00:50.683113+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [7] []
[2020-04-21T22:00:50.684222+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T22:00:50.719838+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T22:00:50.726108+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T22:02:07.580167+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T22:02:07.586753+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T22:02:08.329179+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T22:02:08.333379+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T22:02:08.333460+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:02:08.333519+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:02:08.334165+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:02:08.335097+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T22:02:08.336897+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:02:08.337141+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:02:08.337181+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:02:08.340086+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T22:02:08.340572+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:02:08.340891+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:02:08.341131+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:02:08.341349+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [7] []
[2020-04-21T22:02:08.344138+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:02:08.345169+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:02:08.345619+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:02:08.346188+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:02:08.346489+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:02:08.346739+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:02:08.347221+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:02:08.347586+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:02:08.347914+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:02:08.348355+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:02:08.348617+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:02:08.348855+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:02:08.349256+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [7] []
[2020-04-21T22:02:08.349514+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [7] []
[2020-04-21T22:02:08.349746+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [7] []
[2020-04-21T22:02:08.350376+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T22:02:08.378406+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"816401"},"request_uri":"http://localhost:8000/_wdt/816401","method":"GET"} []
[2020-04-21T22:02:08.405973+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T22:02:08.413614+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T22:04:04.020121+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T22:04:04.069295+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T22:04:05.073496+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3d1ada"},"request_uri":"http://localhost:8000/_wdt/3d1ada","method":"GET"} []
[2020-04-21T22:04:05.155661+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T22:04:05.164138+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T22:04:05.164254+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:04:05.164363+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:04:05.165574+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:04:05.167272+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T22:04:05.170742+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:04:05.171141+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:04:05.171215+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:04:05.176917+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T22:04:05.177629+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:04:05.178108+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:04:05.178465+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:04:05.178756+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [7] []
[2020-04-21T22:04:05.184257+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:04:05.186468+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:04:05.187396+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:04:05.188722+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:04:05.189357+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:04:05.190027+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:04:05.191221+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:04:05.192035+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:04:05.192557+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:04:05.193294+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:04:05.193635+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:04:05.193924+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:04:05.194595+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [7] []
[2020-04-21T22:04:05.194912+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [7] []
[2020-04-21T22:04:05.195192+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [7] []
[2020-04-21T22:04:05.196186+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T22:04:05.237011+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T22:04:05.243202+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T22:05:38.095735+02:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"7"},"request_uri":"http://localhost:8000/api/users/7","method":"DELETE"} []
[2020-04-21T22:05:38.096410+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T22:05:38.096460+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:05:38.096506+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:05:38.097028+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:05:38.099983+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T22:05:38.102715+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:05:38.103271+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:05:38.103349+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:05:38.151714+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [7] []
[2020-04-21T22:05:38.154820+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [7] []
[2020-04-21T22:05:38.170709+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T22:05:38.171764+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [7] []
[2020-04-21T22:05:38.175731+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-21T22:06:09.939390+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T22:06:09.944547+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T22:06:10.599214+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T22:06:10.608303+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T22:06:10.608420+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:06:10.608543+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:06:10.610071+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:06:10.612435+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T22:06:10.622135+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:06:10.622518+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:06:10.622572+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:06:10.627987+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T22:06:10.628716+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:06:10.629548+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:06:10.630107+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:06:10.633515+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:06:10.634731+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:06:10.635324+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:06:10.637039+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:06:10.637960+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:06:10.638992+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:06:10.640257+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:06:10.640965+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:06:10.641605+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:06:10.642742+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:06:10.643460+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:06:10.643947+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:06:10.644663+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T22:06:10.678269+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e7e625"},"request_uri":"http://localhost:8000/_wdt/e7e625","method":"GET"} []
[2020-04-21T22:06:11.268307+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T22:06:11.274126+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T22:06:15.747651+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"4"},"request_uri":"http://localhost:8000/api/users/4","method":"PUT"} []
[2020-04-21T22:06:15.748445+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T22:06:15.748502+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:06:15.748553+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:06:15.749113+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:06:15.752197+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T22:06:15.756072+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:06:15.756635+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:06:15.756739+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:06:15.759449+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [4] []
[2020-04-21T22:06:15.760169+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:06:15.817756+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:06:15.819709+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:06:15.821100+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:06:15.830424+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimonta@hotmail.com"] []
[2020-04-21T22:06:15.831312+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T22:06:15.831552+02:00] doctrine.DEBUG: UPDATE user SET roles = ?, is_accepted = ? WHERE id = ? [["ROLE_USER"],true,4] []
[2020-04-21T22:06:15.832668+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-21T22:06:15.840278+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? [4] []
[2020-04-21T22:06:15.842952+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:06:15.843551+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:06:15.844135+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:06:15.923055+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T22:06:15.926598+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T22:06:15.926672+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:06:15.926742+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:06:15.927483+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:06:15.928271+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T22:06:15.930057+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:06:15.930324+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:06:15.930378+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:06:15.933991+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T22:06:15.934541+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:06:15.934934+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:06:15.935252+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:06:15.939105+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:06:15.940673+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:06:15.941479+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:06:15.942282+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:06:15.942614+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:06:15.942887+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:06:15.943336+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:06:15.943616+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:06:15.943893+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:06:15.944347+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:06:15.944619+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:06:15.944870+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:06:15.945503+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T22:08:07.603280+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T22:08:07.611286+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T22:08:08.388782+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T22:08:08.395212+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T22:08:08.395307+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:08:08.395382+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:08:08.396416+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:08:08.397774+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T22:08:08.400869+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:08:08.401309+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:08:08.401380+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:08:08.406559+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T22:08:08.407440+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:08:08.409022+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:08:08.409900+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:08:08.416493+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:08:08.418369+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:08:08.419151+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:08:08.420204+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:08:08.420835+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:08:08.421375+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:08:08.422152+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:08:08.422757+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:08:08.423329+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:08:08.424416+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:08:08.425149+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:08:08.425950+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:08:08.427502+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T22:08:08.469395+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f5e961"},"request_uri":"http://localhost:8000/_wdt/f5e961","method":"GET"} []
[2020-04-21T22:08:08.491042+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T22:08:08.496371+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T22:08:23.646764+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T22:08:23.654720+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T22:08:24.387314+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ee09a1"},"request_uri":"http://localhost:8000/_wdt/ee09a1","method":"GET"} []
[2020-04-21T22:08:24.410463+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T22:08:24.413591+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T22:08:24.413662+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:08:24.413713+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:08:24.414297+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:08:24.415303+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T22:08:24.418023+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:08:24.418333+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:08:24.418388+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:08:24.423380+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T22:08:24.424055+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:08:24.424759+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:08:24.426184+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:08:24.431783+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:08:24.433654+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:08:24.434376+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:08:24.435099+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:08:24.435500+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:08:24.435785+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:08:24.436439+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:08:24.436886+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:08:24.437365+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:08:24.438219+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:08:24.442272+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:08:24.442674+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:08:24.444212+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T22:08:24.481644+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T22:08:24.489751+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T22:08:44.399962+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T22:08:44.407255+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T22:08:45.185175+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"973f2b"},"request_uri":"http://localhost:8000/_wdt/973f2b","method":"GET"} []
[2020-04-21T22:08:45.207979+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T22:08:45.214115+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T22:08:45.214227+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:08:45.214327+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:08:45.215780+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:08:45.217719+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T22:08:45.220562+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:08:45.221141+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:08:45.221243+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T22:08:45.234100+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T22:08:45.235998+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:08:45.239770+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:08:45.240441+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:08:45.246650+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:08:45.248493+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:08:45.249259+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-21T22:08:45.250250+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:08:45.250845+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:08:45.251378+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-21T22:08:45.252296+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:08:45.253320+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:08:45.253972+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-21T22:08:45.254984+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:08:45.255941+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:08:45.256720+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-04-21T22:08:45.258229+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T22:08:48.770922+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T22:08:48.776710+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T22:57:04.006250+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T22:57:04.015458+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T22:57:04.634238+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e69ce6"},"request_uri":"http://localhost:8000/_wdt/e69ce6","method":"GET"} []
[2020-04-27T22:57:04.860128+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T22:57:04.873191+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T22:57:37.640077+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T22:57:37.645539+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T22:57:38.656280+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b76ce6"},"request_uri":"http://localhost:8000/_wdt/b76ce6","method":"GET"} []
[2020-04-27T22:57:38.785962+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T22:57:38.798140+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:08:24.184034+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:08:24.195087+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:08:25.528406+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"779875"},"request_uri":"http://localhost:8000/_wdt/779875","method":"GET"} []
[2020-04-27T23:08:25.635334+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:08:25.646505+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:09:16.693229+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:09:16.703425+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:09:17.476234+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:09:17.482486+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:09:17.500188+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"66cfe6"},"request_uri":"http://localhost:8000/_wdt/66cfe6","method":"GET"} []
[2020-04-27T23:09:19.355187+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:09:19.359940+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:09:20.022388+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"512ea4"},"request_uri":"http://localhost:8000/_wdt/512ea4","method":"GET"} []
[2020-04-27T23:09:20.053679+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:09:20.059654+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:09:21.338768+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:09:21.342769+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:09:22.480485+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-27T23:09:22.510898+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:09:22.749732+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-27T23:09:22.811299+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-27T23:09:22.814563+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:09:22.814643+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:09:22.814719+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:09:22.818036+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:09:22.818847+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:09:22.821137+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:09:22.821384+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:09:22.821424+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:09:22.877519+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:09:22.905487+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:09:22.908180+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:09:22.909381+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:09:22.914736+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:09:23.000627+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:09:23.005108+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:09:24.105799+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:09:24.112603+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:09:24.131852+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-27T23:09:24.134670+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:09:24.134755+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:09:24.134829+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:09:24.135584+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:09:24.136654+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:09:24.139108+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:09:24.139444+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:09:24.139517+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:09:24.143475+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-27T23:09:24.144096+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-27T23:09:24.145701+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-27T23:09:24.147239+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-04-27T23:09:24.150924+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:09:24.152546+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:09:24.153124+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:09:24.153781+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-27T23:09:24.154123+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-27T23:09:24.154401+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-27T23:09:24.154877+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-27T23:09:24.155222+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-27T23:09:24.155550+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-27T23:09:24.156026+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-04-27T23:09:24.156375+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-04-27T23:09:24.156664+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-04-27T23:09:24.157249+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-27T23:09:25.801796+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:09:25.808213+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:09:25.827565+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:09:25.828785+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:09:25.828882+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:09:25.828969+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:09:25.829997+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:09:25.836015+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:09:25.839380+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:09:25.839810+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:09:25.839893+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:09:25.857005+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:09:25.872298+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:09:25.873254+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:09:25.873972+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:09:28.773958+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:09:28.779468+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:11:18.658506+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:11:18.665657+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:11:20.190214+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c70bac"},"request_uri":"http://localhost:8000/_wdt/c70bac","method":"GET"} []
[2020-04-27T23:11:20.223755+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:11:20.232177+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:11:22.804648+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:11:22.813308+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:17:06.080010+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:17:06.087989+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:17:07.553048+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"902f86"},"request_uri":"http://localhost:8000/_wdt/902f86","method":"GET"} []
[2020-04-27T23:17:07.796321+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:17:07.807570+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:17:11.730069+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:17:11.741068+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:17:11.772874+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:17:11.774550+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:17:11.774659+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:11.774735+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:11.775031+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:17:11.784417+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-27T23:17:11.785163+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-27T23:17:12.778855+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:17:12.788929+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:17:14.644998+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-27T23:17:14.661323+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:17:14.920939+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-27T23:17:15.114793+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:17:15.123698+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:17:15.158962+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:17:15.160327+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:17:15.160439+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:15.160537+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:15.161655+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:15.168975+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:17:15.175800+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:15.176316+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:15.176482+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:15.212520+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:17:15.240698+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:17:15.242136+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:17:15.243868+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:17:19.559211+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:17:19.572491+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:17:19.601899+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-27T23:17:19.608615+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:17:19.608736+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:19.608848+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:19.610141+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:19.611993+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:17:19.616092+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:19.616524+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:19.616601+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:19.647093+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-27T23:17:19.647857+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-27T23:17:19.648438+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-27T23:17:19.648856+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-04-27T23:17:19.686850+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:17:19.689132+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:17:19.690175+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:17:19.692330+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-27T23:17:19.693281+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-27T23:17:19.694150+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-27T23:17:19.695680+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-27T23:17:19.696994+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-27T23:17:19.697550+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-27T23:17:19.698398+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-04-27T23:17:19.698959+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-04-27T23:17:19.699716+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-04-27T23:17:19.701415+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-27T23:17:21.730915+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:17:21.744739+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:17:22.260656+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:17:22.276847+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:17:22.328181+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:17:22.329964+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:17:22.330067+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:22.330156+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:22.331324+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:22.339305+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:17:22.344405+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:22.344887+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:22.344983+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:17:22.355778+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:17:22.360459+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:17:22.362560+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:17:22.364152+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:18:42.231994+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:18:42.237248+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:18:42.260226+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:18:42.261468+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:18:42.261611+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:42.261728+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:42.262625+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:42.267433+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:18:42.271280+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:42.271711+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:42.271790+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:42.278677+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:18:42.280604+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:18:42.281267+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:18:42.281933+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:18:45.263983+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:18:45.277787+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:18:50.164905+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:18:50.168943+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:18:50.196058+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:18:50.196932+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:18:50.197004+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:50.197057+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:50.197713+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:50.201930+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:18:50.205699+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:50.206008+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:50.206066+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:50.210738+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:18:50.212657+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:18:50.213342+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:18:50.214014+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:18:51.926558+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:18:51.933675+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:18:54.552276+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:18:54.559413+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:18:54.588934+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:18:54.590262+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:18:54.590368+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:54.590458+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:54.591862+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:54.597806+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:18:54.599722+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:54.599966+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:54.600004+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:54.605476+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:18:54.608004+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:18:54.608980+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:18:54.610066+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:18:56.626442+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:18:56.630892+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:18:56.653899+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:18:56.654723+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:18:56.654812+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:56.654883+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:56.655615+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:56.659338+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:18:56.662414+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:56.662804+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:56.662880+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:18:56.668011+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:18:56.670335+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:18:56.671246+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:18:56.672126+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:19:26.931493+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:19:26.943492+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:21:28.533034+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:21:28.541461+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:21:28.570002+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:21:28.572218+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:21:28.572318+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:28.572404+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:28.573471+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:28.578417+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:21:28.580752+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:28.581035+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:28.581078+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:28.586931+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:21:28.590143+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:21:28.590948+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:21:28.591899+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:21:30.073300+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:21:30.078798+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:21:31.314210+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:21:31.322593+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:21:31.356404+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:21:31.357651+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:21:31.357747+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:31.357824+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:31.358731+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:31.364187+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:21:31.368074+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:31.368747+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:31.368870+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:31.377858+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:21:31.380512+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:21:31.381254+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:21:31.381935+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:21:44.512518+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:21:44.519877+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:21:44.538110+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-27T23:21:44.543681+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:21:44.543807+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:44.543928+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:44.545034+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:44.546239+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:21:44.549121+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:44.549515+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:44.549606+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:44.554338+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-27T23:21:44.555093+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-27T23:21:44.555765+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-27T23:21:44.556326+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-04-27T23:21:44.562313+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:21:44.563976+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:21:44.564729+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:21:44.565593+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-27T23:21:44.565944+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-27T23:21:44.566205+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-27T23:21:44.566639+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-27T23:21:44.566890+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-27T23:21:44.567169+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-27T23:21:44.567731+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-04-27T23:21:44.568203+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-04-27T23:21:44.568498+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-04-27T23:21:44.569281+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-27T23:21:49.083693+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:21:49.088326+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:21:49.109121+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:21:49.110244+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:21:49.110367+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:49.110448+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:49.111303+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:49.116041+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:21:49.118703+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:49.118988+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:49.119031+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:21:49.125990+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:21:49.128442+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:21:49.129363+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:21:49.130474+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:22:07.488471+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:22:07.495328+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:22:07.512781+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:22:07.514108+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:22:07.514222+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:22:07.514333+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:22:07.515363+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:22:07.519401+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:22:07.522332+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:22:07.522657+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:22:07.522732+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:22:07.530798+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:22:07.532821+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:22:07.533380+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:22:07.533999+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:22:08.612875+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:22:08.620326+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:27:04.044969+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:27:04.049350+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:27:05.114869+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a0f6a2"},"request_uri":"http://localhost:8000/_wdt/a0f6a2","method":"GET"} []
[2020-04-27T23:27:05.550277+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:27:05.559858+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:28:35.120796+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:28:35.128391+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:28:35.147678+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:28:35.148485+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:28:35.148546+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:28:35.148594+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:28:35.149207+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:28:35.154158+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:28:35.157927+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:28:35.158378+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:28:35.158466+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:28:35.165730+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:28:35.168694+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:28:35.169362+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:28:35.170067+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:28:37.728690+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:28:37.736621+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:28:37.758602+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:28:37.759261+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:28:37.759312+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:28:37.759358+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:28:37.759855+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:28:37.763861+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:28:37.766527+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:28:37.766972+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:28:37.767066+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:28:37.772625+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:28:37.774186+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:28:37.774902+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:28:37.775765+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:29:37.360602+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:29:37.369804+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:29:40.469771+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:29:40.477845+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:29:40.505545+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:29:40.506974+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:29:40.507129+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:29:40.507304+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:29:40.508823+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:29:40.516278+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:29:40.520222+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:29:40.520819+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:29:40.520907+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:29:40.531230+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:29:40.534741+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:29:40.535688+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:29:40.536718+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:31:04.176262+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:31:04.183359+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:31:04.698566+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"07f6e3"},"request_uri":"http://localhost:8000/_wdt/07f6e3","method":"GET"} []
[2020-04-27T23:31:04.751148+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:31:04.754016+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:31:04.754118+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:31:04.754209+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:31:04.755041+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:31:04.761307+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:31:04.765004+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:31:04.765450+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:31:04.765538+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:31:04.777849+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:31:04.783603+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:31:04.784425+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:31:04.785486+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:31:04.817430+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:31:04.823270+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:31:34.755448+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:31:34.760237+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:31:35.035411+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5af903"},"request_uri":"http://localhost:8000/_wdt/5af903","method":"GET"} []
[2020-04-27T23:31:35.104657+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:31:35.106097+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:31:35.106215+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:31:35.106310+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:31:35.107329+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:31:35.113228+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:31:35.115871+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:31:35.116197+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:31:35.116250+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:31:35.120644+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:31:35.122416+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:31:35.123008+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:31:35.123754+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:31:35.151331+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:31:35.158704+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:32:12.527014+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:32:12.533764+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:32:12.826227+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c1dc68"},"request_uri":"http://localhost:8000/_wdt/c1dc68","method":"GET"} []
[2020-04-27T23:32:12.901273+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:32:12.902839+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:32:12.902929+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:32:12.903003+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:32:12.903810+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:32:12.908330+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:32:12.910827+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:32:12.911272+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:32:12.911365+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:32:12.919189+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:32:12.921686+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:32:12.922349+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:32:12.923029+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:32:12.945834+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:32:12.951485+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:33:14.352124+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:33:14.364780+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:33:14.855001+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"321ff9"},"request_uri":"http://localhost:8000/_wdt/321ff9","method":"GET"} []
[2020-04-27T23:33:15.045196+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:33:15.047827+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:33:15.047993+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:33:15.048161+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:33:15.049509+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:33:15.057415+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:33:15.060998+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:33:15.061420+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:33:15.061496+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:33:15.075421+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:33:15.080507+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:33:15.081965+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:33:15.083479+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:33:15.172189+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:33:15.176202+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:33:35.154336+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:33:35.159265+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:33:35.569879+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"53cab4"},"request_uri":"http://localhost:8000/_wdt/53cab4","method":"GET"} []
[2020-04-27T23:33:35.636835+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:33:35.638052+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:33:35.638148+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:33:35.638239+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:33:35.639168+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:33:35.644148+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:33:35.647325+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:33:35.647773+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:33:35.647859+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:33:35.653712+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:33:35.655571+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:33:35.656227+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:33:35.656934+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:33:35.691837+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:33:35.699693+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:34:03.799101+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:34:03.804273+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:34:04.808915+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"18d04d"},"request_uri":"http://localhost:8000/_wdt/18d04d","method":"GET"} []
[2020-04-27T23:34:04.842205+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:34:04.844398+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:34:04.844502+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:34:04.844583+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:34:04.845465+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:34:04.850890+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:34:04.854510+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:34:04.854994+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:34:04.855057+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:34:04.862360+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:34:04.865343+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:34:04.866159+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:34:04.867096+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:34:04.901794+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:34:04.909494+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:35:58.033242+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:35:58.040765+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:35:59.141163+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"153213"},"request_uri":"http://localhost:8000/_wdt/153213","method":"GET"} []
[2020-04-27T23:35:59.345381+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:35:59.346233+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:35:59.346289+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:35:59.346338+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:35:59.346970+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:35:59.353580+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:35:59.356174+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:35:59.356510+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:35:59.356561+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:35:59.361502+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:35:59.363889+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:35:59.364662+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:35:59.365494+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:35:59.389881+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:35:59.395448+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:39:08.615552+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:39:08.622345+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:39:09.479212+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8964cf"},"request_uri":"http://localhost:8000/_wdt/8964cf","method":"GET"} []
[2020-04-27T23:39:09.511138+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:39:09.517319+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:39:17.102976+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:39:17.109426+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:39:17.964446+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"60765c"},"request_uri":"http://localhost:8000/_wdt/60765c","method":"GET"} []
[2020-04-27T23:39:18.005344+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:39:18.007031+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:39:18.007191+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:39:18.007359+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:39:18.008564+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:39:18.016293+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:39:18.021160+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:39:18.021488+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:39:18.021548+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:39:18.028530+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:39:18.030874+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:39:18.031700+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:39:18.032841+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:39:18.069210+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:39:18.077237+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:50:06.813330+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:50:06.817737+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:50:07.866172+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8265c0"},"request_uri":"http://localhost:8000/_wdt/8265c0","method":"GET"} []
[2020-04-27T23:50:08.371598+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:50:08.373294+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:50:08.373440+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:50:08.373527+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:50:08.374645+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:50:08.380770+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:50:08.383098+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:50:08.383421+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:50:08.383475+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:50:08.388655+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:50:08.391176+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:50:08.392039+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:50:08.392847+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:50:09.338919+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:50:09.346012+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:51:29.253083+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:51:29.262239+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:51:30.219826+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-27T23:51:30.224526+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:51:30.224622+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:51:30.224716+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:51:30.225591+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:51:30.226805+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:51:30.228935+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:51:30.229194+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:51:30.229235+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:51:30.233995+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:51:30.238059+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:51:30.239262+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:51:30.239889+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:51:30.241404+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:51:30.278971+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"28b435"},"request_uri":"http://localhost:8000/_wdt/28b435","method":"GET"} []
[2020-04-27T23:51:30.308515+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:51:30.310324+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:51:30.310425+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:51:30.310518+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:51:30.311375+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:51:30.316457+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:51:30.319836+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:51:30.320502+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:51:30.320609+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:51:30.325581+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:51:30.329443+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:51:30.330922+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:51:30.332501+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:51:30.371595+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:51:30.378662+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:52:45.451684+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:52:45.468436+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:52:46.609949+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5e6074"},"request_uri":"http://localhost:8000/_wdt/5e6074","method":"GET"} []
[2020-04-27T23:52:47.412931+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:52:47.417678+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:52:48.380682+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-27T23:52:48.391564+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:52:48.391702+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:52:48.391818+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:52:48.393291+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:52:48.394900+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:52:48.398240+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:52:48.398746+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:52:48.398834+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:52:48.403115+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:52:48.406573+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:52:48.407798+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:52:48.408269+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:52:48.409215+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:52:48.448000+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:52:48.449466+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:52:48.449602+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:52:48.449718+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:52:48.450805+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:52:48.455919+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:52:48.457868+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:52:48.458105+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:52:48.458143+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:52:48.463000+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:52:48.465625+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:52:48.466452+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:52:48.467293+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:53:19.386708+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:53:19.395032+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:53:20.438735+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a32073"},"request_uri":"http://localhost:8000/_wdt/a32073","method":"GET"} []
[2020-04-27T23:53:20.464005+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-27T23:53:20.467865+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:53:20.467951+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:53:20.468009+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:53:20.468618+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:53:20.469600+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:53:20.471952+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:53:20.472221+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:53:20.472264+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:53:20.476087+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:53:20.479411+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:53:20.480971+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:53:20.481593+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:53:20.482623+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:53:20.510003+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:53:20.517267+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:53:20.564123+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:53:20.565192+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:53:20.565268+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:53:20.565326+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:53:20.565848+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:53:20.569074+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:53:20.571942+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:53:20.572393+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:53:20.572493+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:53:20.581716+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:53:20.584632+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:53:20.585474+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:53:20.586503+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:54:27.103618+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:54:27.109917+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:54:28.199968+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"56d81a"},"request_uri":"http://localhost:8000/_wdt/56d81a","method":"GET"} []
[2020-04-27T23:54:28.224529+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-27T23:54:28.229566+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:54:28.229656+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:28.229734+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:28.230596+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:28.232480+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:54:28.235474+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:28.235942+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:28.236017+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:28.241345+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:54:28.246754+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:54:28.248574+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:54:28.249295+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:54:28.250609+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:54:28.284966+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:54:28.290823+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:54:41.515106+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:54:41.520500+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:54:42.467212+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2f1c44"},"request_uri":"http://localhost:8000/_wdt/2f1c44","method":"GET"} []
[2020-04-27T23:54:42.493300+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-27T23:54:42.499728+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:54:42.499822+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:42.499896+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:42.500720+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:42.501875+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:54:42.504720+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:42.505088+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:42.505151+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:42.510456+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:54:42.516025+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:54:42.517471+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:54:42.518188+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:54:42.519546+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:54:42.588339+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:54:42.589423+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:54:42.589514+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:42.589590+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:42.590536+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:42.597006+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:54:42.601315+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:42.601775+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:42.601870+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:42.609679+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:54:42.613492+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:54:42.614434+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:54:42.615316+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:54:42.721676+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:54:42.728948+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:54:53.195975+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:54:53.207888+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:54:54.190339+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"76f6e3"},"request_uri":"http://localhost:8000/_wdt/76f6e3","method":"GET"} []
[2020-04-27T23:54:54.217924+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-27T23:54:54.223460+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:54:54.223587+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:54.223670+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:54.224683+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:54.226111+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:54:54.229256+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:54.229588+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:54.229654+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:54.234753+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:54:54.239428+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:54:54.240986+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:54:54.242476+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:54:54.244287+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:54:54.280728+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:54:54.288084+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:54:54.327296+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:54:54.329180+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:54:54.329311+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:54.329427+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:54.330394+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:54.339065+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:54:54.341890+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:54.342524+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:54.342590+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:54:54.353087+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:54:54.355469+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:54:54.356362+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:54:54.357435+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:55:23.685063+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:55:23.693396+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:55:24.663840+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f287dd"},"request_uri":"http://localhost:8000/_wdt/f287dd","method":"GET"} []
[2020-04-27T23:55:24.696932+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-27T23:55:24.704740+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:55:24.704816+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:24.704871+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:24.705488+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:24.706415+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:55:24.708622+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:24.708917+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:24.708964+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:24.714760+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:55:24.719226+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:55:24.720680+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:55:24.721297+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:55:24.722286+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:55:24.799913+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:55:24.800905+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:55:24.800988+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:24.801070+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:24.801831+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:24.806310+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:55:24.809214+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:24.809717+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:24.809826+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:24.815560+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:55:24.817305+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:55:24.818306+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:55:24.819258+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:55:25.583618+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:55:25.595930+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:55:42.549904+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:55:42.554475+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:55:43.438953+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eaa4de"},"request_uri":"http://localhost:8000/_wdt/eaa4de","method":"GET"} []
[2020-04-27T23:55:43.462129+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-27T23:55:43.467376+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:55:43.467569+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:43.467648+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:43.468529+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:43.470451+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:55:43.472688+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:43.472987+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:43.473043+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:43.477529+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:55:43.482187+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:55:43.483728+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:55:43.484344+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:55:43.485746+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:55:43.525422+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:55:43.533640+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:55:43.593255+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:55:43.594270+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:55:43.594352+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:43.594426+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:43.597778+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:43.601646+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:55:43.604233+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:43.604530+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:43.604600+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:55:43.608988+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:55:43.611107+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:55:43.611943+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:55:43.612818+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:55:58.964767+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:55:58.968977+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:55:59.982752+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"10371c"},"request_uri":"http://localhost:8000/_wdt/10371c","method":"GET"} []
[2020-04-27T23:56:00.010304+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:56:00.017358+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:56:00.044675+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-27T23:56:00.050699+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:56:00.050805+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:00.050887+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:00.051905+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:00.053477+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:56:00.056607+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:00.057038+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:00.057125+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:00.064253+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:56:00.069938+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:56:00.071577+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:56:00.072336+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:56:00.073860+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:56:00.147227+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:56:00.148435+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:56:00.148529+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:00.148606+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:00.149427+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:00.153052+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:56:00.155333+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:00.155653+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:00.155728+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:00.161685+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:56:00.165301+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:56:00.166092+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:56:00.166953+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:56:43.876256+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:56:43.887781+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:56:44.855034+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"62dd85"},"request_uri":"http://localhost:8000/_wdt/62dd85","method":"GET"} []
[2020-04-27T23:56:44.875126+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-27T23:56:44.881208+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:56:44.881281+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:44.881333+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:44.882113+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:44.883567+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:56:44.886051+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:44.886298+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:44.886348+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:44.890787+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:56:44.895723+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:56:44.897408+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:56:44.898146+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-27T23:56:44.899410+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:56:44.932455+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-27T23:56:44.941027+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-27T23:56:44.981478+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-27T23:56:44.982915+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-27T23:56:44.983018+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:44.983154+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:44.984008+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:44.989257+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-27T23:56:44.992022+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:44.992381+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:44.992455+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-27T23:56:45.001325+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-27T23:56:45.003199+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-27T23:56:45.003927+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-27T23:56:45.004588+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-27T23:57:30.305222+02:00] console.ERROR: Error thrown while running command "'make:entity:Conference'". Message: "There are no commands defined in the "make:entity" namespace.  Did you mean one of these?     make     make:serializer" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\NamespaceNotFoundException(code: 0): There are no commands defined in the \"make:entity\" namespace.\n\nDid you mean one of these?\n    make\n    make:serializer at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/console/Application.php:574)","command":"'make:entity:Conference'","message":"There are no commands defined in the \"make:entity\" namespace.\n\nDid you mean one of these?\n    make\n    make:serializer"} []
[2020-04-27T23:57:41.029788+02:00] console.ERROR: Error thrown while running command "make:entity Conference". Message: "Aborted." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\RuntimeException(code: 0): Aborted. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/console/Helper/QuestionHelper.php:137)","command":"make:entity Conference","message":"Aborted."} []
[2020-04-27T23:57:41.066825+02:00] console.DEBUG: Command "make:entity Conference" exited with code "1" {"command":"make:entity Conference","code":1} []
[2020-04-28T00:02:51.895090+02:00] console.ERROR: Error thrown while running command "'make:migrations'". Message: "Command "make:migrations" is not defined.  Did you mean one of these?     doctrine:migrations:diff     doctrine:migrations:dump-schema     doctrine:migrations:execute     doctrine:migrations:generate     doctrine:migrations:latest     doctrine:migrations:migrate     doctrine:migrations:rollup     doctrine:migrations:status     doctrine:migrations:up-to-date     doctrine:migrations:version     make:auth     make:command     make:controller     make:crud     make:entity     make:fixtures     make:form     make:functional-test     make:migration     make:registration-form     make:serializer:encoder     make:serializer:normalizer     make:subscriber     make:twig-extension     make:unit-test     make:user     make:validator     make:voter" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): Command \"make:migrations\" is not defined.\n\nDid you mean one of these?\n    doctrine:migrations:diff\n    doctrine:migrations:dump-schema\n    doctrine:migrations:execute\n    doctrine:migrations:generate\n    doctrine:migrations:latest\n    doctrine:migrations:migrate\n    doctrine:migrations:rollup\n    doctrine:migrations:status\n    doctrine:migrations:up-to-date\n    doctrine:migrations:version\n    make:auth\n    make:command\n    make:controller\n    make:crud\n    make:entity\n    make:fixtures\n    make:form\n    make:functional-test\n    make:migration\n    make:registration-form\n    make:serializer:encoder\n    make:serializer:normalizer\n    make:subscriber\n    make:twig-extension\n    make:unit-test\n    make:user\n    make:validator\n    make:voter at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/console/Application.php:644)","command":"'make:migrations'","message":"Command \"make:migrations\" is not defined.\n\nDid you mean one of these?\n    doctrine:migrations:diff\n    doctrine:migrations:dump-schema\n    doctrine:migrations:execute\n    doctrine:migrations:generate\n    doctrine:migrations:latest\n    doctrine:migrations:migrate\n    doctrine:migrations:rollup\n    doctrine:migrations:status\n    doctrine:migrations:up-to-date\n    doctrine:migrations:version\n    make:auth\n    make:command\n    make:controller\n    make:crud\n    make:entity\n    make:fixtures\n    make:form\n    make:functional-test\n    make:migration\n    make:registration-form\n    make:serializer:encoder\n    make:serializer:normalizer\n    make:subscriber\n    make:twig-extension\n    make:unit-test\n    make:user\n    make:validator\n    make:voter"} []
[2020-04-28T00:02:56.998846+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-28T00:02:57.001120+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T00:02:57.011215+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T00:02:57.011726+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T00:02:57.014042+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-28T00:02:57.016329+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-28T00:02:57.017061+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'admin' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T00:02:57.017749+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'admin' */ WHERE k.table_name = 'admin' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T00:02:57.019028+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'admin' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T00:02:57.019785+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'admin' [] []
[2020-04-28T00:02:57.020322+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'conference' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T00:02:57.020960+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'conference' */ WHERE k.table_name = 'conference' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T00:02:57.021425+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'conference' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T00:02:57.021778+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'conference' [] []
[2020-04-28T00:02:57.022096+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'event' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T00:02:57.022655+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'event' */ WHERE k.table_name = 'event' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T00:02:57.023011+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'event' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T00:02:57.023341+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'event' [] []
[2020-04-28T00:02:57.023551+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'medecin' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T00:02:57.024019+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'medecin' */ WHERE k.table_name = 'medecin' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T00:02:57.024417+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'medecin' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T00:02:57.024833+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'medecin' [] []
[2020-04-28T00:02:57.025193+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T00:02:57.025695+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T00:02:57.026018+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T00:02:57.026312+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-28T00:02:57.026554+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'participant' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T00:02:57.027027+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'participant' */ WHERE k.table_name = 'participant' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T00:02:57.027416+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'participant' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T00:02:57.027731+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'participant' [] []
[2020-04-28T00:02:57.027953+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'speaker' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T00:02:57.028380+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'speaker' */ WHERE k.table_name = 'speaker' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T00:02:57.028696+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'speaker' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T00:02:57.028979+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'speaker' [] []
[2020-04-28T00:02:57.029194+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T00:02:57.029647+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T00:02:57.029918+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T00:02:57.030166+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-04-28T00:03:02.232318+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-28T00:03:02.233931+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T00:03:02.239437+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T00:03:02.239954+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T00:03:02.241789+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-28T00:03:02.243617+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-04-28T00:03:03.632398+02:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355', '20200317201021', '20200317201232', '20200318120105', '20200331213036', '20200417151230', '20200427220257') ORDER BY version DESC LIMIT 1 [] []
[2020-04-28T00:03:03.634339+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-04-28T00:03:03.637228+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T00:03:03.676188+02:00] doctrine.DEBUG: ALTER TABLE participant DROP FOREIGN KEY FK_D79F6B1171F7E88B [] []
[2020-04-28T00:03:03.693817+02:00] doctrine.DEBUG: DROP INDEX IDX_D79F6B1171F7E88B ON participant [] []
[2020-04-28T00:03:03.729368+02:00] doctrine.DEBUG: ALTER TABLE participant CHANGE event_id conference_id INT NOT NULL [] []
[2020-04-28T00:03:03.744629+02:00] doctrine.DEBUG: ALTER TABLE participant ADD CONSTRAINT FK_D79F6B11604B8382 FOREIGN KEY (conference_id) REFERENCES conference (id) [] []
[2020-04-28T00:03:03.916388+02:00] doctrine.DEBUG: CREATE INDEX IDX_D79F6B11604B8382 ON participant (conference_id) [] []
[2020-04-28T00:03:03.990028+02:00] doctrine.DEBUG: INSERT INTO migration_versions (version, executed_at) VALUES (?, ?) ["20200427220257","2020-04-27 22:03:03"] []
[2020-04-28T00:03:04.008076+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T00:05:17.313776+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-04-28T00:05:17.314394+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:05:17.314440+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:05:17.314476+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:05:17.314617+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:05:17.847300+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"15a9c4"},"request_uri":"http://localhost:8000/_wdt/15a9c4","method":"GET"} []
[2020-04-28T00:05:18.221492+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-04-28T00:05:18.222226+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:05:18.222300+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:05:18.222341+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:05:18.222485+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:05:51.399344+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:05:51.404744+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:05:52.414012+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d50529"},"request_uri":"http://localhost:8000/_wdt/d50529","method":"GET"} []
[2020-04-28T00:05:52.500433+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T00:05:52.506380+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:05:52.506516+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:05:52.506625+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:05:52.507645+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:05:52.509086+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:05:52.512401+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:05:52.512768+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:05:52.512828+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:05:52.519895+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:05:52.569982+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:05:52.572229+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:05:52.572960+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:05:52.574512+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:05:52.614384+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:05:52.620323+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:05:52.646494+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T00:05:52.647481+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:05:52.647587+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:05:52.647668+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:05:52.648496+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:05:52.653689+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:05:52.656765+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:05:52.657145+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:05:52.657221+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:05:52.664123+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T00:05:52.701823+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:05:52.703456+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined property: App\Entity\Conference::$participants" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Entity/Conference.php line 199 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined property: App\\Entity\\Conference::$participants at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Entity/Conference.php:199)"} []
[2020-04-28T00:07:04.342099+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:07:04.349867+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:07:05.362534+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"994f3b"},"request_uri":"http://localhost:8000/_wdt/994f3b","method":"GET"} []
[2020-04-28T00:07:05.508428+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T00:07:05.513874+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:07:05.513965+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:07:05.514049+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:07:05.514966+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:07:05.516229+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:07:05.519551+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:07:05.519979+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:07:05.520052+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:07:05.525977+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:07:05.530405+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:07:05.531860+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:07:05.532388+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:07:05.533311+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:07:05.557742+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:07:05.562477+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:07:05.583210+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T00:07:05.583832+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:07:05.583885+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:07:05.583950+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:07:05.584479+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:07:05.587329+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:07:05.590090+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:07:05.590369+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:07:05.590412+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:07:05.594182+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T00:07:05.596540+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:07:05.598013+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined property: App\Entity\Conference::$participants" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Entity/Conference.php line 199 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined property: App\\Entity\\Conference::$participants at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Entity/Conference.php:199)"} []
[2020-04-28T00:09:17.444262+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:09:17.450072+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:09:18.491510+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5cdd58"},"request_uri":"http://localhost:8000/_wdt/5cdd58","method":"GET"} []
[2020-04-28T00:09:18.695718+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:09:18.702289+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:09:19.424182+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T00:09:19.430530+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:09:19.430597+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:09:19.430651+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:09:19.431306+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:09:19.432322+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:09:19.434404+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:09:19.434647+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:09:19.434685+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:09:19.438555+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:09:19.442111+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:09:19.443308+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:09:19.443709+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:09:19.444603+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:09:19.489486+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T00:09:19.490391+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:09:19.490488+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:09:19.490577+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:09:19.491202+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:09:19.495478+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:09:19.497389+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:09:19.497660+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:09:19.497706+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:09:19.502706+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T00:09:19.506075+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:09:19.508673+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined property: App\Entity\Conference::$participants" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Entity/Conference.php line 199 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined property: App\\Entity\\Conference::$participants at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Entity/Conference.php:199)"} []
[2020-04-28T00:10:51.385812+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:10:51.394584+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:10:52.412784+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7a9ef3"},"request_uri":"http://localhost:8000/_wdt/7a9ef3","method":"GET"} []
[2020-04-28T00:10:52.437963+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T00:10:52.444560+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:10:52.444639+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:52.444712+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:52.445565+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:52.446422+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:10:52.449410+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:52.449757+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:52.449822+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:52.455110+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:10:52.460181+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:10:52.462057+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:10:52.462695+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:10:52.463942+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:10:52.501017+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:10:52.508440+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:10:52.567483+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T00:10:52.569393+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:10:52.569505+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:52.569598+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:52.570456+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:52.575293+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:10:52.579895+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:52.580422+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:52.580512+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:52.587364+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T00:10:52.590503+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:10:52.592125+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined property: App\Entity\Conference::$participants" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Entity/Conference.php line 199 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined property: App\\Entity\\Conference::$participants at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Entity/Conference.php:199)"} []
[2020-04-28T00:10:55.637050+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:10:55.642325+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:10:56.913274+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-28T00:10:56.918613+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:10:57.088233+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-28T00:10:57.178602+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T00:10:57.182852+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:10:57.182933+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:57.182984+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:57.183618+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:57.184524+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:10:57.186801+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:57.187154+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:57.187219+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:57.194046+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:10:57.197627+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:10:57.198666+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:10:57.199274+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:10:57.200388+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:10:57.227715+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:10:57.234875+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:10:57.260426+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T00:10:57.261197+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:10:57.261258+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:57.261307+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:57.261810+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:57.265168+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:10:57.267010+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:57.267250+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:57.267290+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:10:57.272525+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T00:10:57.274673+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:10:57.276565+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined property: App\Entity\Conference::$participants" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Entity/Conference.php line 199 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined property: App\\Entity\\Conference::$participants at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Entity/Conference.php:199)"} []
[2020-04-28T00:11:37.678821+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences?page=1","method":"GET"} []
[2020-04-28T00:11:37.680347+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:11:37.680423+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:11:37.680465+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:11:37.680749+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:11:37.683263+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-28T00:11:37.683445+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-28T00:11:48.256159+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:11:48.262729+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:11:49.653602+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-28T00:11:49.664979+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:11:49.828960+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-28T00:11:49.914166+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T00:11:49.917616+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:11:49.917720+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:11:49.917853+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:11:49.918768+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:11:49.919870+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:11:49.923270+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:11:49.923830+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:11:49.923948+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:11:49.932603+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:11:49.937937+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:11:49.939604+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:11:49.940254+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:11:49.942517+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:11:49.967770+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:11:49.974066+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:11:50.002105+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T00:11:50.002750+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:11:50.002825+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:11:50.002875+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:11:50.003468+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:11:50.006519+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:11:50.008484+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:11:50.008791+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:11:50.008857+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:11:50.014498+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T00:11:50.017356+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:11:50.018841+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined property: App\Entity\Conference::$participants" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Entity/Conference.php line 199 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined property: App\\Entity\\Conference::$participants at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Entity/Conference.php:199)"} []
[2020-04-28T00:12:25.431623+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:12:25.437140+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:12:26.396536+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ebd7c1"},"request_uri":"http://localhost:8000/_wdt/ebd7c1","method":"GET"} []
[2020-04-28T00:12:26.442913+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T00:12:26.446635+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:12:26.446731+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:26.446810+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:26.447850+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:26.449362+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:12:26.452744+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:26.453142+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:26.453209+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:26.478145+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:12:26.511600+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:12:26.514274+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:12:26.515111+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:12:26.517003+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:12:26.562388+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:12:26.573477+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:12:26.613003+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T00:12:26.614422+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:12:26.614510+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:26.614574+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:26.615513+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:26.619049+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:12:26.621639+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:26.622028+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:26.622101+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:26.641199+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T00:12:26.655990+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:12:26.657524+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined property: App\Entity\Conference::$participants" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Entity/Conference.php line 199 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined property: App\\Entity\\Conference::$participants at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Entity/Conference.php:199)"} []
[2020-04-28T00:12:56.017996+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:12:56.024723+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:12:56.975832+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ae4236"},"request_uri":"http://localhost:8000/_wdt/ae4236","method":"GET"} []
[2020-04-28T00:12:57.010916+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T00:12:57.020327+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:12:57.020421+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:57.020497+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:57.021434+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:57.022668+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:12:57.027566+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:57.027958+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:57.028030+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:57.051213+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:12:57.083717+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:12:57.085464+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:12:57.086208+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:12:57.088285+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:12:57.183973+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T00:12:57.185164+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:12:57.185256+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:57.185352+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:57.186642+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:57.193058+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:12:57.200011+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:57.200393+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:57.200461+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:57.228054+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T00:12:57.248953+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:12:57.249828+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:12:57.250803+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:12:57.251432+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:12:57.252328+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-28T00:12:57.918377+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:12:57.927324+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:12:58.708321+02:00] request.INFO: Matched route "api_participants_post_collection". {"route":"api_participants_post_collection","route_parameters":{"_route":"api_participants_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Participant","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/participants","method":"POST"} []
[2020-04-28T00:12:58.709403+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:12:58.709526+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:58.709691+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:58.710678+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:58.715757+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:12:58.718297+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:58.718614+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:58.718655+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:12:58.733484+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-04-28T00:12:58.735426+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ WHERE c0_.id = ? [63] []
[2020-04-28T00:12:58.745898+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T00:12:58.747955+02:00] doctrine.DEBUG: INSERT INTO participant (user_id, conference_id) VALUES (?, ?) {"1":2,"2":63} []
[2020-04-28T00:12:58.748519+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T00:12:58.759840+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.id = ? [1] []
[2020-04-28T00:14:53.572772+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-04-28T00:14:53.573637+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:14:53.573699+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:14:53.573738+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:14:53.573933+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:14:54.002728+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"47fa12"},"request_uri":"http://localhost:8000/_wdt/47fa12","method":"GET"} []
[2020-04-28T00:14:54.379767+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-04-28T00:14:54.380452+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:14:54.380538+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:14:54.380593+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:14:54.380772+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:14:58.864460+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?page=1","method":"GET"} []
[2020-04-28T00:14:58.872531+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:14:58.872630+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:14:58.872693+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:14:58.873292+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:14:58.876413+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-28T00:14:58.876705+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-28T00:17:33.537131+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:17:33.545486+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:17:35.974734+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:17:35.986525+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:17:36.015028+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-28T00:17:36.023429+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:17:36.023561+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:17:36.023659+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:17:36.025074+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:17:36.026476+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:17:36.030252+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:17:36.030686+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:17:36.030745+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:17:36.035997+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-28T00:17:36.036532+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-28T00:17:36.063202+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-28T00:17:36.064025+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-04-28T00:17:36.069852+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:17:36.071849+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:17:36.072701+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:17:36.078412+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-28T00:17:36.079012+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-28T00:17:36.079504+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-28T00:17:36.080966+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-28T00:17:36.081617+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-28T00:17:36.082233+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-28T00:17:36.082876+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-04-28T00:17:36.083332+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-04-28T00:17:36.083737+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-04-28T00:17:36.084551+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-28T00:17:46.805784+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T00:17:46.810728+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:17:46.810832+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:17:46.810908+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:17:46.811989+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:17:46.813598+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:17:46.816666+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:17:46.817089+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:17:46.817165+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:17:46.821953+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:17:46.825568+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:17:46.827181+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:17:46.827713+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:17:46.830395+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:17:46.853944+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:17:46.862668+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:17:46.885107+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T00:17:46.885762+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:17:46.885810+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:17:46.885855+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:17:46.886330+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:17:46.889564+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:17:46.891271+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:17:46.891509+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:17:46.891568+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:17:46.896336+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T00:17:46.898506+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:17:46.899046+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:17:46.899870+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:17:46.900336+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:17:46.900963+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-28T00:17:48.084323+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:17:48.091792+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:30:44.092630+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:30:44.099707+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:30:44.128859+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-28T00:30:44.135049+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:30:44.135144+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:44.135209+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:44.136149+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:44.137708+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:30:44.140394+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:44.140668+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:44.140725+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:44.144232+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-28T00:30:44.144756+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-28T00:30:44.145316+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-28T00:30:44.145814+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-04-28T00:30:44.152124+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:30:44.154025+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:30:44.154789+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:30:44.157421+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-28T00:30:44.157928+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-28T00:30:44.158301+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-28T00:30:44.158900+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-28T00:30:44.159176+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-28T00:30:44.159686+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-28T00:30:44.160444+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-04-28T00:30:44.160869+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-04-28T00:30:44.161308+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-04-28T00:30:44.162365+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-28T00:30:46.840784+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:30:46.847632+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:30:46.863973+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T00:30:46.864641+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:30:46.864694+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:46.864740+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:46.865375+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:46.868029+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:30:46.870810+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:46.871268+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:46.871367+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:46.879454+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T00:30:46.882910+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:30:46.883672+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:30:46.884956+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:30:46.885508+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:30:46.886192+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-28T00:30:49.787044+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:30:49.792863+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:30:49.813428+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T00:30:49.817250+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:30:49.817335+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:49.817400+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:49.818283+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:49.819440+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:30:49.822576+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:49.822957+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:49.823037+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:49.827853+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:30:49.831180+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:30:49.832459+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:30:49.832891+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:30:49.834950+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:30:49.881050+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T00:30:49.881895+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:30:49.881948+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:49.881994+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:49.882471+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:49.884986+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:30:49.887374+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:49.887669+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:49.887713+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:30:49.891898+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T00:30:49.894003+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:30:49.894525+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:30:49.895349+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:30:49.895750+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:30:49.896416+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-28T00:32:50.660334+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:32:50.666945+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:32:51.652825+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"048aba"},"request_uri":"http://localhost:8000/_wdt/048aba","method":"GET"} []
[2020-04-28T00:32:51.685777+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T00:32:51.690807+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:32:51.690873+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:32:51.690924+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:32:51.691849+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:32:51.693195+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:32:51.695772+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:32:51.696046+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:32:51.696088+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:32:51.700533+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:32:51.706582+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:32:51.708583+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:32:51.709294+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:32:51.712858+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:32:51.751334+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:32:51.757202+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:32:52.122197+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T00:32:52.122915+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:32:52.122973+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:32:52.123021+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:32:52.123535+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:32:52.127590+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:32:52.129769+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:32:52.130102+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:32:52.130160+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:32:52.135835+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T00:32:52.139097+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:32:52.139725+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:32:52.140888+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:32:52.141565+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:32:52.142900+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-28T00:34:30.970246+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:34:30.977784+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:34:31.973968+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"df5ea2"},"request_uri":"http://localhost:8000/_wdt/df5ea2","method":"GET"} []
[2020-04-28T00:34:32.001920+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T00:34:32.007069+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:34:32.007155+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:34:32.007229+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:34:32.008130+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:34:32.009331+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:34:32.012617+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:34:32.012875+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:34:32.012915+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:34:32.016978+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:34:32.022046+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:34:32.023857+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:34:32.024409+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:34:32.027026+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:34:32.063535+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:34:32.068295+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:34:32.098295+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T00:34:32.099017+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:34:32.099081+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:34:32.099129+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:34:32.099784+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:34:32.103640+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:34:32.107415+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:34:32.107840+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:34:32.107916+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:34:32.116620+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T00:34:32.120241+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:34:32.120779+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:34:32.121809+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:34:32.122369+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:34:32.123412+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-28T00:35:43.435122+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:35:43.445407+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:35:44.411913+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0324f4"},"request_uri":"http://localhost:8000/_wdt/0324f4","method":"GET"} []
[2020-04-28T00:35:44.446002+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T00:35:44.452536+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:35:44.452631+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:35:44.452712+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:35:44.453679+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:35:44.455203+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:35:44.458477+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:35:44.459085+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:35:44.459194+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:35:44.465776+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:35:44.470322+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:35:44.472313+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:35:44.473097+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:35:44.476570+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:35:44.901489+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T00:35:44.903010+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:35:44.903121+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:35:44.903214+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:35:44.904107+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:35:44.909054+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:35:44.912605+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:35:44.913016+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:35:44.913113+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:35:44.917323+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T00:35:44.919345+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:35:44.919861+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:35:44.920485+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:35:44.920932+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:35:44.921562+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-28T00:35:44.950244+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:35:44.957370+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:36:07.137034+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:36:07.147986+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:36:08.088271+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aa3fd6"},"request_uri":"http://localhost:8000/_wdt/aa3fd6","method":"GET"} []
[2020-04-28T00:36:08.113589+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T00:36:08.117005+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:36:08.117208+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:36:08.117286+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:36:08.118093+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:36:08.119118+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:36:08.121365+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:36:08.121670+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:36:08.121718+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:36:08.125960+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:36:08.131062+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:36:08.132802+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:36:08.133332+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:36:08.135423+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:36:08.168001+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:36:08.172752+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:36:08.206136+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T00:36:08.207227+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:36:08.207320+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:36:08.207409+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:36:08.208305+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:36:08.214855+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:36:08.218706+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:36:08.219129+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:36:08.219217+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:36:08.226599+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T00:36:08.230969+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:36:08.231940+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:36:08.233871+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:36:08.234790+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:36:08.236141+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-28T00:55:18.530996+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:55:18.537294+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:55:19.437365+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f36c57"},"request_uri":"http://localhost:8000/_wdt/f36c57","method":"GET"} []
[2020-04-28T00:55:19.470310+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T00:55:19.474792+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:55:19.474877+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:19.474949+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:19.475771+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:19.477270+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:55:19.479992+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:19.480385+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:19.480455+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:19.485738+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:55:19.490252+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:55:19.491609+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:55:19.492113+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:55:19.494613+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:55:19.542136+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:55:19.550530+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:55:19.572848+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T00:55:19.573769+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:55:19.573855+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:19.573913+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:19.574642+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:19.578698+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:55:19.581021+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:19.581289+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:19.581335+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:19.588352+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T00:55:19.592459+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:55:19.593179+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:55:19.594304+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:55:19.595051+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:55:19.596068+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-28T00:55:49.141442+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:55:49.151204+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:55:50.090772+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"36069e"},"request_uri":"http://localhost:8000/_wdt/36069e","method":"GET"} []
[2020-04-28T00:55:50.119411+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T00:55:50.123161+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:55:50.123246+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:50.123322+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:50.124132+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:50.125528+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:55:50.128520+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:50.128781+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:50.128822+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:50.133055+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:55:50.137823+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:55:50.139241+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:55:50.141318+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T00:55:50.144667+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:55:50.184299+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T00:55:50.190631+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T00:55:50.545499+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T00:55:50.546244+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T00:55:50.546325+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:50.546408+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:50.546942+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:50.550576+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T00:55:50.552198+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:50.552469+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:50.552508+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T00:55:50.556145+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T00:55:50.559069+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:55:50.559555+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [63] []
[2020-04-28T00:55:50.560154+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:55:50.560435+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [64] []
[2020-04-28T00:55:50.561003+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-28T01:00:10.388329+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:00:10.396328+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:00:11.403825+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"546766"},"request_uri":"http://localhost:8000/_wdt/546766","method":"GET"} []
[2020-04-28T01:00:11.441969+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:00:11.447400+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:00:11.447495+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:00:11.447611+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:00:11.448558+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:00:11.449956+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:00:11.453646+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:00:11.454040+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:00:11.454120+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:00:11.474961+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:00:11.500654+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:00:11.502665+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:00:11.503455+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:00:11.507398+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:00:11.553533+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:00:11.561834+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:00:11.918362+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:00:11.919238+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:00:11.919296+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:00:11.919343+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:00:11.919866+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:00:11.922846+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:00:11.924530+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:00:11.924780+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:00:11.924827+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:00:11.953021+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:00:11.956275+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:00:11.973852+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:03:21.768392+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:03:21.775516+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:03:22.842626+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"486276"},"request_uri":"http://localhost:8000/_wdt/486276","method":"GET"} []
[2020-04-28T01:03:22.878517+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:03:22.888969+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:03:22.889059+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:22.889116+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:22.889743+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:22.890983+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:03:22.893638+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:22.894199+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:22.894260+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:22.900789+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:03:22.908149+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:03:22.910300+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:03:22.911160+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:03:22.913634+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:03:22.951716+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:03:22.958992+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:03:22.997604+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:03:22.999426+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:03:22.999544+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:22.999647+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:23.001195+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:23.006361+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:03:23.009699+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:23.010113+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:23.010193+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:23.026223+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:03:23.027766+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:03:23.032147+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:03:57.552596+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:03:57.560190+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:03:58.500525+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7712c7"},"request_uri":"http://localhost:8000/_wdt/7712c7","method":"GET"} []
[2020-04-28T01:03:58.525184+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:03:58.530083+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:03:58.530149+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:58.530199+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:58.530832+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:58.531813+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:03:58.535965+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:58.536367+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:58.536440+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:58.543338+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:03:58.549496+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:03:58.551926+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:03:58.552720+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:03:58.556390+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:03:58.598304+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:03:58.606382+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:03:58.927574+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:03:58.928264+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:03:58.928318+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:58.928366+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:58.928908+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:58.931626+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:03:58.933339+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:58.933573+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:58.933614+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:03:58.940124+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:03:58.941080+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:03:58.943684+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:05:16.472768+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:05:16.480229+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:05:17.425096+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"70f45b"},"request_uri":"http://localhost:8000/_wdt/70f45b","method":"GET"} []
[2020-04-28T01:05:17.455591+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:05:17.462739+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:05:17.462842+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:17.462927+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:17.463983+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:17.465593+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:05:17.470939+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:17.471316+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:17.471385+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:17.483478+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:05:17.489941+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:05:17.492247+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:05:17.492997+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:05:17.496536+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:05:17.545646+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:05:17.555864+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:05:17.892212+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:05:17.893102+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:05:17.893169+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:17.893239+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:17.894027+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:17.897190+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:05:17.899704+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:17.899947+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:17.899987+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:17.909069+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:05:17.910026+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:05:17.914792+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:05:42.042831+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:05:42.047589+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:05:43.112245+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-28T01:05:43.118275+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:05:43.288768+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-28T01:05:43.373912+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:05:43.377783+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:05:43.377870+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:43.377935+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:43.378714+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:43.379821+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:05:43.382232+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:43.382578+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:43.382635+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:43.389934+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:05:43.394756+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:05:43.396080+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:05:43.396614+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:05:43.399248+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:05:43.424247+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:05:43.430911+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:05:43.454621+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:05:43.455232+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:05:43.455276+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:43.455320+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:43.455808+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:43.458460+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:05:43.460049+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:43.460283+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:43.460322+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:05:43.467683+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:05:43.468826+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:05:43.471679+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:06:29.850756+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:06:29.855547+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:06:30.781619+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1b987f"},"request_uri":"http://localhost:8000/_wdt/1b987f","method":"GET"} []
[2020-04-28T01:06:30.820889+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:06:30.835013+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:06:30.835144+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:06:30.835635+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:06:30.837290+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:06:30.838825+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:06:30.841449+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:06:30.841720+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:06:30.841761+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:06:30.845415+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:06:30.849476+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:06:30.851905+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:06:30.852528+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:06:30.855598+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:06:30.887478+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:06:30.892167+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:06:30.917485+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:06:30.918799+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:06:30.918894+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:06:30.918981+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:06:30.920110+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:06:30.924900+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:06:30.927476+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:06:30.927878+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:06:30.927942+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:06:30.936666+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:06:30.938131+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:06:30.941566+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:07:14.280139+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:07:14.288045+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:07:15.196890+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"615e34"},"request_uri":"http://localhost:8000/_wdt/615e34","method":"GET"} []
[2020-04-28T01:07:15.216933+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:07:15.222585+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:07:15.222682+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:15.222758+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:15.223673+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:15.225015+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:07:15.227883+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:15.228240+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:15.228300+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:15.233348+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:07:15.238416+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:07:15.240504+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:07:15.241116+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:07:15.244044+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:07:15.274545+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:07:15.279754+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:07:15.313243+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:07:15.316206+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:07:15.316329+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:15.316428+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:15.317326+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:15.322387+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:07:15.325679+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:15.326035+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:15.326102+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:15.336507+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:07:15.338357+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:07:15.342927+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:07:34.971942+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:07:34.977704+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:07:35.914912+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cd301b"},"request_uri":"http://localhost:8000/_wdt/cd301b","method":"GET"} []
[2020-04-28T01:07:35.943964+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:07:35.951350+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:07:35.951484+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:35.951713+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:35.953167+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:35.955033+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:07:35.959325+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:35.959759+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:35.959829+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:35.965600+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:07:35.972865+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:07:35.975058+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:07:35.975746+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:07:35.978199+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:07:36.379238+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:07:36.379983+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:07:36.380043+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:36.380093+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:36.380642+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:36.383656+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:07:36.385774+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:36.386116+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:36.386175+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:36.393379+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:07:36.394713+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:07:36.397328+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:07:36.664323+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:07:36.670317+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:07:54.947321+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:07:54.953618+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:07:55.857867+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6d8c8e"},"request_uri":"http://localhost:8000/_wdt/6d8c8e","method":"GET"} []
[2020-04-28T01:07:55.890236+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:07:55.896044+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:07:55.896134+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:55.896210+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:55.897054+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:55.897992+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:07:55.901998+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:55.902347+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:55.902395+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:55.907299+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:07:55.911085+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:07:55.913488+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:07:55.914170+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:07:55.917183+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:07:55.951491+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:07:55.958262+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:07:56.310171+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:07:56.310855+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:07:56.310913+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:56.310960+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:56.311458+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:56.314187+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:07:56.316098+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:56.316456+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:56.316525+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:07:56.325857+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:07:56.326898+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:07:56.329274+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:08:13.219076+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:08:13.226204+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:08:14.075347+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"975510"},"request_uri":"http://localhost:8000/_wdt/975510","method":"GET"} []
[2020-04-28T01:08:14.097933+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:08:14.104143+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:08:14.104232+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:08:14.104306+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:08:14.105196+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:08:14.106750+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:08:14.109084+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:08:14.109347+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:08:14.109389+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:08:14.113189+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:08:14.117385+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:08:14.119474+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:08:14.120255+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:08:14.123872+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:08:14.159806+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:08:14.166932+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:08:14.200012+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:08:14.202096+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:08:14.202224+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:08:14.202362+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:08:14.203437+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:08:14.208570+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:08:14.211883+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:08:14.212309+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:08:14.212385+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:08:14.228559+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:08:14.230294+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:08:14.235859+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:10:09.982732+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:10:09.991188+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:10:10.834249+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a4cd27"},"request_uri":"http://localhost:8000/_wdt/a4cd27","method":"GET"} []
[2020-04-28T01:10:10.863434+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:10:10.869170+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:10:10.869276+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:10:10.869353+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:10:10.870302+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:10:10.871722+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:10:10.874760+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:10:10.875137+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:10:10.875202+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:10:10.880824+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:10:10.886398+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:10:10.888362+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:10:10.889050+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:10:10.892201+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:10:10.928405+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:10:10.937302+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:10:10.964501+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:10:10.965447+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:10:10.965546+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:10:10.965640+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:10:10.966432+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:10:10.973702+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:10:10.977826+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:10:10.978194+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:10:10.978266+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:10:10.986410+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:10:10.987754+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:10:10.991460+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:11:46.821272+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:11:46.828306+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:11:47.745379+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7c022a"},"request_uri":"http://localhost:8000/_wdt/7c022a","method":"GET"} []
[2020-04-28T01:11:47.772570+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:11:47.778544+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:11:47.797380+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:11:47.802599+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:11:47.802719+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:11:47.802834+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:11:47.804218+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:11:47.805940+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:11:47.809553+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:11:47.809952+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:11:47.810020+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:11:47.815419+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:11:47.820405+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:11:47.821855+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:11:47.822406+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:11:47.825015+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:11:48.193958+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:11:48.194680+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:11:48.194738+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:11:48.194784+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:11:48.195277+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:11:48.197936+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:11:48.199720+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:11:48.199958+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:11:48.199996+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:11:48.206440+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:11:48.207478+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:11:48.209994+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:13:43.496248+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:13:43.504001+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:13:44.437774+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"09c0ff"},"request_uri":"http://localhost:8000/_wdt/09c0ff","method":"GET"} []
[2020-04-28T01:13:44.465537+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:13:44.472274+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:13:44.472367+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:13:44.472441+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:13:44.473401+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:13:44.474700+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:13:44.479194+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:13:44.479518+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:13:44.479635+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:13:44.484946+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:13:44.489890+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:13:44.492804+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:13:44.493371+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:13:44.496871+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:13:44.531438+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:13:44.537532+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:13:44.872261+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:13:44.873316+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:13:44.873401+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:13:44.873481+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:13:44.874281+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:13:44.877777+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:13:44.879628+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:13:44.879866+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:13:44.879905+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:13:44.886651+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:13:44.888837+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:13:44.891922+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:14:41.677109+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:14:41.686635+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:14:42.662843+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5c8685"},"request_uri":"http://localhost:8000/_wdt/5c8685","method":"GET"} []
[2020-04-28T01:14:42.691469+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:14:42.696407+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:14:42.696506+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:14:42.696587+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:14:42.697818+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:14:42.699283+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:14:42.705220+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:14:42.705612+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:14:42.705684+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:14:42.712495+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:14:42.716746+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:14:42.718826+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:14:42.720004+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:14:42.723592+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:14:42.767380+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:14:42.775926+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:14:43.117775+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:14:43.118461+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:14:43.118510+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:14:43.118555+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:14:43.119065+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:14:43.121793+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:14:43.123401+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:14:43.123659+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:14:43.123700+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:14:43.130930+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:14:43.132025+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:14:43.134592+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:16:56.133709+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:16:56.140881+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:16:57.043173+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cb7876"},"request_uri":"http://localhost:8000/_wdt/cb7876","method":"GET"} []
[2020-04-28T01:16:57.070900+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:16:57.075847+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:16:57.075939+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:16:57.076015+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:16:57.076739+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:16:57.078690+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:16:57.081216+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:16:57.081502+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:16:57.081542+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:16:57.089424+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:16:57.093891+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:16:57.095398+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:16:57.096040+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:16:57.098937+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:16:57.163452+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:16:57.165018+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:16:57.165139+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:16:57.165252+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:16:57.166439+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:16:57.170769+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:16:57.174842+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:16:57.175468+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:16:57.175583+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:16:57.188085+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:16:57.190596+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:16:57.195227+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:17:02.542489+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:17:02.550611+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:17:06.631586+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:17:06.635757+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:17:07.554566+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9becec"},"request_uri":"http://localhost:8000/_wdt/9becec","method":"GET"} []
[2020-04-28T01:17:07.584136+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:17:07.590032+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:17:07.590098+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:17:07.590146+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:17:07.590909+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:17:07.592006+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:17:07.594499+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:17:07.594765+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:17:07.594805+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:17:07.598895+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:17:07.603325+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:17:07.604749+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:17:07.605345+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:17:07.608255+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:17:07.640433+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:17:07.648675+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:17:07.972182+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:17:07.973000+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:17:07.973061+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:17:07.973111+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:17:07.973783+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:17:07.977065+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:17:07.979349+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:17:07.979700+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:17:07.979763+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:17:07.989797+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:17:07.991091+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:17:07.994397+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:18:10.637049+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:18:10.644680+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:18:11.520776+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1ca339"},"request_uri":"http://localhost:8000/_wdt/1ca339","method":"GET"} []
[2020-04-28T01:18:11.544511+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:18:11.548884+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:18:11.548976+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:18:11.549070+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:18:11.549802+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:18:11.551482+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:18:11.555200+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:18:11.555656+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:18:11.555724+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:18:11.561298+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:18:11.566434+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:18:11.568249+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:18:11.568938+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:18:11.572022+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:18:11.611156+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:18:11.620862+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:18:11.962534+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:18:11.963754+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:18:11.963859+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:18:11.963959+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:18:11.964735+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:18:11.967641+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:18:11.970132+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:18:11.970423+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:18:11.970488+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:18:11.978971+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:18:11.980314+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:18:11.983363+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:23:01.452597+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:23:01.456981+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:23:02.352953+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f9d16f"},"request_uri":"http://localhost:8000/_wdt/f9d16f","method":"GET"} []
[2020-04-28T01:23:02.378113+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:23:02.383728+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:23:02.383795+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:23:02.383889+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:23:02.384743+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:23:02.385940+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:23:02.388360+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:23:02.388675+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:23:02.388721+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:23:02.392731+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:23:02.397107+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:23:02.398660+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:23:02.399342+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:23:02.401922+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:23:02.432623+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:23:02.438165+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:23:02.473131+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:23:02.473970+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:23:02.474035+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:23:02.474110+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:23:02.475104+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:23:02.481929+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:23:02.484669+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:23:02.485081+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:23:02.485170+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:23:02.495803+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:23:02.497265+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:23:02.500678+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:24:37.716101+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:24:37.720966+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:24:38.699678+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a5be1a"},"request_uri":"http://localhost:8000/_wdt/a5be1a","method":"GET"} []
[2020-04-28T01:24:38.732520+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:24:38.738665+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:24:38.738777+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:24:38.738867+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:24:38.739984+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:24:38.741856+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:24:38.745816+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:24:38.746271+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:24:38.746353+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:24:38.753266+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:24:38.759953+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:24:38.762170+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:24:38.762907+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:24:38.766561+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:24:38.808675+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:24:38.816188+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:24:39.138900+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:24:39.139665+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:24:39.139735+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:24:39.139783+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:24:39.140285+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:24:39.143386+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:24:39.145698+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:24:39.146054+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:24:39.146113+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:24:39.156084+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:24:39.157561+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:24:39.161050+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:26:08.030649+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:26:08.039145+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:26:08.921784+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"091bce"},"request_uri":"http://localhost:8000/_wdt/091bce","method":"GET"} []
[2020-04-28T01:26:08.949969+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:26:08.957932+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:26:08.958022+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:26:08.958099+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:26:08.959056+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:26:08.960483+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:26:08.963673+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:26:08.964048+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:26:08.964110+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:26:08.969767+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:26:08.975649+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:26:08.977533+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:26:08.978210+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:26:08.981801+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:26:09.026073+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:26:09.032971+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:26:09.068864+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:26:09.070037+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:26:09.070137+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:26:09.070227+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:26:09.071099+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:26:09.075363+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:26:09.077533+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:26:09.077839+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:26:09.077893+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:26:09.089914+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:26:09.091491+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:26:09.095769+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:27:01.105387+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:27:01.118607+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:27:01.997350+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eba632"},"request_uri":"http://localhost:8000/_wdt/eba632","method":"GET"} []
[2020-04-28T01:27:02.017628+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:27:02.023411+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:27:02.023507+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:02.023612+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:02.024651+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:02.026166+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:27:02.029432+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:02.029851+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:02.029931+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:02.035981+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:27:02.042173+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:27:02.044370+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:27:02.045775+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:27:02.048819+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:27:02.078377+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:27:02.086078+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:27:02.118909+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:27:02.119967+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:27:02.120058+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:02.120131+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:02.120961+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:02.125675+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:27:02.128382+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:02.128772+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:02.128839+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:02.138951+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:27:02.140462+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:27:02.143896+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:27:12.620254+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:27:12.625649+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:27:13.530517+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"88a9e1"},"request_uri":"http://localhost:8000/_wdt/88a9e1","method":"GET"} []
[2020-04-28T01:27:13.562578+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:27:13.569735+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:27:13.569807+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:13.569858+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:13.570630+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:13.572038+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:27:13.575090+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:13.575423+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:13.575478+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:13.581177+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:27:13.586065+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:27:13.587633+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:27:13.588411+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:27:13.591658+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:27:13.627618+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:27:13.634997+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:27:13.673331+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:27:13.674508+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:27:13.674615+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:13.674749+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:13.675740+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:13.680877+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:27:13.684429+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:13.684794+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:13.684857+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:13.698610+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:27:13.700826+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:27:13.706229+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:27:30.190166+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:27:30.194610+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:27:31.061224+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"026e74"},"request_uri":"http://localhost:8000/_wdt/026e74","method":"GET"} []
[2020-04-28T01:27:31.096629+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:27:31.102249+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:27:31.102344+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:31.102432+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:31.103410+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:31.105006+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:27:31.108182+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:31.108537+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:31.108596+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:31.114755+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:27:31.120652+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:27:31.123176+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:27:31.124034+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:27:31.127444+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:27:31.169674+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:27:31.177112+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:27:31.209800+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:27:31.211050+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:27:31.211154+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:31.211243+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:31.212230+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:31.220228+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:27:31.223095+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:31.223486+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:31.223575+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:31.238680+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:27:31.240506+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:27:31.244634+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:27:48.002218+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:27:48.010056+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:27:48.904281+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"76e463"},"request_uri":"http://localhost:8000/_wdt/76e463","method":"GET"} []
[2020-04-28T01:27:48.938497+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:27:48.942514+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:27:48.942584+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:48.942645+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:48.943296+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:48.944513+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:27:48.947699+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:48.948048+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:48.948104+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:48.958930+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:27:48.963678+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:27:48.965871+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:27:48.966587+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:27:48.969695+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:27:49.006201+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:27:49.013952+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:27:49.047019+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:27:49.048417+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:27:49.048514+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:49.048773+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:49.049672+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:49.052514+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:27:49.054471+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:49.054812+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:49.054869+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:27:49.062522+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:27:49.065120+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:27:49.069477+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:29:46.875457+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:29:46.885760+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:29:47.781485+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eb9a0d"},"request_uri":"http://localhost:8000/_wdt/eb9a0d","method":"GET"} []
[2020-04-28T01:29:47.811549+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:29:47.824693+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:29:47.824762+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:29:47.824813+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:29:47.826865+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:29:47.835024+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:29:47.845447+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:29:47.845724+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:29:47.845767+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:29:47.851867+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:29:47.869229+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:29:47.871856+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:29:47.872819+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:29:47.876635+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:29:48.218738+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:29:48.219958+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:29:48.220050+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:29:48.220132+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:29:48.220952+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:29:48.226464+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:29:48.228459+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:29:48.228720+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:29:48.228761+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:29:48.244376+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:29:48.245309+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:29:48.247902+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:29:48.273085+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:29:48.281322+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:31:42.803495+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:31:42.808466+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:31:43.677558+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4a2762"},"request_uri":"http://localhost:8000/_wdt/4a2762","method":"GET"} []
[2020-04-28T01:31:43.700135+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:31:43.706122+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:31:43.706208+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:31:43.706267+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:31:43.707141+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:31:43.708359+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:31:43.711309+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:31:43.711692+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:31:43.711743+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:31:43.715931+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:31:43.721673+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:31:43.723462+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:31:43.724162+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:31:43.727890+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:31:43.799997+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:31:43.801926+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:31:43.802076+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:31:43.802231+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:31:43.803375+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:31:43.807230+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:31:43.809915+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:31:43.810274+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:31:43.810336+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:31:43.821567+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:31:43.822754+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:31:43.827663+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:31:45.358677+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:31:45.364021+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:32:31.758084+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:32:31.763791+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:32:32.670016+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b31fe4"},"request_uri":"http://localhost:8000/_wdt/b31fe4","method":"GET"} []
[2020-04-28T01:32:32.695980+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:32:32.699685+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:32:32.699795+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:32:32.699879+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:32:32.700917+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:32:32.702269+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:32:32.705978+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:32:32.706340+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:32:32.706404+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:32:32.731424+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:32:32.775878+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:32:32.777592+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:32:32.778408+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:32:32.782359+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:32:32.823066+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:32:32.831829+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:32:33.159731+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:32:33.160823+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:32:33.160921+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:32:33.160996+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:32:33.161751+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:32:33.165421+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:32:33.167600+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:32:33.167918+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:32:33.167971+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:32:33.205770+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:32:33.207152+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:32:33.223470+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:33:38.931741+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:33:38.937511+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:33:39.806855+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cf82f5"},"request_uri":"http://localhost:8000/_wdt/cf82f5","method":"GET"} []
[2020-04-28T01:33:39.833650+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:33:39.838814+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:33:39.838906+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:33:39.838982+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:33:39.839861+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:33:39.841146+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:33:39.843930+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:33:39.844292+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:33:39.844357+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:33:39.849775+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:33:39.854541+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:33:39.855939+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:33:39.856516+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:33:39.859055+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:33:39.887920+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:33:39.895114+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:33:39.935562+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:33:39.936817+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:33:39.936923+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:33:39.937012+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:33:39.937962+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:33:39.943132+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:33:39.946732+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:33:39.947195+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:33:39.947285+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:33:39.960909+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:33:39.962826+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:33:39.967343+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:35:05.223937+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:35:05.229074+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:35:06.122512+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d7d75a"},"request_uri":"http://localhost:8000/_wdt/d7d75a","method":"GET"} []
[2020-04-28T01:35:06.159809+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:35:06.166102+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:35:06.166214+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:06.166315+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:06.167612+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:06.169167+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:35:06.172435+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:06.173221+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:06.173325+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:06.180150+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:35:06.186681+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:35:06.188827+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:35:06.189705+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:35:06.193300+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:35:06.236322+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:35:06.244211+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:35:06.583819+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:35:06.584834+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:35:06.584912+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:06.584964+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:06.585575+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:06.588992+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:35:06.591380+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:06.591908+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:06.591965+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:06.600475+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:35:06.601999+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:35:06.605605+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:35:47.513377+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:35:47.520885+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:35:48.440265+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8f0e3e"},"request_uri":"http://localhost:8000/_wdt/8f0e3e","method":"GET"} []
[2020-04-28T01:35:48.468296+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:35:48.472279+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:35:48.490013+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:35:48.495070+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:35:48.495167+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:48.495265+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:48.496324+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:48.498021+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:35:48.502237+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:48.502629+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:48.502702+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:48.508755+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:35:48.514886+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:35:48.516495+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:35:48.517214+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:35:48.520573+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:35:48.900283+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:35:48.901030+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:35:48.901084+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:48.901129+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:48.901605+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:48.904579+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:35:48.906857+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:48.907192+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:48.907251+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:48.917218+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:35:48.918605+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:35:48.922268+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:35:50.331326+02:00] request.INFO: Matched route "api_participants_delete_item". {"route":"api_participants_delete_item","route_parameters":{"_route":"api_participants_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Participant","_api_item_operation_name":"delete","id":"1"},"request_uri":"http://localhost:8000/api/participants/1","method":"DELETE"} []
[2020-04-28T01:35:50.331985+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:35:50.332034+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:50.332079+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:50.332707+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:50.335622+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:35:50.338037+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:50.338644+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:50.338734+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:35:50.341777+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.user_id AS user_id_1, p0_.conference_id AS conference_id_2 FROM participant p0_ WHERE p0_.id = ? [1] []
[2020-04-28T01:35:50.346063+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T01:35:50.346316+02:00] doctrine.DEBUG: DELETE FROM participant WHERE id = ? [1] []
[2020-04-28T01:35:50.348484+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T01:36:07.134696+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:36:07.143185+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:36:08.055736+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ffff7b"},"request_uri":"http://localhost:8000/_wdt/ffff7b","method":"GET"} []
[2020-04-28T01:36:08.095684+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:36:08.100289+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:36:08.120585+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:36:08.126612+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:36:08.126737+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:08.126841+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:08.128042+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:08.129995+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:36:08.134472+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:08.134901+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:08.134979+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:08.144036+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:36:08.150513+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:36:08.153621+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:36:08.154420+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:36:08.156587+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:36:08.511464+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:36:08.512168+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:36:08.512225+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:08.512272+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:08.513035+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:08.516535+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:36:08.518464+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:08.518703+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:08.518743+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:08.525655+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:36:08.526771+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:36:08.528940+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:36:37.895918+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:36:37.903668+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:36:38.878848+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"11a72b"},"request_uri":"http://localhost:8000/_wdt/11a72b","method":"GET"} []
[2020-04-28T01:36:38.906456+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:36:38.912159+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:36:38.912260+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:38.912346+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:38.913362+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:38.914740+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:36:38.919424+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:38.919851+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:38.919926+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:38.926212+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:36:38.931455+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:36:38.934160+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:36:38.935113+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:36:38.936992+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:36:38.978116+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T01:36:38.985953+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T01:36:39.038726+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:36:39.040182+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:36:39.040287+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:39.040373+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:39.041218+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:39.046685+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:36:39.050924+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:39.051342+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:39.051420+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:39.065137+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:36:39.066768+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:36:39.070596+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:36:39.961216+02:00] request.INFO: Matched route "api_participants_post_collection". {"route":"api_participants_post_collection","route_parameters":{"_route":"api_participants_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Participant","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/participants","method":"POST"} []
[2020-04-28T01:36:39.962077+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:36:39.962144+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:39.962197+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:39.962788+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:39.965827+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:36:39.970059+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:39.970430+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:39.970508+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:39.983623+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-04-28T01:36:39.985339+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ WHERE c0_.id = ? [63] []
[2020-04-28T01:36:39.989288+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T01:36:39.989880+02:00] doctrine.DEBUG: INSERT INTO participant (user_id, conference_id) VALUES (?, ?) {"1":2,"2":63} []
[2020-04-28T01:36:39.991101+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T01:36:39.998629+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.id = ? [2] []
[2020-04-28T01:36:40.069054+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:36:40.074507+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:36:40.074603+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:40.074681+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:40.075467+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:40.076735+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:36:40.079729+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:40.080295+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:40.080406+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:40.084397+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:36:40.086966+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:36:40.088586+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:36:40.089400+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:36:40.092179+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:36:40.143064+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:36:40.144067+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:36:40.144153+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:40.144221+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:40.144849+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:40.147923+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:36:40.149645+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:40.149914+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:40.149961+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:40.158761+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:36:40.160457+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:36:40.165140+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T01:36:41.726212+02:00] request.INFO: Matched route "api_participants_delete_item". {"route":"api_participants_delete_item","route_parameters":{"_route":"api_participants_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Participant","_api_item_operation_name":"delete","id":"2"},"request_uri":"http://localhost:8000/api/participants/2","method":"DELETE"} []
[2020-04-28T01:36:41.727266+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:36:41.727358+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:41.727441+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:41.728450+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:41.734951+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:36:41.738972+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:41.739637+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:41.739750+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:41.743848+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.user_id AS user_id_1, p0_.conference_id AS conference_id_2 FROM participant p0_ WHERE p0_.id = ? [2] []
[2020-04-28T01:36:41.749540+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T01:36:41.749784+02:00] doctrine.DEBUG: DELETE FROM participant WHERE id = ? [2] []
[2020-04-28T01:36:41.750058+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T01:36:41.851095+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T01:36:41.854589+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:36:41.854747+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:41.854908+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:41.856131+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:41.857627+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:36:41.860799+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:41.861151+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:41.861214+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:41.866671+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:36:41.871719+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:36:41.873303+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:36:41.874074+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T01:36:41.875234+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:36:41.919717+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T01:36:41.921174+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T01:36:41.921290+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:41.921407+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:41.922624+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:41.928097+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T01:36:41.929867+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:41.930127+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:41.930169+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T01:36:41.936144+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T01:36:41.937533+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T01:36:41.940875+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T12:59:46.129283+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-28T12:59:46.192363+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T12:59:46.919167+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e5cecf"},"request_uri":"http://127.0.0.1:8000/_wdt/e5cecf","method":"GET"} []
[2020-04-28T12:59:47.014102+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-28T12:59:47.018340+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T12:59:47.041722+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-04-28T12:59:49.757455+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-28T12:59:49.762540+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T12:59:49.974645+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"23f836"},"request_uri":"http://127.0.0.1:8000/_wdt/23f836","method":"GET"} []
[2020-04-28T12:59:50.003139+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-28T12:59:50.008314+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T12:59:59.982685+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T12:59:59.987248+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T13:00:00.848825+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6b8c61"},"request_uri":"http://localhost:8000/_wdt/6b8c61","method":"GET"} []
[2020-04-28T13:00:00.977811+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T13:00:00.988846+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T13:00:01.020592+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T13:00:01.083824+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T13:00:01.083905+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:00:01.083957+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:00:01.084122+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T13:00:01.087106+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-28T13:00:01.087696+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-28T13:00:01.123877+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://localhost:8000/")" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://localhost:8000/\") at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-04-28T13:00:59.984768+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T13:00:59.988541+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T13:01:01.942234+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-28T13:01:01.967508+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:01:02.139502+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-28T13:01:02.229769+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T13:01:02.238425+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T13:01:02.257470+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T13:01:02.260529+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T13:01:02.260617+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:01:02.260690+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:01:02.264929+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:01:02.267965+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:01:02.270795+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:01:02.271154+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:01:02.271210+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:01:02.321428+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:01:02.334813+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T13:01:02.335751+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T13:01:02.336152+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T13:01:02.338516+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:01:02.385539+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T13:01:02.386355+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T13:01:02.386408+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:01:02.386453+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:01:02.386985+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:01:02.390229+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:01:02.391826+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:01:02.392054+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:01:02.392105+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:01:02.408762+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T13:01:02.414086+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T13:01:02.418155+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T13:02:37.086932+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T13:02:37.094230+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T13:02:37.986751+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"71f9b7"},"request_uri":"http://localhost:8000/_wdt/71f9b7","method":"GET"} []
[2020-04-28T13:02:38.028586+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T13:02:38.034334+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T13:02:38.034413+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:38.034467+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:38.035352+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:38.036529+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:02:38.039905+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:38.040291+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:38.040359+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:38.046073+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:02:38.051285+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T13:02:38.053399+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T13:02:38.054428+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T13:02:38.056757+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:02:38.088835+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T13:02:38.094758+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T13:02:38.139198+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T13:02:38.139925+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T13:02:38.139993+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:38.140062+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:38.140805+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:38.144584+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:02:38.146193+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:38.146430+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:38.146470+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:38.153424+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T13:02:38.154324+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T13:02:38.156308+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T13:02:50.218433+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T13:02:50.235986+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T13:02:51.035257+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ff4403"},"request_uri":"http://localhost:8000/_wdt/ff4403","method":"GET"} []
[2020-04-28T13:02:51.056797+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T13:02:51.061483+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T13:02:51.061547+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:51.061592+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:51.062112+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:51.063022+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:02:51.065130+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:51.065383+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:51.065425+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:51.069181+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:02:51.074423+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T13:02:51.076176+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T13:02:51.076838+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T13:02:51.078051+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:02:51.119017+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T13:02:51.127041+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T13:02:51.168749+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T13:02:51.169364+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T13:02:51.169413+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:51.169459+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:51.169958+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:51.172958+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:02:51.174748+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:51.174999+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:51.175039+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:02:51.183898+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T13:02:51.184787+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T13:02:51.186928+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T13:03:35.723943+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T13:03:35.728966+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T13:03:36.651126+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c97525"},"request_uri":"http://localhost:8000/_wdt/c97525","method":"GET"} []
[2020-04-28T13:03:36.675804+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T13:03:36.680406+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T13:03:36.680493+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:03:36.680572+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:03:36.681420+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:03:36.682608+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:03:36.685279+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:03:36.685629+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:03:36.685688+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:03:36.690633+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:03:36.695344+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T13:03:36.696744+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T13:03:36.697240+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T13:03:36.698068+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:03:36.731683+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T13:03:36.740900+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T13:03:36.770944+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T13:03:36.772043+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T13:03:36.772135+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:03:36.772229+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:03:36.773055+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:03:36.778269+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:03:36.780842+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:03:36.781127+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:03:36.781171+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:03:36.789805+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T13:03:36.790818+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T13:03:36.793895+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T13:04:04.110711+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T13:04:04.118180+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T13:04:05.078474+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8c07de"},"request_uri":"http://localhost:8000/_wdt/8c07de","method":"GET"} []
[2020-04-28T13:04:05.105762+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T13:04:05.111413+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T13:04:05.111481+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:04:05.111533+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:04:05.112482+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:04:05.113391+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:04:05.115276+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:04:05.115527+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:04:05.115567+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:04:05.119134+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:04:05.122355+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T13:04:05.123550+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T13:04:05.124023+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T13:04:05.124961+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:04:05.156950+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T13:04:05.164554+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T13:04:05.209958+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T13:04:05.210964+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T13:04:05.211036+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:04:05.211103+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:04:05.211833+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:04:05.215601+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:04:05.219141+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:04:05.219578+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:04:05.219669+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:04:05.229827+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T13:04:05.231227+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T13:04:05.234100+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T13:04:53.779088+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T13:04:53.788272+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T13:05:04.539921+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T13:05:04.544956+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T13:05:04.572637+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T13:05:04.578716+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T13:05:04.578829+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:05:04.578914+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:05:04.579852+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:05:04.581276+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:05:04.583908+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:05:04.584287+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:05:04.584367+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:05:04.588278+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:05:04.591806+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T13:05:04.592963+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T13:05:04.593795+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T13:05:04.595436+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:05:04.639667+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T13:05:04.640241+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T13:05:04.640285+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:05:04.640328+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:05:04.640787+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:05:04.643332+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T13:05:04.647073+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:05:04.647623+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:05:04.647706+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T13:05:04.653673+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T13:05:04.654579+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T13:05:04.656631+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T16:56:37.260525+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T16:56:37.264724+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T16:56:38.178525+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cf15d2"},"request_uri":"http://localhost:8000/_wdt/cf15d2","method":"GET"} []
[2020-04-28T16:56:38.199079+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T16:56:38.204572+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T16:56:38.204662+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T16:56:38.204725+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T16:56:38.208780+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:117)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T16:56:38.210210+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T16:56:38.335984+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T16:56:38.343329+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T16:56:40.752365+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T16:56:40.757855+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T16:56:41.920811+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-28T16:56:41.928246+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T16:56:42.080069+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-28T16:56:42.164556+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T16:56:42.172951+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T16:56:42.191293+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T16:56:42.194663+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T16:56:42.194737+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T16:56:42.194792+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T16:56:42.195389+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T16:56:42.196181+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T16:56:42.198084+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T16:56:42.198399+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T16:56:42.198475+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T16:56:42.203199+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T16:56:42.207214+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T16:56:42.208580+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T16:56:42.209113+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T16:56:42.209893+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T16:56:42.247029+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T16:56:42.247612+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T16:56:42.247658+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T16:56:42.247702+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T16:56:42.248177+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T16:56:42.250631+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T16:56:42.252129+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T16:56:42.252357+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T16:56:42.252395+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T16:56:42.260643+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T16:56:42.261870+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T16:56:42.264545+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T17:15:51.426761+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:15:51.437305+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:15:52.233075+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"07f7e8"},"request_uri":"http://localhost:8000/_wdt/07f7e8","method":"GET"} []
[2020-04-28T17:15:52.353392+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:15:52.359136+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:15:53.350588+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T17:15:53.354138+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:15:53.354205+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:15:53.354255+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:15:53.354883+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:15:53.355777+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:15:53.357765+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:15:53.358009+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:15:53.358049+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:15:53.361347+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:15:53.364628+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T17:15:53.365779+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T17:15:53.366217+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T17:15:53.367041+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:15:53.402230+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:15:53.402802+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:15:53.402844+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:15:53.402887+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:15:53.403338+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:15:53.405766+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:15:53.407242+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:15:53.407470+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:15:53.407510+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:15:53.413323+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:15:53.414213+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T17:15:53.416243+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T17:16:39.309138+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:16:39.313551+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:16:40.160899+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7e824d"},"request_uri":"http://localhost:8000/_wdt/7e824d","method":"GET"} []
[2020-04-28T17:16:40.352524+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T17:16:40.357819+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:16:40.357898+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:16:40.357960+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:16:40.358743+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:16:40.359921+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:16:40.361845+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:16:40.362104+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:16:40.362147+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:16:40.365495+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:16:40.369539+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T17:16:40.371126+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T17:16:40.371958+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T17:16:40.373166+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:16:40.419573+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:16:40.420522+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:16:40.420603+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:16:40.420659+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:16:40.421257+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:16:40.424213+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:16:40.425763+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:16:40.425989+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:16:40.426028+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:16:40.431382+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:16:40.432339+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T17:16:40.434496+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T17:16:42.530538+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:16:42.538048+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:25:46.368584+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:25:46.373464+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:25:46.391480+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:25:46.392170+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:25:46.392218+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:25:46.392262+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:25:46.392828+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:25:46.398149+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:25:46.400403+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:25:46.400668+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:25:46.400710+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:25:46.408709+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:25:46.409648+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, e1_.id AS id_7, e1_.name AS name_8, e1_.description AS description_9, e1_.date_start AS date_start_10, e1_.date_end AS date_end_11, e1_.place AS place_12, s2_.id AS id_13, s2_.description AS description_14, p3_.id AS id_15, c0_.event_id AS event_id_16, s2_.user_id AS user_id_17, s2_.conference_id AS conference_id_18, p3_.user_id AS user_id_19, p3_.conference_id AS conference_id_20 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T17:25:46.414428+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN event e1_ ON c0_.event_id = e1_.id LEFT JOIN speaker s2_ ON c0_.id = s2_.conference_id LEFT JOIN participant p3_ ON c0_.id = p3_.conference_id [] []
[2020-04-28T17:30:48.850762+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:30:48.856269+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:30:49.800938+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9948b3"},"request_uri":"http://localhost:8000/_wdt/9948b3","method":"GET"} []
[2020-04-28T17:30:49.861622+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:30:49.862942+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:30:49.863046+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:30:49.863138+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:30:49.864641+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:30:49.870346+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:30:49.874320+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:30:49.875675+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:30:49.875768+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:30:49.921639+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:30:49.922657+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.informations AS informations_5, c0_.room AS room_6, s1_.id AS id_7, s1_.description AS description_8, p2_.id AS id_9, s1_.user_id AS user_id_10, s1_.conference_id AS conference_id_11, p2_.user_id AS user_id_12, p2_.conference_id AS conference_id_13 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T17:30:49.928032+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\InvalidFieldNameException: "An exception occurred while executing 'SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.informations AS informations_5, c0_.room AS room_6, s1_.id AS id_7, s1_.description AS description_8, p2_.id AS id_9, s1_.user_id AS user_id_10, s1_.conference_id AS conference_id_11, p2_.user_id AS user_id_12, p2_.conference_id AS conference_id_13 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?, ?) ORDER BY c0_.id ASC' with params [63, 64]:  SQLSTATE[42S22]: Column not found: 1054 Unknown column 'c0_.start' in 'field list'" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 60 {"exception":"[object] (Doctrine\\DBAL\\Exception\\InvalidFieldNameException(code: 0): An exception occurred while executing 'SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.informations AS informations_5, c0_.room AS room_6, s1_.id AS id_7, s1_.description AS description_8, p2_.id AS id_9, s1_.user_id AS user_id_10, s1_.conference_id AS conference_id_11, p2_.user_id AS user_id_12, p2_.conference_id AS conference_id_13 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?, ?) ORDER BY c0_.id ASC' with params [63, 64]:\n\nSQLSTATE[42S22]: Column not found: 1054 Unknown column 'c0_.start' in 'field list' at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:60)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 42S22): SQLSTATE[42S22]: Column not found: 1054 Unknown column 'c0_.start' in 'field list' at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:123)\n[previous exception] [object] (PDOException(code: 42S22): SQLSTATE[42S22]: Column not found: 1054 Unknown column 'c0_.start' in 'field list' at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:121)"} []
[2020-04-28T17:30:49.997192+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:30:50.005808+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:31:14.954175+02:00] console.ERROR: Error thrown while running command "'make:migrations'". Message: "Command "make:migrations" is not defined.  Did you mean one of these?     doctrine:migrations:diff     doctrine:migrations:dump-schema     doctrine:migrations:execute     doctrine:migrations:generate     doctrine:migrations:latest     doctrine:migrations:migrate     doctrine:migrations:rollup     doctrine:migrations:status     doctrine:migrations:up-to-date     doctrine:migrations:version     make:auth     make:command     make:controller     make:crud     make:entity     make:fixtures     make:form     make:functional-test     make:migration     make:registration-form     make:serializer:encoder     make:serializer:normalizer     make:subscriber     make:twig-extension     make:unit-test     make:user     make:validator     make:voter" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): Command \"make:migrations\" is not defined.\n\nDid you mean one of these?\n    doctrine:migrations:diff\n    doctrine:migrations:dump-schema\n    doctrine:migrations:execute\n    doctrine:migrations:generate\n    doctrine:migrations:latest\n    doctrine:migrations:migrate\n    doctrine:migrations:rollup\n    doctrine:migrations:status\n    doctrine:migrations:up-to-date\n    doctrine:migrations:version\n    make:auth\n    make:command\n    make:controller\n    make:crud\n    make:entity\n    make:fixtures\n    make:form\n    make:functional-test\n    make:migration\n    make:registration-form\n    make:serializer:encoder\n    make:serializer:normalizer\n    make:subscriber\n    make:twig-extension\n    make:unit-test\n    make:user\n    make:validator\n    make:voter at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/console/Application.php:644)","command":"'make:migrations'","message":"Command \"make:migrations\" is not defined.\n\nDid you mean one of these?\n    doctrine:migrations:diff\n    doctrine:migrations:dump-schema\n    doctrine:migrations:execute\n    doctrine:migrations:generate\n    doctrine:migrations:latest\n    doctrine:migrations:migrate\n    doctrine:migrations:rollup\n    doctrine:migrations:status\n    doctrine:migrations:up-to-date\n    doctrine:migrations:version\n    make:auth\n    make:command\n    make:controller\n    make:crud\n    make:entity\n    make:fixtures\n    make:form\n    make:functional-test\n    make:migration\n    make:registration-form\n    make:serializer:encoder\n    make:serializer:normalizer\n    make:subscriber\n    make:twig-extension\n    make:unit-test\n    make:user\n    make:validator\n    make:voter"} []
[2020-04-28T17:31:18.092490+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-28T17:31:18.095898+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T17:31:18.104715+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T17:31:18.106123+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T17:31:18.109384+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-28T17:31:18.113054+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-28T17:31:18.113533+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'admin' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T17:31:18.114096+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'admin' */ WHERE k.table_name = 'admin' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T17:31:18.115364+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'admin' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T17:31:18.115983+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'admin' [] []
[2020-04-28T17:31:18.116418+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'conference' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T17:31:18.116941+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'conference' */ WHERE k.table_name = 'conference' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T17:31:18.117258+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'conference' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T17:31:18.117530+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'conference' [] []
[2020-04-28T17:31:18.117755+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'event' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T17:31:18.118194+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'event' */ WHERE k.table_name = 'event' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T17:31:18.118466+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'event' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T17:31:18.118700+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'event' [] []
[2020-04-28T17:31:18.118900+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'medecin' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T17:31:18.119282+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'medecin' */ WHERE k.table_name = 'medecin' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T17:31:18.119584+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'medecin' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T17:31:18.119840+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'medecin' [] []
[2020-04-28T17:31:18.120061+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T17:31:18.120435+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T17:31:18.120706+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T17:31:18.120942+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-28T17:31:18.121152+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'participant' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T17:31:18.121534+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'participant' */ WHERE k.table_name = 'participant' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T17:31:18.121856+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'participant' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T17:31:18.122127+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'participant' [] []
[2020-04-28T17:31:18.122334+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'speaker' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T17:31:18.122726+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'speaker' */ WHERE k.table_name = 'speaker' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T17:31:18.123022+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'speaker' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T17:31:18.123296+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'speaker' [] []
[2020-04-28T17:31:18.123508+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T17:31:18.123958+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T17:31:18.124252+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T17:31:18.124509+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-04-28T17:31:22.131770+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-28T17:31:22.133193+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T17:31:22.137782+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T17:31:22.138277+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T17:31:22.140003+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-28T17:31:22.141922+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-04-28T17:31:23.571808+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2020-04-28T17:31:30.152817+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-28T17:31:30.154323+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T17:31:30.158951+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T17:31:30.159464+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T17:31:30.161230+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-28T17:31:30.162019+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-04-28T17:31:32.723519+02:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355', '20200317201021', '20200317201232', '20200318120105', '20200331213036', '20200417151230', '20200427220257', '20200428153118') ORDER BY version DESC LIMIT 1 [] []
[2020-04-28T17:31:32.728467+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-04-28T17:31:32.737844+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T17:31:32.779868+02:00] doctrine.DEBUG: ALTER TABLE admin DROP FOREIGN KEY FK_880E0D7671F7E88B [] []
[2020-04-28T17:31:32.801686+02:00] doctrine.DEBUG: ALTER TABLE conference DROP FOREIGN KEY FK_911533C871F7E88B [] []
[2020-04-28T17:31:32.816828+02:00] doctrine.DEBUG: DROP TABLE event [] []
[2020-04-28T17:31:32.855627+02:00] doctrine.DEBUG: DROP INDEX IDX_880E0D7671F7E88B ON admin [] []
[2020-04-28T17:31:32.896241+02:00] doctrine.DEBUG: ALTER TABLE admin DROP event_id [] []
[2020-04-28T17:31:33.012957+02:00] doctrine.DEBUG: DROP INDEX IDX_911533C871F7E88B ON conference [] []
[2020-04-28T17:31:33.046312+02:00] doctrine.DEBUG: ALTER TABLE conference ADD start DATETIME NOT NULL, ADD end DATETIME DEFAULT NULL, DROP event_id, DROP hour_start, DROP hour_end [] []
[2020-04-28T17:31:33.055453+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-04-28T17:31:33.056387+02:00] console.ERROR: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing 'ALTER TABLE conference ADD start DATETIME NOT NULL, ADD end DATETIME DEFAULT NULL, DROP event_id, DROP hour_start, DROP hour_end':  SQLSTATE[22007]: Invalid datetime format: 1292 Incorrect datetime value: '0000-00-00 00:00:00' for column 'start' at row 1" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred while executing 'ALTER TABLE conference ADD start DATETIME NOT NULL, ADD end DATETIME DEFAULT NULL, DROP event_id, DROP hour_start, DROP hour_end':\n\nSQLSTATE[22007]: Invalid datetime format: 1292 Incorrect datetime value: '0000-00-00 00:00:00' for column 'start' at row 1 at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 22007): SQLSTATE[22007]: Invalid datetime format: 1292 Incorrect datetime value: '0000-00-00 00:00:00' for column 'start' at row 1 at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:80)\n[previous exception] [object] (PDOException(code: 22007): SQLSTATE[22007]: Invalid datetime format: 1292 Incorrect datetime value: '0000-00-00 00:00:00' for column 'start' at row 1 at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:75)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing 'ALTER TABLE conference ADD start DATETIME NOT NULL, ADD end DATETIME DEFAULT NULL, DROP event_id, DROP hour_start, DROP hour_end':\n\nSQLSTATE[22007]: Invalid datetime format: 1292 Incorrect datetime value: '0000-00-00 00:00:00' for column 'start' at row 1"} []
[2020-04-28T17:31:33.056651+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2020-04-28T17:31:37.753246+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:31:37.757867+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:31:38.711584+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6feaa0"},"request_uri":"http://localhost:8000/_wdt/6feaa0","method":"GET"} []
[2020-04-28T17:31:38.737186+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:31:38.740963+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:31:38.759237+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:31:38.760225+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:31:38.760302+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:31:38.760368+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:31:38.761282+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:31:38.765579+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:31:38.769962+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:31:38.770504+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:31:38.770590+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:31:38.781161+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:31:38.782533+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.informations AS informations_5, c0_.room AS room_6, s1_.id AS id_7, s1_.description AS description_8, p2_.id AS id_9, s1_.user_id AS user_id_10, s1_.conference_id AS conference_id_11, p2_.user_id AS user_id_12, p2_.conference_id AS conference_id_13 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T17:31:38.784262+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\InvalidFieldNameException: "An exception occurred while executing 'SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.informations AS informations_5, c0_.room AS room_6, s1_.id AS id_7, s1_.description AS description_8, p2_.id AS id_9, s1_.user_id AS user_id_10, s1_.conference_id AS conference_id_11, p2_.user_id AS user_id_12, p2_.conference_id AS conference_id_13 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?, ?) ORDER BY c0_.id ASC' with params [63, 64]:  SQLSTATE[42S22]: Column not found: 1054 Unknown column 'c0_.start' in 'field list'" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 60 {"exception":"[object] (Doctrine\\DBAL\\Exception\\InvalidFieldNameException(code: 0): An exception occurred while executing 'SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.informations AS informations_5, c0_.room AS room_6, s1_.id AS id_7, s1_.description AS description_8, p2_.id AS id_9, s1_.user_id AS user_id_10, s1_.conference_id AS conference_id_11, p2_.user_id AS user_id_12, p2_.conference_id AS conference_id_13 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?, ?) ORDER BY c0_.id ASC' with params [63, 64]:\n\nSQLSTATE[42S22]: Column not found: 1054 Unknown column 'c0_.start' in 'field list' at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:60)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 42S22): SQLSTATE[42S22]: Column not found: 1054 Unknown column 'c0_.start' in 'field list' at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:123)\n[previous exception] [object] (PDOException(code: 42S22): SQLSTATE[42S22]: Column not found: 1054 Unknown column 'c0_.start' in 'field list' at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:121)"} []
[2020-04-28T17:32:25.764623+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:32:25.770854+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:32:26.639501+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"afeda8"},"request_uri":"http://localhost:8000/_wdt/afeda8","method":"GET"} []
[2020-04-28T17:32:26.675572+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:32:26.677946+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:32:26.678038+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:32:26.678117+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:32:26.679049+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:32:26.684086+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:32:26.685951+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:32:26.686203+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:32:26.686241+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:32:26.691531+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:32:26.693184+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.informations AS informations_5, c0_.room AS room_6, s1_.id AS id_7, s1_.description AS description_8, p2_.id AS id_9, s1_.user_id AS user_id_10, s1_.conference_id AS conference_id_11, p2_.user_id AS user_id_12, p2_.conference_id AS conference_id_13 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[63,64]] []
[2020-04-28T17:32:26.695563+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\InvalidFieldNameException: "An exception occurred while executing 'SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.informations AS informations_5, c0_.room AS room_6, s1_.id AS id_7, s1_.description AS description_8, p2_.id AS id_9, s1_.user_id AS user_id_10, s1_.conference_id AS conference_id_11, p2_.user_id AS user_id_12, p2_.conference_id AS conference_id_13 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?, ?) ORDER BY c0_.id ASC' with params [63, 64]:  SQLSTATE[42S22]: Column not found: 1054 Unknown column 'c0_.start' in 'field list'" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 60 {"exception":"[object] (Doctrine\\DBAL\\Exception\\InvalidFieldNameException(code: 0): An exception occurred while executing 'SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.informations AS informations_5, c0_.room AS room_6, s1_.id AS id_7, s1_.description AS description_8, p2_.id AS id_9, s1_.user_id AS user_id_10, s1_.conference_id AS conference_id_11, p2_.user_id AS user_id_12, p2_.conference_id AS conference_id_13 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?, ?) ORDER BY c0_.id ASC' with params [63, 64]:\n\nSQLSTATE[42S22]: Column not found: 1054 Unknown column 'c0_.start' in 'field list' at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:60)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 42S22): SQLSTATE[42S22]: Column not found: 1054 Unknown column 'c0_.start' in 'field list' at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:123)\n[previous exception] [object] (PDOException(code: 42S22): SQLSTATE[42S22]: Column not found: 1054 Unknown column 'c0_.start' in 'field list' at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:121)"} []
[2020-04-28T17:32:26.767408+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:32:26.774313+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:32:40.837417+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-28T17:32:40.838916+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T17:32:40.843615+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T17:32:40.844130+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T17:32:40.845870+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-28T17:32:40.846653+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-04-28T17:32:41.910099+02:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355', '20200317201021', '20200317201232', '20200318120105', '20200331213036', '20200417151230', '20200427220257', '20200428153118') ORDER BY version DESC LIMIT 1 [] []
[2020-04-28T17:32:41.913934+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-04-28T17:32:41.920769+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T17:32:41.949718+02:00] doctrine.DEBUG: ALTER TABLE admin DROP FOREIGN KEY FK_880E0D7671F7E88B [] []
[2020-04-28T17:32:41.958261+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-04-28T17:32:41.959242+02:00] console.ERROR: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing 'ALTER TABLE admin DROP FOREIGN KEY FK_880E0D7671F7E88B':  SQLSTATE[42000]: Syntax error or access violation: 1091 Can't DROP 'FK_880E0D7671F7E88B'; check that column/key exists" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred while executing 'ALTER TABLE admin DROP FOREIGN KEY FK_880E0D7671F7E88B':\n\nSQLSTATE[42000]: Syntax error or access violation: 1091 Can't DROP 'FK_880E0D7671F7E88B'; check that column/key exists at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 42000): SQLSTATE[42000]: Syntax error or access violation: 1091 Can't DROP 'FK_880E0D7671F7E88B'; check that column/key exists at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:80)\n[previous exception] [object] (PDOException(code: 42000): SQLSTATE[42000]: Syntax error or access violation: 1091 Can't DROP 'FK_880E0D7671F7E88B'; check that column/key exists at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:75)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing 'ALTER TABLE admin DROP FOREIGN KEY FK_880E0D7671F7E88B':\n\nSQLSTATE[42000]: Syntax error or access violation: 1091 Can't DROP 'FK_880E0D7671F7E88B'; check that column/key exists"} []
[2020-04-28T17:32:41.959517+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2020-04-28T17:32:54.840072+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-28T17:32:54.841524+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T17:32:54.846096+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T17:32:54.846526+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T17:32:54.848171+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-28T17:32:54.848884+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-04-28T17:32:55.606638+02:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355', '20200317201021', '20200317201232', '20200318120105', '20200331213036', '20200417151230', '20200427220257', '20200428153118') ORDER BY version DESC LIMIT 1 [] []
[2020-04-28T17:32:55.610251+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-04-28T17:32:55.616503+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T17:32:55.653843+02:00] doctrine.DEBUG: ALTER TABLE admin DROP FOREIGN KEY FK_880E0D7671F7E88B [] []
[2020-04-28T17:32:55.663336+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-04-28T17:32:55.664592+02:00] console.ERROR: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing 'ALTER TABLE admin DROP FOREIGN KEY FK_880E0D7671F7E88B':  SQLSTATE[42000]: Syntax error or access violation: 1091 Can't DROP 'FK_880E0D7671F7E88B'; check that column/key exists" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred while executing 'ALTER TABLE admin DROP FOREIGN KEY FK_880E0D7671F7E88B':\n\nSQLSTATE[42000]: Syntax error or access violation: 1091 Can't DROP 'FK_880E0D7671F7E88B'; check that column/key exists at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 42000): SQLSTATE[42000]: Syntax error or access violation: 1091 Can't DROP 'FK_880E0D7671F7E88B'; check that column/key exists at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:80)\n[previous exception] [object] (PDOException(code: 42000): SQLSTATE[42000]: Syntax error or access violation: 1091 Can't DROP 'FK_880E0D7671F7E88B'; check that column/key exists at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:75)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing 'ALTER TABLE admin DROP FOREIGN KEY FK_880E0D7671F7E88B':\n\nSQLSTATE[42000]: Syntax error or access violation: 1091 Can't DROP 'FK_880E0D7671F7E88B'; check that column/key exists"} []
[2020-04-28T17:32:55.665123+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2020-04-28T17:33:42.043169+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:33:42.048548+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:33:42.913701+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3d7fb6"},"request_uri":"http://localhost:8000/_wdt/3d7fb6","method":"GET"} []
[2020-04-28T17:33:42.951886+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:33:42.952891+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:33:42.952968+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:33:42.953037+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:33:42.953760+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:33:42.959401+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:33:42.963232+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:33:42.963687+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:33:42.963779+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:33:42.974586+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:33:42.976592+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:33:43.014791+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:33:43.020959+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:40:57.310551+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:40:57.316802+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:40:58.378398+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f299b4"},"request_uri":"http://localhost:8000/_wdt/f299b4","method":"GET"} []
[2020-04-28T17:40:58.418399+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:40:58.419508+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:40:58.419568+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:40:58.419617+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:40:58.421070+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:40:58.430867+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:40:58.435059+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:40:58.435497+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:40:58.435582+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:40:58.445108+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:40:58.446262+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:40:58.482730+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:40:58.491313+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:42:14.924460+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:42:14.929904+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:42:15.863245+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8100c1"},"request_uri":"http://localhost:8000/_wdt/8100c1","method":"GET"} []
[2020-04-28T17:42:15.888336+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:42:15.889138+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:42:15.889196+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:42:15.889241+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:42:15.889773+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:42:15.893235+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:42:15.895799+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:42:15.896100+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:42:15.896148+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:42:15.902614+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:42:15.903797+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:42:15.937045+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:42:15.943534+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:49:24.655967+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:49:24.661860+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:49:25.584128+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e5fa8e"},"request_uri":"http://localhost:8000/_wdt/e5fa8e","method":"GET"} []
[2020-04-28T17:49:25.609543+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:49:25.615898+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:49:25.643782+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:49:25.644959+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:49:25.645041+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:49:25.645120+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:49:25.646178+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:49:25.650918+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:49:25.655228+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:49:25.655634+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:49:25.655713+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:49:25.672612+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:49:25.673938+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:49:52.471023+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:49:52.479833+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:49:53.444957+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e230cf"},"request_uri":"http://localhost:8000/_wdt/e230cf","method":"GET"} []
[2020-04-28T17:49:53.473263+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:49:53.474546+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:49:53.474640+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:49:53.474733+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:49:53.475450+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:49:53.480214+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:49:53.483188+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:49:53.483576+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:49:53.483653+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:49:53.494795+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:49:53.496231+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:49:53.529458+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:49:53.537651+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:51:17.988448+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:51:17.994781+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:51:18.850345+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"84f595"},"request_uri":"http://localhost:8000/_wdt/84f595","method":"GET"} []
[2020-04-28T17:51:18.902150+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:51:18.903121+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:51:18.903193+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:51:18.903256+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:51:18.904012+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:51:18.928863+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:51:18.931683+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:51:18.932084+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:51:18.932167+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:51:18.945735+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:51:18.947309+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:51:18.990616+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:51:18.996694+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:51:46.830319+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:51:46.837055+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:51:47.957296+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5cc84d"},"request_uri":"http://localhost:8000/_wdt/5cc84d","method":"GET"} []
[2020-04-28T17:51:48.014671+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:51:48.015680+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:51:48.015748+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:51:48.015809+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:51:48.016700+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:51:48.024970+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:51:48.029360+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:51:48.029731+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:51:48.029792+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:51:48.040683+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:51:48.041884+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:51:48.071703+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:51:48.077429+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:52:26.753597+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:52:26.767293+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:52:27.772903+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e67ac7"},"request_uri":"http://localhost:8000/_wdt/e67ac7","method":"GET"} []
[2020-04-28T17:52:27.803761+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:52:27.804932+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:52:27.805024+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:52:27.805093+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:52:27.805963+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:52:27.811646+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:52:27.815667+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:52:27.815941+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:52:27.815984+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:52:27.821814+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:52:27.822807+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:52:27.862233+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:52:27.870089+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:52:44.327155+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:52:44.334487+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:52:45.353529+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"be07b8"},"request_uri":"http://localhost:8000/_wdt/be07b8","method":"GET"} []
[2020-04-28T17:52:45.469969+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:52:45.474430+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:52:46.361087+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:52:46.362583+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:52:46.362723+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:52:46.362846+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:52:46.364040+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:52:46.368723+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:52:46.370696+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:52:46.370947+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:52:46.370987+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:52:46.378073+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:52:46.379574+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:53:36.744582+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:53:36.751860+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:53:37.696718+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4182b4"},"request_uri":"http://localhost:8000/_wdt/4182b4","method":"GET"} []
[2020-04-28T17:53:37.721621+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:53:37.727737+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:53:37.749370+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:53:37.750132+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:53:37.750194+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:53:37.750241+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:53:37.750984+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:53:37.756005+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:53:37.758296+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:53:37.758625+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:53:37.758700+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:53:37.772113+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:53:37.773488+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:54:04.690197+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:54:04.696490+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:54:05.556767+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ea1e7a"},"request_uri":"http://localhost:8000/_wdt/ea1e7a","method":"GET"} []
[2020-04-28T17:54:05.590189+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:54:05.591117+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:54:05.591181+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:54:05.591229+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:54:05.591949+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:54:05.598456+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:54:05.601496+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:54:05.601897+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:54:05.601968+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:54:05.615243+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:54:05.616851+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:54:05.794499+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:54:05.800739+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:54:29.575064+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:54:29.580496+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:54:30.423363+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f19674"},"request_uri":"http://localhost:8000/_wdt/f19674","method":"GET"} []
[2020-04-28T17:54:30.450747+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:54:30.451801+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:54:30.451875+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:54:30.451948+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:54:30.452830+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:54:30.457790+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:54:30.460688+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:54:30.461052+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:54:30.461117+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:54:30.471439+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:54:30.474199+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:54:30.511153+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:54:30.518833+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:54:47.605661+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:54:47.614005+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:54:48.520286+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e93bcb"},"request_uri":"http://localhost:8000/_wdt/e93bcb","method":"GET"} []
[2020-04-28T17:54:48.543640+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:54:48.544780+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:54:48.544862+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:54:48.544934+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:54:48.545777+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:54:48.551555+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:54:48.553365+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:54:48.553609+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:54:48.553651+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:54:48.561795+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:54:48.563025+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:54:48.605394+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:54:48.613057+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:55:08.129905+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:55:08.135029+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:55:09.068789+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6a30e6"},"request_uri":"http://localhost:8000/_wdt/6a30e6","method":"GET"} []
[2020-04-28T17:55:09.103920+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:55:09.108543+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:55:09.134256+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:55:09.135330+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:55:09.135414+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:55:09.135484+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:55:09.136369+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:55:09.142562+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:55:09.146931+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:55:09.147428+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:55:09.147514+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:55:09.159783+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:55:09.161705+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:55:29.566032+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:55:29.573039+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:55:30.529293+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bcee06"},"request_uri":"http://localhost:8000/_wdt/bcee06","method":"GET"} []
[2020-04-28T17:55:31.379211+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:55:31.384679+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:55:32.398477+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:55:32.399895+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:55:32.400004+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:55:32.400255+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:55:32.401300+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:55:32.406304+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:55:32.408620+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:55:32.409010+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:55:32.409094+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:55:32.421572+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:55:32.422781+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:55:51.906079+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:55:51.913560+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:55:52.821472+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4b2f2e"},"request_uri":"http://localhost:8000/_wdt/4b2f2e","method":"GET"} []
[2020-04-28T17:55:52.855546+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:55:52.858041+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:55:52.858108+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:55:52.858157+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:55:52.858747+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:55:52.865731+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:55:52.869146+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:55:52.869518+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:55:52.869582+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:55:52.879279+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:55:52.883109+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:55:52.923361+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:55:52.929653+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:56:12.528900+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:56:12.536439+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:56:13.505372+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"15343b"},"request_uri":"http://localhost:8000/_wdt/15343b","method":"GET"} []
[2020-04-28T17:56:13.529721+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:56:13.530768+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:56:13.530831+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:56:13.530878+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:56:13.531475+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:56:13.535022+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:56:13.537934+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:56:13.538273+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:56:13.538335+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:56:13.547131+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:56:13.548315+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:56:13.589038+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:56:13.595509+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:56:33.236633+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:56:33.241732+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:56:34.213677+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"021a16"},"request_uri":"http://localhost:8000/_wdt/021a16","method":"GET"} []
[2020-04-28T17:56:34.319180+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:56:34.323068+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:56:34.343058+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:56:34.344661+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:56:34.344756+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:56:34.344827+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:56:34.345643+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:56:34.350442+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:56:34.353135+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:56:34.353414+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:56:34.353458+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:56:34.361740+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:56:34.363344+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:57:25.408653+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:57:25.415866+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:57:26.369417+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"24aaf8"},"request_uri":"http://localhost:8000/_wdt/24aaf8","method":"GET"} []
[2020-04-28T17:57:26.434180+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:57:26.434916+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:57:26.434970+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:57:26.435016+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:57:26.435485+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:117)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:57:26.435781+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:57:26.469863+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:57:26.478980+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:58:01.463972+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:58:01.473476+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:58:02.331505+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3e90ba"},"request_uri":"http://localhost:8000/_wdt/3e90ba","method":"GET"} []
[2020-04-28T17:58:02.384822+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:58:02.393324+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:58:02.426899+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:58:02.428293+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:58:02.428399+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:02.428502+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:02.429207+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:117)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:02.429736+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:03.004202+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:58:03.008954+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:58:04.136925+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-28T17:58:04.152444+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:58:04.330936+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-28T17:58:04.409276+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T17:58:04.415201+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:58:04.415272+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:04.415324+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:04.415972+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:04.416845+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:58:04.419294+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:04.419538+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:04.419577+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:04.435710+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:58:04.452357+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T17:58:04.453543+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T17:58:04.453970+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T17:58:04.454788+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:58:04.480866+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:58:04.486876+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T17:58:04.508109+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:58:04.509631+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:58:04.509714+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:04.509783+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:04.510446+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:04.514388+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:58:04.516591+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:04.516848+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:04.516893+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:04.523753+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:58:04.524569+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:58:05.186525+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T17:58:05.187679+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T17:58:05.187769+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:05.187866+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:05.188872+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:05.193562+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T17:58:05.195305+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:05.195665+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:05.195724+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T17:58:05.202778+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T17:58:05.203576+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T17:58:05.229698+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T17:58:05.234659+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:01:46.307106+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:01:46.312629+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:01:47.207463+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d4c215"},"request_uri":"http://localhost:8000/_wdt/d4c215","method":"GET"} []
[2020-04-28T18:01:47.327274+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:01:47.329491+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:01:47.329585+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:01:47.329671+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:01:47.331369+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:01:47.345201+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:01:47.349330+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:01:47.355040+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:01:47.355137+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:01:47.368383+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:01:47.377607+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:01:47.418967+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:01:47.425833+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:02:00.252203+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:02:00.258542+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:02:01.110017+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"00d1db"},"request_uri":"http://localhost:8000/_wdt/00d1db","method":"GET"} []
[2020-04-28T18:02:01.162646+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:02:01.163537+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:02:01.163620+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:02:01.163683+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:02:01.165666+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:02:01.169902+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:02:01.172097+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:02:01.172375+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:02:01.172421+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:02:01.180608+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:02:01.181870+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:02:01.211868+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:02:01.217576+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:02:13.116501+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:02:13.123645+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:02:13.981686+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0b9e9f"},"request_uri":"http://localhost:8000/_wdt/0b9e9f","method":"GET"} []
[2020-04-28T18:02:14.015937+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:02:14.017007+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:02:14.017095+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:02:14.017167+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:02:14.017967+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:02:14.021566+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:02:14.023898+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:02:14.024200+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:02:14.024243+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:02:14.033109+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:02:14.034334+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:02:14.061261+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:02:14.068921+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:03:02.455662+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:03:02.459768+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:03:03.295406+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6e9181"},"request_uri":"http://localhost:8000/_wdt/6e9181","method":"GET"} []
[2020-04-28T18:03:03.320848+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:03:03.321937+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:03:03.322022+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:03:03.322097+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:03:03.322924+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:03:03.327087+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:03:03.328998+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:03:03.329247+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:03:03.329287+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:03:03.334882+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:03:03.335708+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:03:03.365176+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:03:03.371277+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:04:43.958576+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-28T18:04:43.961023+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T18:04:43.967741+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T18:04:43.968197+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T18:04:43.970204+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-28T18:04:43.971615+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-28T18:04:43.972144+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'admin' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T18:04:43.972847+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'admin' */ WHERE k.table_name = 'admin' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T18:04:43.974112+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'admin' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T18:04:43.974731+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'admin' [] []
[2020-04-28T18:04:43.975122+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'conference' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T18:04:43.975830+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'conference' */ WHERE k.table_name = 'conference' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T18:04:43.976204+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'conference' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T18:04:43.976594+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'conference' [] []
[2020-04-28T18:04:43.976983+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'medecin' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T18:04:43.977642+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'medecin' */ WHERE k.table_name = 'medecin' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T18:04:43.978165+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'medecin' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T18:04:43.978525+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'medecin' [] []
[2020-04-28T18:04:43.978868+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T18:04:43.979441+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T18:04:43.979868+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T18:04:43.980167+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-28T18:04:43.980440+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'participant' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T18:04:43.981032+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'participant' */ WHERE k.table_name = 'participant' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T18:04:43.982266+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'participant' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T18:04:43.982795+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'participant' [] []
[2020-04-28T18:04:43.983179+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'speaker' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T18:04:43.983772+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'speaker' */ WHERE k.table_name = 'speaker' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T18:04:43.984215+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'speaker' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T18:04:43.984560+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'speaker' [] []
[2020-04-28T18:04:43.984793+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T18:04:43.985384+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T18:04:43.985864+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T18:04:43.986275+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-04-28T18:04:45.946669+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-28T18:04:45.948096+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T18:04:45.952908+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T18:04:45.953334+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T18:04:45.954997+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-28T18:04:45.955760+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-04-28T18:04:47.043723+02:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355', '20200317201021', '20200317201232', '20200318120105', '20200331213036', '20200417151230', '20200427220257', '20200428153118', '20200428160443') ORDER BY version DESC LIMIT 1 [] []
[2020-04-28T18:04:47.049752+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-04-28T18:04:47.056456+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:04:47.089742+02:00] doctrine.DEBUG: ALTER TABLE admin DROP FOREIGN KEY FK_880E0D7671F7E88B [] []
[2020-04-28T18:04:47.112323+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-04-28T18:04:47.113610+02:00] console.ERROR: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing 'ALTER TABLE admin DROP FOREIGN KEY FK_880E0D7671F7E88B':  SQLSTATE[42000]: Syntax error or access violation: 1091 Can't DROP 'FK_880E0D7671F7E88B'; check that column/key exists" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred while executing 'ALTER TABLE admin DROP FOREIGN KEY FK_880E0D7671F7E88B':\n\nSQLSTATE[42000]: Syntax error or access violation: 1091 Can't DROP 'FK_880E0D7671F7E88B'; check that column/key exists at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:106)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 42000): SQLSTATE[42000]: Syntax error or access violation: 1091 Can't DROP 'FK_880E0D7671F7E88B'; check that column/key exists at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:80)\n[previous exception] [object] (PDOException(code: 42000): SQLSTATE[42000]: Syntax error or access violation: 1091 Can't DROP 'FK_880E0D7671F7E88B'; check that column/key exists at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:75)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing 'ALTER TABLE admin DROP FOREIGN KEY FK_880E0D7671F7E88B':\n\nSQLSTATE[42000]: Syntax error or access violation: 1091 Can't DROP 'FK_880E0D7671F7E88B'; check that column/key exists"} []
[2020-04-28T18:04:47.113998+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2020-04-28T18:05:20.158701+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-28T18:05:20.160131+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-28T18:05:20.164644+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-28T18:05:20.165092+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-28T18:05:20.166749+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-28T18:05:20.167461+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-04-28T18:05:20.904581+02:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355', '20200317201021', '20200317201232', '20200318120105', '20200331213036', '20200417151230', '20200427220257', '20200428160443') ORDER BY version DESC LIMIT 1 [] []
[2020-04-28T18:05:20.908369+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-04-28T18:05:20.914774+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:05:20.950616+02:00] doctrine.DEBUG: ALTER TABLE conference ADD start DATETIME NOT NULL, ADD end DATETIME DEFAULT NULL, DROP hour_start, DROP hour_end, DROP event_id, DROP informations [] []
[2020-04-28T18:05:21.072987+02:00] doctrine.DEBUG: INSERT INTO migration_versions (version, executed_at) VALUES (?, ?) ["20200428160443","2020-04-28 16:05:21"] []
[2020-04-28T18:05:21.082635+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:06:17.072291+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:06:17.078434+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:06:17.974884+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"22c12e"},"request_uri":"http://localhost:8000/_wdt/22c12e","method":"GET"} []
[2020-04-28T18:06:18.371891+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:06:18.372661+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:06:18.372713+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:06:18.372760+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:06:18.373379+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:06:18.376579+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:06:18.378653+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:06:18.378902+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:06:18.378940+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:06:18.404755+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:06:18.405745+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:06:18.428910+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:06:18.435043+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:08:33.230658+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:08:33.240847+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:08:34.084488+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c1505f"},"request_uri":"http://localhost:8000/_wdt/c1505f","method":"GET"} []
[2020-04-28T18:08:34.109743+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:08:34.110518+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:08:34.110573+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:08:34.110617+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:08:34.112604+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:08:34.118260+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:08:34.122439+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:08:34.122829+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:08:34.122897+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:08:34.137328+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:08:34.139136+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:08:34.175218+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:08:34.180987+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:11:32.378667+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:11:32.386010+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:11:33.502539+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8fe75c"},"request_uri":"http://localhost:8000/_wdt/8fe75c","method":"GET"} []
[2020-04-28T18:11:33.553501+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:11:33.554618+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:11:33.554691+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:11:33.554762+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:11:33.557224+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:11:33.562943+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:11:33.566743+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:11:33.567212+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:11:33.567308+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:11:33.578591+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:11:33.580537+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:11:33.617475+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:11:33.623636+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:16:03.363083+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:16:03.372593+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:16:04.377910+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0e71b7"},"request_uri":"http://localhost:8000/_wdt/0e71b7","method":"GET"} []
[2020-04-28T18:16:04.413179+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:16:04.414309+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:16:04.414403+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:04.414485+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:04.415535+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:04.421733+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:16:04.424752+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:04.425125+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:04.425189+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:04.459808+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:16:04.461313+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:16:04.499724+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:16:04.506985+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:16:33.538634+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:16:33.543220+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:16:34.504284+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e07a20"},"request_uri":"http://localhost:8000/_wdt/e07a20","method":"GET"} []
[2020-04-28T18:16:34.530336+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:16:34.531089+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:16:34.531142+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:34.531197+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:34.532483+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:34.539178+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:16:34.541862+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:34.542160+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:34.542203+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:34.549985+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:16:34.551590+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:16:34.586138+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:16:34.594488+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:16:36.729121+02:00] request.INFO: Matched route "api_conferences_post_collection". {"route":"api_conferences_post_collection","route_parameters":{"_route":"api_conferences_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/conferences","method":"POST"} []
[2020-04-28T18:16:36.729964+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:16:36.730037+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:36.730107+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:36.730953+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:36.737878+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:16:36.740648+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:36.741113+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:36.741176+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:46.794972+02:00] request.INFO: Matched route "api_conferences_post_collection". {"route":"api_conferences_post_collection","route_parameters":{"_route":"api_conferences_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/conferences","method":"POST"} []
[2020-04-28T18:16:46.795898+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:16:46.795963+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:46.796027+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:46.796904+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:46.803489+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:16:46.806464+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:46.806838+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:46.806889+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:46.839824+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:16:46.841173+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, start, end, room) VALUES (?, ?, ?, ?, ?) {"1":"Salut","2":"","3":"2020-04-27T22:00:00+00:00","4":"2020-04-27T22:00:00+00:00","5":null} []
[2020-04-28T18:16:46.841619+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:16:46.849002+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.start AS start_4, t0.end AS end_5, t0.room AS room_6 FROM conference t0 WHERE t0.id = ? [65] []
[2020-04-28T18:16:46.869944+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [65] []
[2020-04-28T18:16:46.870560+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [65] []
[2020-04-28T18:16:48.552250+02:00] request.INFO: Matched route "api_conferences_post_collection". {"route":"api_conferences_post_collection","route_parameters":{"_route":"api_conferences_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/conferences","method":"POST"} []
[2020-04-28T18:16:48.553115+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:16:48.553196+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:48.553273+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:48.554102+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:48.558047+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:16:48.560193+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:48.560513+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:48.560568+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:48.565880+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:16:48.566193+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, start, end, room) VALUES (?, ?, ?, ?, ?) {"1":"Salut","2":"","3":"2020-04-27T22:00:00+00:00","4":"2020-04-27T22:00:00+00:00","5":null} []
[2020-04-28T18:16:48.566499+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:16:48.606931+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.start AS start_4, t0.end AS end_5, t0.room AS room_6 FROM conference t0 WHERE t0.id = ? [66] []
[2020-04-28T18:16:48.608723+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [66] []
[2020-04-28T18:16:48.609147+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [66] []
[2020-04-28T18:16:51.598085+02:00] request.INFO: Matched route "api_conferences_post_collection". {"route":"api_conferences_post_collection","route_parameters":{"_route":"api_conferences_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/conferences","method":"POST"} []
[2020-04-28T18:16:51.599745+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:16:51.599909+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:51.600124+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:51.601855+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:51.608240+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:16:51.610492+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:51.610846+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:51.610894+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:51.618463+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:16:51.618993+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, start, end, room) VALUES (?, ?, ?, ?, ?) {"1":"Salut","2":"","3":"2020-04-27T22:00:00+00:00","4":"2020-04-27T22:00:00+00:00","5":null} []
[2020-04-28T18:16:51.619654+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:16:51.627902+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.start AS start_4, t0.end AS end_5, t0.room AS room_6 FROM conference t0 WHERE t0.id = ? [67] []
[2020-04-28T18:16:51.629849+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [67] []
[2020-04-28T18:16:51.630394+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [67] []
[2020-04-28T18:16:56.042844+02:00] request.INFO: Matched route "api_conferences_post_collection". {"route":"api_conferences_post_collection","route_parameters":{"_route":"api_conferences_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/conferences","method":"POST"} []
[2020-04-28T18:16:56.044201+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:16:56.044339+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:56.044467+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:56.045699+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:56.054412+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:16:56.057494+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:56.057873+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:56.057935+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:16:56.063363+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:16:56.063704+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, start, end, room) VALUES (?, ?, ?, ?, ?) {"1":"Salut","2":"","3":"2020-04-27T22:00:00+00:00","4":"2020-04-27T22:00:00+00:00","5":null} []
[2020-04-28T18:16:56.064040+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:16:56.073082+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.start AS start_4, t0.end AS end_5, t0.room AS room_6 FROM conference t0 WHERE t0.id = ? [68] []
[2020-04-28T18:16:56.075742+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [68] []
[2020-04-28T18:16:56.076386+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [68] []
[2020-04-28T18:17:49.156589+02:00] request.INFO: Matched route "api_conferences_post_collection". {"route":"api_conferences_post_collection","route_parameters":{"_route":"api_conferences_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/conferences","method":"POST"} []
[2020-04-28T18:17:49.157172+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:17:49.157217+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:17:49.157262+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:17:49.157878+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:17:49.158733+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:17:49.160269+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:17:49.160533+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:17:49.160571+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:17:49.167419+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:17:49.167723+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, start, end, room) VALUES (?, ?, ?, ?, ?) {"1":"Salut","2":"","3":"2020-04-27T22:00:00+00:00","4":"2020-04-27T22:00:00+00:00","5":null} []
[2020-04-28T18:17:49.168212+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:17:49.183750+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.start AS start_4, t0.end AS end_5, t0.room AS room_6 FROM conference t0 WHERE t0.id = ? [69] []
[2020-04-28T18:17:49.196898+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [69] []
[2020-04-28T18:17:49.197647+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [69] []
[2020-04-28T18:17:50.957112+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:17:50.965644+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:17:51.969587+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:17:51.970865+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:17:51.970934+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:17:51.971005+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:17:51.971990+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:17:51.977424+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:17:51.980278+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:17:51.980722+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:17:51.980785+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:17:52.020151+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:17:52.021553+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[69]] []
[2020-04-28T18:17:52.032743+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:17:52.073026+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f1afaf"},"request_uri":"http://localhost:8000/_wdt/f1afaf","method":"GET"} []
[2020-04-28T18:17:52.103111+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:17:52.109654+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:17:59.122754+02:00] request.INFO: Matched route "api_conferences_post_collection". {"route":"api_conferences_post_collection","route_parameters":{"_route":"api_conferences_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/conferences","method":"POST"} []
[2020-04-28T18:17:59.126989+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:17:59.127138+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:17:59.127264+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:17:59.128842+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:17:59.133272+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:17:59.138066+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:17:59.138629+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:17:59.138716+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:17:59.150149+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:17:59.150547+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, start, end, room) VALUES (?, ?, ?, ?, ?) {"1":"aaa","2":"","3":"2020-04-27T22:00:00+00:00","4":"2020-04-27T22:00:00+00:00","5":null} []
[2020-04-28T18:17:59.151087+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:17:59.191251+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.start AS start_4, t0.end AS end_5, t0.room AS room_6 FROM conference t0 WHERE t0.id = ? [70] []
[2020-04-28T18:17:59.193459+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [70] []
[2020-04-28T18:17:59.194267+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [70] []
[2020-04-28T18:19:02.899292+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:19:02.905356+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:19:03.875454+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"70c0c3"},"request_uri":"http://localhost:8000/_wdt/70c0c3","method":"GET"} []
[2020-04-28T18:19:03.905748+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:19:03.906832+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:19:03.906909+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:19:03.906968+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:19:03.907984+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:19:03.911967+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:19:03.914826+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:19:03.915205+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:19:03.915275+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:19:03.962466+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:19:03.964279+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[69,70]] []
[2020-04-28T18:19:03.980647+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:19:04.027769+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:19:04.035875+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:20:36.571222+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:20:36.579215+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:20:37.544757+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c617eb"},"request_uri":"http://localhost:8000/_wdt/c617eb","method":"GET"} []
[2020-04-28T18:20:37.580303+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:20:37.581538+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:20:37.581631+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:20:37.581723+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:20:37.582729+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:20:37.589083+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:20:37.593813+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:20:37.594227+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:20:37.594308+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:20:37.605591+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:20:37.607457+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[69,70]] []
[2020-04-28T18:20:37.610659+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:20:37.642073+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:20:37.649903+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:20:40.542742+02:00] request.INFO: Matched route "api_conferences_post_collection". {"route":"api_conferences_post_collection","route_parameters":{"_route":"api_conferences_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/conferences","method":"POST"} []
[2020-04-28T18:20:40.543630+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:20:40.543708+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:20:40.543767+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:20:40.544699+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:20:40.549003+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:20:40.551670+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:20:40.551957+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:20:40.551997+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:20:40.569046+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:20:40.569439+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, start, end, room) VALUES (?, ?, ?, ?, ?) {"1":"aaa","2":"","3":"2020-04-27T22:00:00+00:00","4":"2020-04-27T22:00:00+00:00","5":null} []
[2020-04-28T18:20:40.569835+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:20:40.580293+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.start AS start_4, t0.end AS end_5, t0.room AS room_6 FROM conference t0 WHERE t0.id = ? [71] []
[2020-04-28T18:20:40.587934+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-28T18:20:40.588478+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [71] []
[2020-04-28T18:20:56.704582+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:20:56.716525+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:20:57.622933+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e3fc95"},"request_uri":"http://localhost:8000/_wdt/e3fc95","method":"GET"} []
[2020-04-28T18:20:57.660009+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:20:57.663698+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:20:57.663822+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:20:57.663949+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:20:57.665221+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:20:57.671345+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:20:57.674861+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:20:57.675257+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:20:57.675336+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:20:57.686749+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:20:57.688503+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[69,70,71]] []
[2020-04-28T18:20:57.693891+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:20:57.737498+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:20:57.744233+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:21:28.709645+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:21:28.718342+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:21:29.816869+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"44e169"},"request_uri":"http://localhost:8000/_wdt/44e169","method":"GET"} []
[2020-04-28T18:21:29.860663+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:21:29.861844+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:21:29.861933+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:21:29.862011+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:21:29.862883+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:21:29.867749+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:21:29.871466+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:21:29.871902+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:21:29.872002+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:21:29.884675+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:21:29.887338+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[69,70,71]] []
[2020-04-28T18:21:29.890364+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:21:29.924154+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:21:29.932307+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:21:47.020643+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:21:47.024983+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:21:47.997893+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:21:47.998986+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:21:47.999067+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:21:47.999132+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:21:47.999894+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:21:48.004598+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:21:48.007148+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:21:48.007436+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:21:48.007503+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:21:48.018959+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:21:48.020032+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[69,70,71]] []
[2020-04-28T18:21:48.023776+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:21:48.058427+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"571564"},"request_uri":"http://localhost:8000/_wdt/571564","method":"GET"} []
[2020-04-28T18:21:57.741028+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:21:57.745458+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:22:26.031392+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:22:26.046971+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:22:27.050940+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0a6156"},"request_uri":"http://localhost:8000/_wdt/0a6156","method":"GET"} []
[2020-04-28T18:22:27.080616+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:22:27.081667+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:22:27.081729+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:27.081778+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:27.082437+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:27.086130+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:22:27.088509+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:27.088762+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:27.088808+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:27.095049+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:22:27.096471+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[69,70,71]] []
[2020-04-28T18:22:27.099769+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:22:27.129297+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:22:27.134762+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:22:36.865745+02:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"69"},"request_uri":"http://localhost:8000/api/conferences/69","method":"DELETE"} []
[2020-04-28T18:22:36.866383+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:22:36.866427+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:36.866470+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:36.866986+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:36.870022+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:22:36.871681+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:36.871976+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:36.872016+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:36.889024+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id = ? [69] []
[2020-04-28T18:22:36.891033+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:22:36.891216+02:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [69] []
[2020-04-28T18:22:36.891509+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:22:37.488188+02:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"70"},"request_uri":"http://localhost:8000/api/conferences/70","method":"DELETE"} []
[2020-04-28T18:22:37.489324+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:22:37.489435+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:37.489542+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:37.490521+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:37.497838+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:22:37.501402+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:37.501746+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:37.501806+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:37.505845+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id = ? [70] []
[2020-04-28T18:22:37.508764+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:22:37.509035+02:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [70] []
[2020-04-28T18:22:37.509304+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:22:38.231625+02:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"71"},"request_uri":"http://localhost:8000/api/conferences/71","method":"DELETE"} []
[2020-04-28T18:22:38.232397+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:22:38.232470+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:38.232536+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:38.233283+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:38.236740+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:22:38.239084+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:38.239407+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:38.239460+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:22:38.242665+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id = ? [71] []
[2020-04-28T18:22:38.244843+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:22:38.245076+02:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [71] []
[2020-04-28T18:22:38.245392+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:29:59.293280+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:29:59.298391+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:30:00.175416+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"61b076"},"request_uri":"http://localhost:8000/_wdt/61b076","method":"GET"} []
[2020-04-28T18:30:00.200929+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:30:00.208313+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:30:00.234421+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:30:00.235849+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:30:00.235951+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:30:00.236066+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:30:00.237753+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:30:00.244629+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:30:00.249087+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:30:00.249507+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:30:00.249578+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:30:00.260690+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:30:00.262248+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:30:20.662347+02:00] request.INFO: Matched route "api_conferences_post_collection". {"route":"api_conferences_post_collection","route_parameters":{"_route":"api_conferences_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/conferences","method":"POST"} []
[2020-04-28T18:30:20.663885+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:30:20.663985+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:30:20.664089+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:30:20.665092+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:30:20.673157+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:30:20.676699+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:30:20.677104+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:30:20.677164+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:30:20.686896+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:30:20.687301+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, start, end, room) VALUES (?, ?, ?, ?, ?) {"1":"aaa","2":"","3":"2020-04-28T00:01:00+00:00","4":"2020-04-28T00:01:00+00:00","5":null} []
[2020-04-28T18:30:20.687755+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:30:20.699758+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.start AS start_4, t0.end AS end_5, t0.room AS room_6 FROM conference t0 WHERE t0.id = ? [72] []
[2020-04-28T18:30:20.716699+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-28T18:30:20.720096+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [72] []
[2020-04-28T18:30:39.476890+02:00] request.INFO: Matched route "api_conferences_post_collection". {"route":"api_conferences_post_collection","route_parameters":{"_route":"api_conferences_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/conferences","method":"POST"} []
[2020-04-28T18:30:39.477578+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:30:39.477643+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:30:39.477691+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:30:39.478300+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:30:39.483171+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:30:39.486667+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:30:39.487129+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:30:39.487200+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:30:39.494157+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:30:39.494582+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, start, end, room) VALUES (?, ?, ?, ?, ?) {"1":"aaa","2":"","3":"2020-04-28T04:01:00+00:00","4":"2020-04-28T04:01:00+00:00","5":null} []
[2020-04-28T18:30:39.495068+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:30:39.511706+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.start AS start_4, t0.end AS end_5, t0.room AS room_6 FROM conference t0 WHERE t0.id = ? [73] []
[2020-04-28T18:30:39.514891+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-28T18:30:39.515871+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [73] []
[2020-04-28T18:31:47.567618+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:31:47.582996+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:31:48.703768+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4b7ba4"},"request_uri":"http://localhost:8000/_wdt/4b7ba4","method":"GET"} []
[2020-04-28T18:31:48.785676+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:31:48.786810+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:31:48.786900+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:31:48.786977+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:31:48.787816+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:31:48.792781+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:31:48.803315+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:31:48.804004+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:31:48.804205+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:31:48.817627+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:31:48.819083+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[72,73]] []
[2020-04-28T18:31:48.822695+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:31:48.859478+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:31:48.870540+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:32:01.291655+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:32:01.299872+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:32:02.273107+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a2ed63"},"request_uri":"http://localhost:8000/_wdt/a2ed63","method":"GET"} []
[2020-04-28T18:32:02.324535+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:32:02.325632+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:32:02.325697+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:02.325747+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:02.326347+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:02.334325+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:32:02.338232+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:02.338714+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:02.338792+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:02.346962+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:32:02.348205+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[72,73]] []
[2020-04-28T18:32:02.352067+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:32:02.386278+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:32:02.396531+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:32:07.052970+02:00] request.INFO: Matched route "api_conferences_post_collection". {"route":"api_conferences_post_collection","route_parameters":{"_route":"api_conferences_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/conferences","method":"POST"} []
[2020-04-28T18:32:07.053622+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:32:07.053677+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:07.053723+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:07.054270+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:07.059236+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:32:07.063136+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:07.063547+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:07.063623+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:07.072817+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:32:07.073192+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, start, end, room) VALUES (?, ?, ?, ?, ?) {"1":"aaa","2":"","3":"2020-04-27T23:01:00+00:00","4":"2020-04-27T23:01:00+00:00","5":null} []
[2020-04-28T18:32:07.073643+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:32:07.112003+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.start AS start_4, t0.end AS end_5, t0.room AS room_6 FROM conference t0 WHERE t0.id = ? [74] []
[2020-04-28T18:32:07.122805+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-28T18:32:07.124207+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [74] []
[2020-04-28T18:32:29.799019+02:00] request.INFO: Matched route "api_conferences_post_collection". {"route":"api_conferences_post_collection","route_parameters":{"_route":"api_conferences_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/conferences","method":"POST"} []
[2020-04-28T18:32:29.799994+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:32:29.800107+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:29.800178+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:29.800962+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:29.805044+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:32:29.806900+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:29.807195+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:29.807247+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:29.815132+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:32:29.815483+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, start, end, room) VALUES (?, ?, ?, ?, ?) {"1":"aaa","2":"","3":"2020-04-27T23:01:00+00:00","4":"2020-04-27T23:01:00+00:00","5":null} []
[2020-04-28T18:32:29.815880+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:32:29.855904+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.start AS start_4, t0.end AS end_5, t0.room AS room_6 FROM conference t0 WHERE t0.id = ? [75] []
[2020-04-28T18:32:29.859002+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-28T18:32:29.859563+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [75] []
[2020-04-28T18:32:42.144844+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:32:42.154629+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:32:43.365635+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:32:43.366754+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:32:43.366842+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:43.366914+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:43.367736+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:43.372643+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:32:43.375113+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:43.375519+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:43.375611+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:43.387599+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:32:43.388919+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[72,73,74,75]] []
[2020-04-28T18:32:43.393008+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:32:43.433834+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e299e4"},"request_uri":"http://localhost:8000/_wdt/e299e4","method":"GET"} []
[2020-04-28T18:32:44.670070+02:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"72"},"request_uri":"http://localhost:8000/api/conferences/72","method":"DELETE"} []
[2020-04-28T18:32:44.670580+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:32:44.670627+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:44.670674+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:44.671170+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:44.673928+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:32:44.675581+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:44.675964+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:44.676067+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:44.681795+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id = ? [72] []
[2020-04-28T18:32:44.684320+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:32:44.684594+02:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [72] []
[2020-04-28T18:32:44.685015+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:32:44.985386+02:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"73"},"request_uri":"http://localhost:8000/api/conferences/73","method":"DELETE"} []
[2020-04-28T18:32:44.986073+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:32:44.986124+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:44.986174+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:44.986718+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:44.989842+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:32:44.991450+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:44.991705+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:44.991744+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:44.997447+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id = ? [73] []
[2020-04-28T18:32:45.000286+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:32:45.000644+02:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [73] []
[2020-04-28T18:32:45.001231+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:32:45.339728+02:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"74"},"request_uri":"http://localhost:8000/api/conferences/74","method":"DELETE"} []
[2020-04-28T18:32:45.340395+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:32:45.340450+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:45.340504+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:45.341078+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:45.346009+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:32:45.348854+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:45.349250+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:45.349320+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:45.352976+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id = ? [74] []
[2020-04-28T18:32:45.354957+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:32:45.355227+02:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [74] []
[2020-04-28T18:32:45.355565+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:32:45.958270+02:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"75"},"request_uri":"http://localhost:8000/api/conferences/75","method":"DELETE"} []
[2020-04-28T18:32:45.959453+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:32:45.959681+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:45.959992+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:45.961654+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:45.968850+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:32:45.971810+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:45.972256+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:45.972350+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:32:45.979168+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id = ? [75] []
[2020-04-28T18:32:45.984831+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:32:45.985301+02:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [75] []
[2020-04-28T18:32:45.986008+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:32:47.385990+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:32:47.391205+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:34:55.761618+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:34:55.768443+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:34:56.446701+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:34:56.450778+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:34:56.469041+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T18:34:56.473322+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:34:56.473479+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:34:56.473621+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:34:56.475077+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:34:56.476913+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:34:56.480347+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:34:56.480660+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:34:56.480712+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:34:56.497734+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:34:56.519138+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T18:34:56.520506+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T18:34:56.521016+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T18:34:56.521909+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:34:56.587196+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:34:56.588472+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:34:56.588590+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:34:56.588717+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:34:56.592416+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:34:56.597756+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:34:56.600936+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:34:56.601279+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:34:56.601336+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:34:56.611518+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:34:56.613140+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:34:57.261218+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:34:57.267470+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:34:57.289085+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:34:57.290854+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:34:57.290949+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:34:57.291034+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:34:57.291893+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:34:57.297143+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:34:57.300270+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:34:57.300686+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:34:57.300770+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:34:57.305841+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:34:57.306977+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:35:00.453820+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-28T18:35:00.459394+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:35:00.459485+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:00.459560+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:00.460621+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:00.462704+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:35:00.465238+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:00.465605+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:00.465659+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:00.469154+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-28T18:35:00.469781+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-28T18:35:00.471218+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-28T18:35:00.471638+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-04-28T18:35:00.476652+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T18:35:00.478262+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T18:35:00.478948+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T18:35:00.479751+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-28T18:35:00.480232+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-28T18:35:00.480902+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-28T18:35:00.481722+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-28T18:35:00.482249+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-28T18:35:00.482578+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-28T18:35:00.483041+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-04-28T18:35:00.483335+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-04-28T18:35:00.483611+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-04-28T18:35:00.484190+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-28T18:35:00.512540+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:35:00.519479+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:35:12.363737+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:35:12.367814+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:35:12.386671+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:35:12.387356+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:35:12.387418+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:12.387472+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:12.388157+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:12.393721+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:35:12.397009+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:12.397515+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:12.397634+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:12.407319+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:35:12.408854+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:35:14.667125+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:35:14.672400+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:35:14.700022+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T18:35:14.704597+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:35:14.704703+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:14.704807+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:14.705811+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:14.707406+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:35:14.711008+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:14.711348+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:14.711417+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:14.715303+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:35:14.718172+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T18:35:14.719158+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T18:35:14.719677+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T18:35:14.720681+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:35:14.771780+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:35:14.773067+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:35:14.773231+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:14.773401+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:14.774537+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:14.778482+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:35:14.780493+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:14.780804+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:14.780866+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:14.785462+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:35:14.786174+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:35:18.874479+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:35:18.882884+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:35:18.906462+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:35:18.907879+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:35:18.907971+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:18.908077+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:18.908961+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:18.914921+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:35:18.918339+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:18.918957+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:18.919050+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:18.930532+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:35:18.932130+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T18:35:39.158344+02:00] request.INFO: Matched route "api_conferences_post_collection". {"route":"api_conferences_post_collection","route_parameters":{"_route":"api_conferences_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/conferences","method":"POST"} []
[2020-04-28T18:35:39.159616+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:35:39.159745+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:39.159855+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:39.160997+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:39.164719+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:35:39.166415+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:39.166683+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:39.166721+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:39.171257+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T18:35:39.173506+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, start, end, room) VALUES (?, ?, ?, ?, ?) {"1":"Conférence exemple 1","2":"Ceci est un exemple de con [...]","3":"2020-04-27T23:00:00+00:00","4":"2020-04-27T23:00:00+00:00","5":null} []
[2020-04-28T18:35:39.174631+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T18:35:39.183897+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.start AS start_4, t0.end AS end_5, t0.room AS room_6 FROM conference t0 WHERE t0.id = ? [76] []
[2020-04-28T18:35:39.185704+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-28T18:35:39.186211+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [76] []
[2020-04-28T18:35:42.449525+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T18:35:42.453347+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:35:42.453415+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:42.453463+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:42.454044+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:42.454882+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:35:42.458719+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:42.459302+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:42.459375+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:42.463826+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:35:42.466384+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T18:35:42.467428+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T18:35:42.467827+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T18:35:42.468647+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:35:42.498946+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T18:35:42.505774+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T18:35:42.528892+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T18:35:42.530275+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T18:35:42.530362+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:42.530448+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:42.531039+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:42.534172+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T18:35:42.535689+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:42.535915+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:42.535953+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T18:35:42.543085+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T18:35:42.544652+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-04-28T18:35:42.547277+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T20:47:24.383133+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T20:47:24.403892+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T20:48:12.877696+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T20:48:12.887390+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T20:48:12.913275+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T20:48:12.946036+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T20:48:12.946103+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:48:12.946155+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:48:12.947373+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:117)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:48:12.948192+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:08.537253+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T20:49:08.541866+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T20:49:09.806238+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-28T20:49:09.820133+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:49:10.065667+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-28T20:49:10.174914+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T20:49:10.182467+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T20:49:10.182556+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:10.182630+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:10.186281+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:10.187974+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:49:10.190360+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:10.190614+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:10.190653+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:10.198885+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:49:10.216733+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T20:49:10.221103+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T20:49:10.221603+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T20:49:10.222519+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:49:10.253926+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T20:49:10.261884+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T20:49:10.299132+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T20:49:10.300384+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T20:49:10.300472+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:10.300550+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:10.301372+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:10.307185+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:49:10.310429+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:10.310779+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:10.310850+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:10.330459+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T20:49:10.331681+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-04-28T20:49:10.337822+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T20:49:11.162993+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T20:49:11.163913+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T20:49:11.163987+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:11.164039+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:11.164624+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:11.169524+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:49:11.172472+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:11.172940+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:11.173045+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:49:11.179935+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T20:49:11.180951+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-04-28T20:49:11.183307+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T20:49:11.214104+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T20:49:11.221525+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T20:55:41.947838+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T20:55:41.952445+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T20:55:41.952510+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:41.952564+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:41.953172+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:41.954086+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:55:41.956276+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:41.956688+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:41.956753+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:41.962710+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:55:41.966726+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T20:55:41.968003+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T20:55:41.968443+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T20:55:41.969208+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:55:42.000199+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-28T20:55:42.008963+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-28T20:55:42.032509+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T20:55:42.033120+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T20:55:42.033165+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:42.033217+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:42.033799+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:42.038217+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:55:42.041309+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:42.041808+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:42.041908+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:42.050603+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T20:55:42.051513+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-04-28T20:55:42.053445+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T20:55:43.115129+02:00] request.INFO: Matched route "api_participants_post_collection". {"route":"api_participants_post_collection","route_parameters":{"_route":"api_participants_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Participant","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/participants","method":"POST"} []
[2020-04-28T20:55:43.117289+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T20:55:43.117489+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:43.117725+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:43.119678+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:43.126805+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:55:43.130759+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:43.131549+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:43.131734+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:43.155802+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-04-28T20:55:43.160238+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5 FROM conference c0_ WHERE c0_.id = ? [76] []
[2020-04-28T20:55:43.163325+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T20:55:43.164143+02:00] doctrine.DEBUG: INSERT INTO participant (user_id, conference_id) VALUES (?, ?) {"1":2,"2":76} []
[2020-04-28T20:55:43.165671+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T20:55:43.175586+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.id = ? [3] []
[2020-04-28T20:55:43.349616+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T20:55:43.353709+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T20:55:43.353831+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:43.353937+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:43.354814+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:43.356285+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:55:43.359025+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:43.359453+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:43.359533+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:43.364565+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:55:43.367230+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T20:55:43.368374+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T20:55:43.368904+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T20:55:43.374025+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:55:43.439623+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T20:55:43.440421+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T20:55:43.440498+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:43.440570+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:43.441128+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:43.443927+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:55:43.445675+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:43.445981+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:43.446035+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:43.450401+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T20:55:43.451250+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-04-28T20:55:43.457536+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-28T20:55:45.831384+02:00] request.INFO: Matched route "api_participants_delete_item". {"route":"api_participants_delete_item","route_parameters":{"_route":"api_participants_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Participant","_api_item_operation_name":"delete","id":"3"},"request_uri":"http://localhost:8000/api/participants/3","method":"DELETE"} []
[2020-04-28T20:55:45.832068+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T20:55:45.832115+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:45.832159+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:45.832751+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:45.836958+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:55:45.839653+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:45.839983+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:45.840040+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:45.843329+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.user_id AS user_id_1, p0_.conference_id AS conference_id_2 FROM participant p0_ WHERE p0_.id = ? [3] []
[2020-04-28T20:55:45.847040+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-28T20:55:45.847278+02:00] doctrine.DEBUG: DELETE FROM participant WHERE id = ? [3] []
[2020-04-28T20:55:45.847676+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-28T20:55:45.914693+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-28T20:55:45.918809+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T20:55:45.918888+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:45.918946+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:45.919652+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:45.920788+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:55:45.922367+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:45.922604+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:45.922643+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:45.926359+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:55:45.929946+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-28T20:55:45.930959+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-28T20:55:45.931527+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-28T20:55:45.932803+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:55:45.983265+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-28T20:55:45.984582+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-28T20:55:45.984689+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:45.984795+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:45.985712+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:45.992180+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-28T20:55:45.995853+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:45.996293+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:45.996428+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-28T20:55:46.003429+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-28T20:55:46.004478+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-04-28T20:55:46.006501+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-29T13:25:06.087734+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-29T13:25:06.132948+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-29T13:25:06.981132+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b934a5"},"request_uri":"http://localhost:8000/_wdt/b934a5","method":"GET"} []
[2020-04-29T13:25:07.124268+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://localhost:8000/")" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://localhost:8000/\") at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-04-29T13:25:07.183293+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-29T13:25:07.187764+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-29T13:27:33.299250+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-29T13:27:33.306151+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-29T13:27:34.204627+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2749cb"},"request_uri":"http://localhost:8000/_wdt/2749cb","method":"GET"} []
[2020-04-29T13:27:34.325935+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-29T13:27:34.336130+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-29T13:27:34.336226+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:34.336318+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:34.349145+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:117)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:34.353167+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:34.388470+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-29T13:27:34.395621+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-29T13:27:38.880197+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-29T13:27:38.884185+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-29T13:27:39.952293+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-29T13:27:39.971520+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-29T13:27:40.138866+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-29T13:27:40.235236+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-29T13:27:40.241576+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-29T13:27:40.256377+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-29T13:27:40.259299+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-29T13:27:40.259395+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:40.259452+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:40.262464+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:40.263556+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-29T13:27:40.269472+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:40.269733+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:40.269783+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:40.311912+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-04-29T13:27:40.327954+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-29T13:27:40.330042+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-29T13:27:40.330514+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-29T13:27:40.332975+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-29T13:27:40.380267+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-29T13:27:40.380957+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-29T13:27:40.381010+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:40.381054+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:40.381690+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:40.384513+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-29T13:27:40.386026+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:40.386614+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:40.386745+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:40.412809+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-29T13:27:40.415754+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-04-29T13:27:40.423120+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-29T13:27:44.919151+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-29T13:27:44.924267+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-29T13:27:44.942808+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-29T13:27:44.943762+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-29T13:27:44.943826+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:44.943873+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:44.944601+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:44.948962+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-29T13:27:44.951934+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:44.952431+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:44.952503+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:44.960413+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-29T13:27:44.962549+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-04-29T13:27:44.965068+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-29T13:27:54.155279+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-29T13:27:54.161396+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-29T13:27:55.193905+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-29T13:27:55.198683+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-29T13:27:55.214440+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-29T13:27:55.217463+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-29T13:27:55.217524+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:55.217569+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:55.218109+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:55.218985+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-29T13:27:55.221097+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:55.221351+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:55.221390+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:55.225275+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-29T13:27:55.225794+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-29T13:27:55.228021+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-29T13:27:55.228412+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-04-29T13:27:55.230956+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-29T13:27:55.231942+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-29T13:27:55.232341+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-29T13:27:55.232844+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-29T13:27:55.233095+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-29T13:27:55.233331+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-29T13:27:55.233719+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-29T13:27:55.233963+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-29T13:27:55.234214+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-29T13:27:55.234665+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-04-29T13:27:55.234922+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-04-29T13:27:55.235159+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-04-29T13:27:55.235754+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-29T13:27:57.142792+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-29T13:27:57.147713+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-29T13:27:57.165612+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-29T13:27:57.166192+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-29T13:27:57.166248+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:57.166292+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:57.166780+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:57.169775+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-29T13:27:57.172855+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:57.173247+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:57.173319+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:27:57.180034+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-29T13:27:57.181037+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-04-29T13:27:57.182508+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-29T13:28:03.188804+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-29T13:28:03.194776+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-29T13:28:04.134336+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"504c9b"},"request_uri":"http://localhost:8000/_wdt/504c9b","method":"GET"} []
[2020-04-29T13:28:04.642081+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-29T13:28:04.648410+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-29T13:28:04.671619+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-29T13:28:04.672719+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-29T13:28:04.672828+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:28:04.672902+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:28:04.673770+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:28:04.678424+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-29T13:28:04.681118+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:28:04.681453+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:28:04.681509+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:28:04.690161+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-29T13:28:04.691624+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-04-29T13:28:04.693625+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-29T13:29:02.585815+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-29T13:29:02.597459+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-29T13:29:03.553160+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"759418"},"request_uri":"http://localhost:8000/_wdt/759418","method":"GET"} []
[2020-04-29T13:29:03.685546+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-29T13:29:03.686397+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-29T13:29:03.686457+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:29:03.686504+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:29:03.687059+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:29:03.690796+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-29T13:29:03.693498+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:29:03.693831+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:29:03.693891+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-29T13:29:03.700777+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-29T13:29:03.702150+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-04-29T13:29:03.703965+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-04-29T13:29:03.726257+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-29T13:29:03.732185+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T17:06:11.015225+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T17:06:11.164530+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T17:06:12.609969+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d73fa5"},"request_uri":"http://localhost:8000/_wdt/d73fa5","method":"GET"} []
[2020-05-05T17:06:13.082565+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T17:06:13.207177+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T17:06:13.207272+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:06:13.207353+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:06:13.220419+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:06:13.224722+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:06:13.537667+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T17:06:13.543735+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T17:12:06.997668+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T17:12:07.010173+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T17:12:07.901743+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8e4f55"},"request_uri":"http://localhost:8000/_wdt/8e4f55","method":"GET"} []
[2020-05-05T17:12:07.925788+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T17:12:07.931174+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T17:12:07.931240+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:12:07.931287+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:12:07.932039+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:12:07.932450+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:12:07.971737+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T17:12:07.980651+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T17:20:24.440979+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T17:20:24.447648+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T17:20:25.629971+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"50d1b0"},"request_uri":"http://localhost:8000/_wdt/50d1b0","method":"GET"} []
[2020-05-05T17:20:25.662388+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T17:20:25.673461+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T17:20:25.673561+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:20:25.673658+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:20:25.675048+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:20:25.675606+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:20:25.730946+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T17:20:25.742152+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T17:35:25.972013+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T17:35:25.977437+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T17:35:27.025521+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e17756"},"request_uri":"http://localhost:8000/_wdt/e17756","method":"GET"} []
[2020-05-05T17:35:27.063785+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T17:35:27.084076+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T17:35:27.084169+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:35:27.084248+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:35:27.089906+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:35:27.090410+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:35:27.134125+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T17:35:27.143129+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T17:37:33.482554+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T17:37:33.488229+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T17:37:34.391703+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T17:37:34.399603+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T17:37:34.399696+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:37:34.399772+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:37:34.400809+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:37:34.401271+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:37:34.433918+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2b6b84"},"request_uri":"http://localhost:8000/_wdt/2b6b84","method":"GET"} []
[2020-05-05T17:37:34.456932+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T17:37:34.463772+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T17:49:05.003107+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T17:49:05.012248+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T17:49:05.956723+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1cda1f"},"request_uri":"http://localhost:8000/_wdt/1cda1f","method":"GET"} []
[2020-05-05T17:49:06.140509+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T17:49:06.147160+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T17:49:06.147251+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:49:06.147331+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:49:06.148602+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:49:06.149160+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T17:49:06.190768+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T17:49:06.199281+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:09:02.004919+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T18:09:02.014790+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:09:03.144100+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"50b8b9"},"request_uri":"http://localhost:8000/_wdt/50b8b9","method":"GET"} []
[2020-05-05T18:09:03.174277+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T18:09:03.181536+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:09:03.181641+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:09:03.181767+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:09:03.190888+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:09:03.191247+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:09:03.224508+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T18:09:03.229090+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:09:43.664820+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T18:09:43.674548+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:09:44.614781+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8e690a"},"request_uri":"http://localhost:8000/_wdt/8e690a","method":"GET"} []
[2020-05-05T18:09:44.654719+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T18:09:44.661408+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:09:44.661503+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:09:44.661579+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:09:44.662511+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:09:44.663008+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:09:44.732029+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T18:09:44.740214+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:11:36.340455+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T18:11:36.349681+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:11:37.516629+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e3d260"},"request_uri":"http://localhost:8000/_wdt/e3d260","method":"GET"} []
[2020-05-05T18:11:37.556524+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T18:11:37.563117+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:11:37.563204+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:11:37.563271+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:11:37.564225+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:11:37.564664+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:11:37.600289+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T18:11:37.611669+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:13:01.540706+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T18:13:01.546204+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:13:01.563272+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T18:13:01.564922+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:13:01.565016+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:01.565077+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:01.565767+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:01.566152+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:03.083095+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T18:13:03.087645+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:13:04.059074+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-05-05T18:13:04.082970+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:13:04.290033+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-05-05T18:13:04.381799+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T18:13:04.384713+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:13:04.384775+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:04.384821+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:04.385717+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:04.387801+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:13:04.392040+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:04.392413+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:04.392484+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:04.453602+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:13:04.484767+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:13:04.488659+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:13:04.491167+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:13:04.497205+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:13:04.533436+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T18:13:04.540546+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:13:04.563810+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T18:13:04.564435+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:13:04.564481+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:04.564524+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:04.565140+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:04.567840+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:13:04.569639+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:04.569875+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:04.569913+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:04.593975+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T18:13:04.599086+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T18:13:04.603263+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T18:13:07.118893+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T18:13:07.124012+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:13:09.059964+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T18:13:09.064704+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:13:09.081735+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T18:13:09.084791+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:13:09.084852+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:09.084897+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:09.085466+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:09.086328+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:13:09.089671+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:09.090169+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:09.090282+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:09.097186+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:13:09.100276+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:13:09.101494+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:13:09.102017+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:13:09.102869+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:13:09.152968+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T18:13:09.153608+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:13:09.153661+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:09.153709+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:09.154615+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:09.158649+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:13:09.160567+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:09.160832+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:09.160880+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:09.166687+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T18:13:09.168549+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T18:13:09.170767+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T18:13:49.542308+02:00] request.INFO: Matched route "api_participants_post_collection". {"route":"api_participants_post_collection","route_parameters":{"_route":"api_participants_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Participant","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/participants","method":"POST"} []
[2020-05-05T18:13:49.543436+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:13:49.543527+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:49.543623+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:49.544457+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:49.548007+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:13:49.549927+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:49.550286+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:49.550328+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:49.590783+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-05-05T18:13:49.596047+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5 FROM conference c0_ WHERE c0_.id = ? [76] []
[2020-05-05T18:13:49.602995+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-05T18:13:49.604490+02:00] doctrine.DEBUG: INSERT INTO participant (user_id, conference_id) VALUES (?, ?) {"1":2,"2":76} []
[2020-05-05T18:13:49.608573+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-05T18:13:49.617468+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.id = ? [1] []
[2020-05-05T18:13:49.729628+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T18:13:49.732617+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:13:49.732687+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:49.732740+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:49.733280+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:49.734067+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:13:49.736175+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:49.736516+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:49.736575+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:49.742339+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:13:49.745102+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:13:49.746208+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:13:49.746906+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:13:49.751044+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:13:49.795670+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T18:13:49.796242+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:13:49.796301+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:49.796355+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:49.796947+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:49.799484+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:13:49.800973+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:49.801205+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:49.801243+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:13:49.806996+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T18:13:49.808268+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T18:13:49.814568+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T18:14:14.207192+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T18:14:14.214065+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:14:14.231644+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T18:14:14.234889+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:14:14.234952+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:14.234996+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:14.235804+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:14.237000+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:14:14.241374+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:14.241672+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:14.241722+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:14.246478+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-05-05T18:14:14.247305+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:14:14.248719+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:14:14.249317+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:14:14.252418+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:14:14.253528+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:14:14.253954+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:14:14.256748+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:14:14.257483+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:14:14.257999+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:14:14.259010+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:14:14.259727+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:14:14.260270+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:14:14.260990+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:14:14.261487+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:14:14.261902+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:14:14.262579+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-05-05T18:14:51.130436+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T18:14:51.138227+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:14:51.161463+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T18:14:51.165181+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:14:51.165247+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:51.165293+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:51.165971+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:51.166961+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:14:51.169343+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:51.169707+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:51.169772+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:51.177215+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:14:51.180839+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:14:51.181987+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:14:51.182437+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:14:51.184349+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:14:51.229488+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T18:14:51.230094+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:14:51.230140+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:51.230195+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:51.230671+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:51.233076+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:14:51.234785+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:51.235018+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:51.235058+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:51.241585+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T18:14:51.243458+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T18:14:51.246217+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T18:14:52.814327+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T18:14:52.818968+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:14:52.835535+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T18:14:52.836100+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:14:52.836146+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:52.836189+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:52.836649+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:52.839477+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:14:52.842010+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:52.842433+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:52.842540+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:14:52.849649+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T18:14:52.850614+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T18:14:52.852352+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T18:22:37.430268+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T18:22:37.591073+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:22:37.591422+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:22:37.591637+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:22:37.596294+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:22:37.633200+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-05-05T18:22:37.633806+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-05-05T18:22:50.729501+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T18:22:50.735382+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:22:52.717706+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-05-05T18:22:52.724390+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:22:52.970727+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-05-05T18:22:53.199262+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T18:22:53.205078+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:22:53.205192+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:22:53.205275+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:22:53.206384+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:22:53.207385+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:22:53.209826+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:22:53.210248+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:22:53.210322+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:22:53.218290+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:22:53.225484+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:22:53.230493+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:22:53.232663+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:22:53.235890+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:22:53.260159+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T18:22:53.265846+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:22:53.289965+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T18:22:53.291073+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:22:53.291204+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:22:53.291291+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:22:53.292177+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:22:53.298153+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:22:53.301851+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:22:53.302257+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:22:53.302336+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:22:53.312900+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T18:22:53.315180+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T18:22:53.318331+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T18:23:06.461873+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T18:23:06.469122+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:23:06.469213+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:23:06.469285+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:23:06.470251+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:23:06.471634+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:23:06.475124+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:23:06.475587+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:23:06.475693+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:23:06.482725+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-05-05T18:23:06.486761+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:23:06.487253+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:23:06.487600+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:23:06.491839+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:23:06.493131+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:23:06.493717+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:23:06.496594+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:23:06.497144+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:23:06.497461+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:23:06.497957+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:23:06.498329+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:23:06.498912+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:23:06.499720+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:23:06.500295+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:23:06.500708+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:23:06.501739+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-05-05T18:25:17.147882+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T18:25:17.171894+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:25:17.172010+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:25:17.172096+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:25:17.175621+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:25:17.179042+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:25:17.196969+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:25:17.197663+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:25:17.197730+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:25:17.202106+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-05-05T18:25:17.203306+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:25:17.203722+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:25:17.204053+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:25:17.206685+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:25:17.208285+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:25:17.208774+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:25:17.210792+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:25:17.211478+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:25:17.212201+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:25:17.213089+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:25:17.213588+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:25:17.213970+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:25:17.214701+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:25:17.215168+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:25:17.215723+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:25:17.216552+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-05-05T18:26:00.193663+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T18:26:00.197230+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:26:00.197300+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:26:00.197349+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:26:00.197971+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:26:00.198934+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:26:00.201267+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:26:00.201804+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:26:00.201891+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:26:00.206277+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-05-05T18:26:00.206904+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:26:00.207575+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:26:00.208259+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:26:00.211437+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:26:00.214318+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:26:00.215083+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:26:00.217895+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:26:00.218559+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:26:00.219898+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:26:00.220921+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:26:00.226431+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:26:00.226973+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:26:00.228107+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:26:00.228883+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:26:00.229626+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:26:00.230887+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-05-05T18:26:15.217017+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T18:26:15.220631+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:26:15.220701+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:26:15.220748+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:26:15.221364+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:26:15.222312+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:26:15.225183+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:26:15.225623+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:26:15.225708+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:26:15.230021+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-05-05T18:26:15.230578+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:26:15.231005+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:26:15.231334+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:26:15.233948+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:26:15.235323+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:26:15.235870+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:26:15.237706+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:26:15.240321+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:26:15.240973+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:26:15.241978+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:26:15.242681+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:26:15.243399+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:26:15.245281+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:26:15.246311+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:26:15.247593+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:26:15.249026+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-05-05T18:27:01.356126+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T18:27:01.374388+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:27:01.374473+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:27:01.374531+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:27:01.376921+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:27:01.379718+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:27:01.398880+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:27:01.399356+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:27:01.399420+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:27:01.407284+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-05-05T18:27:01.408752+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:27:01.409395+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:27:01.409898+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:27:01.423742+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:27:01.427569+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:27:01.428186+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:27:01.430531+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:27:01.431034+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:27:01.431471+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:27:01.432202+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:27:01.432605+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:27:01.432976+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:27:01.433653+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:27:01.434079+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:27:01.434506+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:27:01.435389+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-05-05T18:28:21.081909+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T18:28:21.090472+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:28:21.090538+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:28:21.090587+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:28:21.093041+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:28:21.095103+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:28:21.100747+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:28:21.101506+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:28:21.101567+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:28:21.108105+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-05-05T18:28:21.108787+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:28:21.109353+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:28:21.109805+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:28:21.115251+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:28:21.116644+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:28:21.117809+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:28:21.120515+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:28:21.120921+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:28:21.121231+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:28:21.121714+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:28:21.122009+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:28:21.122258+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:28:21.122651+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:28:21.122875+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:28:21.123104+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:28:21.123708+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-05-05T18:28:33.027367+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T18:28:33.035831+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:28:33.035927+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:28:33.036006+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:28:33.037002+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:28:33.038373+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:28:33.041564+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:28:33.042067+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:28:33.042152+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:28:33.048200+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-05-05T18:28:33.048792+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:28:33.049186+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:28:33.049487+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:28:33.053709+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:28:33.055495+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:28:33.056246+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:28:33.059509+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:28:33.060158+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:28:33.060805+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:28:33.062281+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:28:33.063030+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:28:33.063621+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:28:33.064619+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:28:33.065185+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:28:33.065717+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:28:33.066924+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-05-05T18:30:18.406800+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T18:30:18.411042+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:30:18.411111+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:30:18.411163+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:30:18.411819+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:30:18.412846+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:30:18.416092+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:30:18.416498+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:30:18.416547+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:30:18.420546+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-05-05T18:30:18.421342+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:30:18.421968+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:30:18.422549+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:30:18.426238+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:30:18.427729+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:30:18.428303+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T18:30:18.431206+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:30:18.431789+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:30:18.432383+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-05-05T18:30:18.433309+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:30:18.434307+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:30:18.434867+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-05-05T18:30:18.436084+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:30:18.436644+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:30:18.438576+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-05-05T18:30:18.440013+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-05-05T18:54:09.177309+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T18:54:09.199851+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:54:09.231219+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T18:54:09.239097+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:54:09.239190+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:54:09.239262+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:54:09.245513+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:54:09.275656+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T18:54:09.298824+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:54:09.299135+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:54:09.299183+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:54:09.321642+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T18:54:09.324326+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T18:54:09.335287+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T18:55:02.540263+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-05-05T18:55:02.540872+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:55:02.540916+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:55:02.540949+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:55:02.541094+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:55:03.043580+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"47aebf"},"request_uri":"http://localhost:8000/_wdt/47aebf","method":"GET"} []
[2020-05-05T18:55:03.412004+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-05-05T18:55:03.412997+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:55:03.413092+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:55:03.413162+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:55:03.413542+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T18:55:05.239051+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-05-05T18:55:05.239800+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T18:55:05.239848+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:55:05.239881+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T18:55:05.240059+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:23:21.505016+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:23:21.525446+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:23:22.454641+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3dda4b"},"request_uri":"http://localhost:8000/_wdt/3dda4b","method":"GET"} []
[2020-05-05T19:23:22.497935+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:23:22.504365+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:23:22.533678+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:23:22.558805+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:23:22.558876+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:22.558932+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:22.560916+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:117)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:22.561807+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:24.546846+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:23:24.551040+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:23:24.566464+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:23:24.567538+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:23:24.567587+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:24.567630+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:24.567908+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:117)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:24.568153+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:25.664940+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:23:25.669389+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:23:27.151675+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-05-05T19:23:27.159472+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:23:27.331326+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-05-05T19:23:27.412257+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:23:27.416030+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:23:27.433353+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:23:27.436491+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:23:27.436556+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:27.436602+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:27.437267+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:27.438094+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:23:27.440482+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:27.440711+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:27.440747+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:27.445619+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:23:27.451801+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:23:27.453918+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:23:27.454489+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:23:27.457487+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:23:27.495253+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:23:27.495919+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:23:27.495966+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:27.496009+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:27.496485+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:27.499139+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:23:27.500701+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:27.500985+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:27.501046+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:23:27.524269+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:23:27.529095+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:23:27.532240+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:25:55.719229+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:25:55.779206+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:25:57.160084+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3af3e6"},"request_uri":"http://localhost:8000/_wdt/3af3e6","method":"GET"} []
[2020-05-05T19:25:57.189726+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:25:57.215680+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:25:57.215775+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:25:57.215868+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:25:57.221441+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:25:57.223757+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:25:57.245298+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:25:57.245784+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:25:57.245870+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:25:57.254915+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:25:57.262107+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:25:57.265161+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:25:57.265897+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:25:57.270243+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:25:57.311053+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:25:57.315050+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:25:57.641720+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:25:57.642652+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:25:57.642733+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:25:57.642803+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:25:57.643389+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:25:57.646267+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:25:57.648113+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:25:57.648357+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:25:57.648419+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:25:57.725188+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:25:57.726708+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:25:57.730124+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:28:04.688441+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:28:04.704890+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:28:05.698262+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eb3499"},"request_uri":"http://localhost:8000/_wdt/eb3499","method":"GET"} []
[2020-05-05T19:28:05.741691+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:28:05.846785+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:28:05.846892+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:28:05.846985+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:28:05.852919+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:28:05.856132+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:28:05.876053+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:28:05.876486+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:28:05.876561+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:28:05.883221+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:28:05.889167+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:28:05.892619+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:28:05.893152+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:28:05.897218+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:28:06.248499+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:28:06.250735+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:28:06.250830+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:28:06.250925+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:28:06.251855+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:28:06.257514+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:28:06.259905+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:28:06.260242+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:28:06.260303+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:28:06.288932+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:28:06.293851+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:28:06.306735+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:28:09.082971+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:28:09.093077+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:29:22.425919+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:29:22.435992+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:29:23.595427+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"046eb6"},"request_uri":"http://localhost:8000/_wdt/046eb6","method":"GET"} []
[2020-05-05T19:29:23.626412+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:29:23.652033+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:29:23.652127+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:23.652209+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:23.657319+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:23.659469+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:29:23.679606+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:23.680428+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:23.680551+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:23.689453+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:29:23.696674+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:29:23.699615+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:29:23.700221+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:29:23.702708+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:29:23.732706+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:29:23.737084+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:29:24.051539+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:29:24.052362+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:29:24.052428+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:24.052504+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:24.053129+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:24.058349+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:29:24.061568+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:24.062169+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:24.062325+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:24.071208+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:29:24.074237+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:29:24.077545+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:29:49.926667+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:29:49.934539+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:29:50.855307+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"84f328"},"request_uri":"http://localhost:8000/_wdt/84f328","method":"GET"} []
[2020-05-05T19:29:51.053636+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:29:51.067996+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:29:51.068099+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:51.068167+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:51.076143+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:51.078158+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:29:51.083541+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:51.084123+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:51.084213+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:51.092498+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:29:51.098625+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:29:51.101173+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:29:51.102105+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:29:51.107300+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:29:51.145556+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:29:51.152158+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:29:51.423868+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:29:51.424751+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:29:51.424812+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:51.424876+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:51.425588+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:51.428840+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:29:51.430430+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:51.430667+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:51.430706+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:29:51.435894+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:29:51.436903+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:29:51.439000+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:30:27.228721+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:30:27.235683+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:30:28.067878+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2dc980"},"request_uri":"http://localhost:8000/_wdt/2dc980","method":"GET"} []
[2020-05-05T19:30:28.103788+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:30:28.112806+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:30:28.112896+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:28.112971+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:28.114758+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:28.116071+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:30:28.118426+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:28.118776+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:28.118838+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:28.123863+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:30:28.127964+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:30:28.129240+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:30:28.131263+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:30:28.133685+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:30:28.163033+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:30:28.169169+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:30:28.222536+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:30:28.224379+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:30:28.224482+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:28.224577+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:28.225403+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:28.232554+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:30:28.235068+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:28.235476+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:28.235561+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:28.245579+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:30:28.247064+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:30:28.249229+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:30:48.264715+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:30:48.272752+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:30:49.111440+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"26221d"},"request_uri":"http://localhost:8000/_wdt/26221d","method":"GET"} []
[2020-05-05T19:30:49.209426+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:30:49.232611+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:30:49.232678+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:49.232730+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:49.236246+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:49.237587+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:30:49.256169+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:49.256442+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:49.256484+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:49.260662+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:30:49.264910+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:30:49.268705+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:30:49.269591+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:30:49.277471+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:30:49.556461+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:30:49.557392+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:30:49.557457+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:49.557522+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:49.559235+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:49.562244+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:30:49.563804+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:49.564078+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:49.564123+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:30:49.570855+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:30:49.574400+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:30:49.577865+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:30:49.606062+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:30:49.610537+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:30:59.730023+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:30:59.739266+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:31:00.852762+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c519d0"},"request_uri":"http://localhost:8000/_wdt/c519d0","method":"GET"} []
[2020-05-05T19:31:00.974596+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:31:01.038922+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:31:01.039017+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:01.039094+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:01.045440+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:01.049147+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:31:01.087853+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:01.088834+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:01.088957+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:01.103318+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:31:01.110751+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:31:01.114944+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:31:01.115600+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:31:01.121033+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:31:01.390660+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:31:01.399105+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:31:01.422292+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:31:01.423476+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:31:01.423555+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:01.423631+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:01.424405+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:01.428272+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:31:01.430494+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:01.430826+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:01.430882+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:01.442131+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:31:01.443910+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:31:01.448368+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:31:05.457867+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:31:05.465811+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:31:06.495716+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"49e0e3"},"request_uri":"http://localhost:8000/_wdt/49e0e3","method":"GET"} []
[2020-05-05T19:31:06.588372+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:31:06.609859+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:31:06.609959+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:06.610050+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:06.612764+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:06.617963+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:31:06.630471+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:06.630929+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:06.631025+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:06.642091+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:31:06.666135+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:31:06.670210+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:31:06.671198+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:31:06.677586+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:31:07.092309+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:31:07.095063+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:31:07.095156+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:07.095236+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:07.096175+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:07.100462+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:31:07.103021+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:07.103479+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:07.103545+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:07.121155+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:31:07.126172+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:31:07.133271+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:31:07.170419+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:31:07.182089+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:31:32.546312+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:31:32.561201+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:31:33.712956+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"400697"},"request_uri":"http://localhost:8000/_wdt/400697","method":"GET"} []
[2020-05-05T19:31:34.310604+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:31:34.337356+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:31:34.337470+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:34.337565+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:34.341377+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:34.343330+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:31:34.361521+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:34.361928+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:34.361995+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:34.369075+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:31:34.376818+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:31:34.392648+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:31:34.393178+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:31:34.396498+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:31:34.442119+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:31:34.448574+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:31:34.482530+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:31:34.483465+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:31:34.483530+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:34.483581+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:34.484198+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:34.487688+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:31:34.490109+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:34.490500+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:34.490573+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:34.500811+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:31:34.502104+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:31:34.513327+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:31:36.281392+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:31:36.289505+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:31:37.295824+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d77bd3"},"request_uri":"http://localhost:8000/_wdt/d77bd3","method":"GET"} []
[2020-05-05T19:31:37.349001+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:31:37.390804+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:31:37.390921+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:37.391019+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:37.394575+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:37.398815+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:31:37.413351+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:37.414408+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:37.414556+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:37.426061+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:31:37.452787+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:31:37.456478+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:31:37.457547+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:31:37.463094+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:31:37.502079+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:31:37.510901+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:31:37.815246+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:31:37.817632+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:31:37.817800+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:37.817967+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:37.819397+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:37.827142+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:31:37.829736+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:37.830075+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:37.830132+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:31:37.847837+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:31:37.848912+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:31:37.854784+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:32:57.362297+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:32:57.401619+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:32:58.411484+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f7ebd3"},"request_uri":"http://localhost:8000/_wdt/f7ebd3","method":"GET"} []
[2020-05-05T19:32:59.136280+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:32:59.175846+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:32:59.175918+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:32:59.175971+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:32:59.180716+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:32:59.185199+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:32:59.207341+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:32:59.208239+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:32:59.208314+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:32:59.220520+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:32:59.250314+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:32:59.254887+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:32:59.255458+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:32:59.261071+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:32:59.331683+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:32:59.332690+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:32:59.332758+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:32:59.332810+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:32:59.333375+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:32:59.336127+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:32:59.337829+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:32:59.338077+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:32:59.338133+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:32:59.352662+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:32:59.354273+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:32:59.359648+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:33:00.787320+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:33:00.794789+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:33:06.768492+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:33:06.779538+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:33:07.858876+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"22c7fb"},"request_uri":"http://localhost:8000/_wdt/22c7fb","method":"GET"} []
[2020-05-05T19:33:07.904717+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:33:07.953259+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:33:07.953327+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:33:07.953378+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:33:07.959439+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:33:07.966601+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:33:07.991473+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:33:07.992621+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:33:07.992748+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:33:08.001059+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:33:08.021611+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:33:08.026519+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:33:08.027103+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:33:08.033554+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:33:08.244992+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:33:08.256403+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:33:08.274797+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:33:08.275633+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:33:08.275686+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:33:08.275731+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:33:08.276213+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:33:08.279224+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:33:08.281560+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:33:08.281925+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:33:08.281987+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:33:08.298644+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:33:08.300289+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:33:08.306201+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:34:13.161506+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:34:13.175695+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:34:14.390733+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fe310a"},"request_uri":"http://localhost:8000/_wdt/fe310a","method":"GET"} []
[2020-05-05T19:34:14.512683+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:34:14.562049+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:34:14.562153+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:14.562244+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:14.567625+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:14.572471+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:34:14.594832+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:14.595212+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:14.595255+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:14.602209+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:34:14.620284+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:34:14.624194+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:34:14.624715+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:34:14.631137+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:34:15.195343+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:34:15.226323+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:34:15.265471+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:34:15.271675+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:34:15.271770+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:15.271849+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:15.283914+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:15.341644+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:34:15.400949+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:15.401948+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:15.402072+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:15.443018+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:34:15.446034+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:34:15.456233+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:34:35.496821+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:34:35.508150+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:34:36.754403+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"224368"},"request_uri":"http://localhost:8000/_wdt/224368","method":"GET"} []
[2020-05-05T19:34:37.400638+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:34:37.417376+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:34:54.289317+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:34:54.307438+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:34:55.289574+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"57c708"},"request_uri":"http://localhost:8000/_wdt/57c708","method":"GET"} []
[2020-05-05T19:34:55.425862+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:34:55.465169+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:34:55.465258+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:55.465341+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:55.470174+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:55.474236+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:34:55.494586+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:55.494958+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:55.494998+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:55.501826+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:34:55.518709+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:34:55.522337+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:34:55.522828+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:34:55.526407+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:34:55.550366+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:34:55.555546+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:34:55.745972+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:34:55.748960+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:34:55.749042+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:55.749125+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:55.749910+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:55.756543+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:34:55.758507+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:55.758820+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:55.758868+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:34:55.785756+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:34:55.787762+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:34:55.793674+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:35:06.341019+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:35:06.406432+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:35:07.385703+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:35:07.421139+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:35:07.421204+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:35:07.421253+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:35:07.425141+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:35:07.428748+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:35:07.449550+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:35:07.449970+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:35:07.450050+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:35:07.459636+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:35:07.485954+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:35:07.489659+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:35:07.490204+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:35:07.496192+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:35:07.532819+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dcacc9"},"request_uri":"http://localhost:8000/_wdt/dcacc9","method":"GET"} []
[2020-05-05T19:35:07.565163+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:35:07.571291+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:35:07.795903+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:35:07.796950+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:35:07.797008+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:35:07.797061+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:35:07.797571+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:35:07.800107+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:35:07.801587+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:35:07.801815+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:35:07.801854+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:35:07.815622+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:35:07.816866+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:35:07.821640+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:42:05.112497+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:42:05.126297+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:42:06.078940+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"733733"},"request_uri":"http://localhost:8000/_wdt/733733","method":"GET"} []
[2020-05-05T19:42:06.113594+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:42:06.117201+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:42:06.138784+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:42:06.160739+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:42:06.160830+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:06.160910+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:06.165430+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:06.167938+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:42:06.184546+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:06.184818+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:06.184859+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:06.192430+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:42:06.199867+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:42:06.203793+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:42:06.204442+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:42:06.209046+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:42:06.530620+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:42:06.531256+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:42:06.531313+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:06.531358+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:06.531827+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:06.534627+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:42:06.536310+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:06.536576+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:06.536621+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:06.545804+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:42:06.546925+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:42:06.549841+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:42:38.675929+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:42:38.693055+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:42:39.735296+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1b02cd"},"request_uri":"http://localhost:8000/_wdt/1b02cd","method":"GET"} []
[2020-05-05T19:42:39.768593+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:42:39.810320+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:42:39.810438+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:39.810548+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:39.815266+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:39.820718+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:42:39.846723+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:39.847172+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:39.847244+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:39.857112+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:42:39.875457+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:42:39.879640+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:42:39.880286+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:42:39.883958+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:42:39.913131+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:42:39.918759+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:42:40.211246+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:42:40.212817+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:42:40.212894+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:40.212954+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:40.213789+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:40.219458+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:42:40.221782+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:40.222118+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:40.222171+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:42:40.241278+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:42:40.243560+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:42:40.251321+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:43:02.622070+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:43:02.638155+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:43:03.581866+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"79ab3a"},"request_uri":"http://localhost:8000/_wdt/79ab3a","method":"GET"} []
[2020-05-05T19:43:03.621328+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:43:03.651560+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:43:03.651680+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:03.651783+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:03.656892+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:03.658871+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:43:03.680282+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:03.680734+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:03.680815+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:03.688622+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:43:03.693260+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:43:03.695700+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:43:03.696263+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:43:03.699592+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:43:03.727460+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:43:03.732533+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:43:04.022270+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:43:04.023416+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:43:04.023487+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:04.023553+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:04.024307+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:04.028022+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:43:04.030155+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:04.030548+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:04.030605+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:04.040099+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:43:04.042018+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:43:04.046854+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:43:15.912447+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:43:15.957076+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:43:16.967074+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"19ef8f"},"request_uri":"http://localhost:8000/_wdt/19ef8f","method":"GET"} []
[2020-05-05T19:43:17.002984+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:43:17.011359+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:43:17.033383+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:43:17.073423+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:43:17.073521+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:17.073605+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:17.077707+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:17.081136+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:43:17.132752+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:17.133231+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:17.133297+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:17.141754+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:43:17.158926+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:43:17.162507+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:43:17.163075+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:43:17.167830+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:43:17.482571+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:43:17.484000+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:43:17.484081+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:17.484150+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:17.484896+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:17.488691+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:43:17.490942+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:17.491260+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:17.491316+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:43:17.500186+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:43:17.501842+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:43:17.504837+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:44:58.544964+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:44:58.550275+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:44:58.550462+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:44:58.550696+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:44:58.556391+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:44:58.582909+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:44:58.601475+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:44:58.602277+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:44:58.602346+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:44:58.613281+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:44:58.616360+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76]] []
[2020-05-05T19:44:58.620474+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:44:58.668594+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:44:58.678505+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:45:27.969740+02:00] request.INFO: Matched route "api_conferences_post_collection". {"route":"api_conferences_post_collection","route_parameters":{"_route":"api_conferences_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/conferences","method":"POST"} []
[2020-05-05T19:45:27.970349+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:45:27.970396+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:27.970438+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:27.970987+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:27.973933+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:45:27.975604+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:27.975882+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:27.975928+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:27.996080+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-05T19:45:27.996376+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, start, end, room) VALUES (?, ?, ?, ?, ?) {"1":"Exemple 2","2":"Bonjour, autre exemple de  [...]","3":"2020-06-05T16:00:00+00:00","4":"2020-06-04T22:00:00+00:00","5":null} []
[2020-05-05T19:45:27.997470+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-05T19:45:28.005489+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.description AS description_3, t0.start AS start_4, t0.end AS end_5, t0.room AS room_6 FROM conference t0 WHERE t0.id = ? [77] []
[2020-05-05T19:45:28.011331+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-05-05T19:45:28.011786+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.conference_id = ? [77] []
[2020-05-05T19:45:36.460704+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:45:36.466228+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:45:37.498561+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8d6921"},"request_uri":"http://localhost:8000/_wdt/8d6921","method":"GET"} []
[2020-05-05T19:45:37.533447+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:45:37.534941+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:45:37.535034+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:37.535147+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:37.536010+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:37.542492+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:45:37.545112+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:37.545459+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:37.545521+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:37.552086+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:45:37.553911+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76,77]] []
[2020-05-05T19:45:37.560020+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:45:40.240885+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:45:40.249675+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:45:40.249788+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:40.249883+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:40.250997+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:40.252823+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:45:40.257692+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:40.258179+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:40.258275+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:40.265849+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:45:40.274672+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:45:40.276743+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:45:40.277511+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:45:40.281405+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:45:40.339122+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:45:40.340502+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:45:40.340578+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:40.340634+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:40.341160+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:40.344463+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:45:40.346588+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:40.346963+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:40.347041+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:40.353616+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:45:40.354732+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76,77]] []
[2020-05-05T19:45:40.359246+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T19:45:41.562384+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T19:45:41.566854+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T19:45:49.580125+02:00] request.INFO: Matched route "api_participants_delete_item". {"route":"api_participants_delete_item","route_parameters":{"_route":"api_participants_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Participant","_api_item_operation_name":"delete","id":"1"},"request_uri":"http://localhost:8000/api/participants/1","method":"DELETE"} []
[2020-05-05T19:45:49.580900+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:45:49.580961+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:49.581015+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:49.581728+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:49.586232+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:45:49.588224+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:49.588981+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:49.589110+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:49.594286+02:00] doctrine.DEBUG: SELECT p0_.id AS id_0, p0_.user_id AS user_id_1, p0_.conference_id AS conference_id_2 FROM participant p0_ WHERE p0_.id = ? [1] []
[2020-05-05T19:45:49.597898+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-05T19:45:49.598131+02:00] doctrine.DEBUG: DELETE FROM participant WHERE id = ? [1] []
[2020-05-05T19:45:49.598576+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-05T19:45:49.677260+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T19:45:49.680979+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:45:49.681046+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:49.681092+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:49.681586+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:49.682355+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:45:49.684211+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:49.684471+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:49.684511+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:49.688006+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:45:49.692962+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:45:49.694644+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:45:49.695425+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T19:45:49.696629+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:45:49.743366+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T19:45:49.744187+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T19:45:49.744249+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:49.744296+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:49.744782+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:49.748586+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T19:45:49.750924+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:49.751271+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:49.751340+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T19:45:49.760004+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T19:45:49.761283+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76,77]] []
[2020-05-05T19:45:49.763991+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T23:38:40.762129+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:38:40.772565+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:38:42.006026+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c4bd84"},"request_uri":"http://localhost:8000/_wdt/c4bd84","method":"GET"} []
[2020-05-05T23:38:42.753050+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:38:42.760775+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:38:43.555368+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T23:38:43.561080+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T23:38:43.561164+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:38:43.561221+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:38:43.561965+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\ExpiredTokenException(code: 0):  at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:117)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:38:43.562449+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:45.716840+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:46:45.734780+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:46:45.786884+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-05-05T23:46:45.791520+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:46:46.028526+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-05-05T23:46:46.158674+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:46:46.165236+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:46:46.207446+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T23:46:46.211945+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T23:46:46.212045+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:46.212140+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:46.214086+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:46.214870+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:46:46.217067+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:46.217399+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:46.217472+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:46.236429+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:46:46.265943+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:46:46.267867+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:46:46.268329+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:46:46.269144+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:46:46.348663+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T23:46:46.349459+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T23:46:46.349520+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:46.349571+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:46.350108+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:46.354104+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:46:46.360193+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:46.361320+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:46.361379+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:46.395654+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T23:46:46.397114+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76,77]] []
[2020-05-05T23:46:46.413654+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T23:46:48.451619+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:46:48.460302+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:46:48.482479+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T23:46:48.486708+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T23:46:48.486781+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:48.486837+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:48.487449+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:48.488670+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:46:48.492476+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:48.492952+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:48.493039+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:46:48.498091+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-05-05T23:46:48.498793+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T23:46:48.499425+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T23:46:48.499962+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T23:46:48.502995+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:46:48.504063+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:46:48.504599+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:46:48.506158+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T23:46:48.507078+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-05-05T23:46:48.507688+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-05-05T23:46:48.508441+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T23:46:48.509253+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-05-05T23:46:48.509973+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-05-05T23:46:48.510890+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T23:46:48.511768+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-05-05T23:46:48.512533+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-05-05T23:46:48.513764+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-05-05T23:52:53.139094+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:52:53.225510+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:52:54.399994+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b2ee5d"},"request_uri":"http://localhost:8000/_wdt/b2ee5d","method":"GET"} []
[2020-05-05T23:52:54.445618+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-05-05T23:52:54.484045+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T23:52:54.484115+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:52:54.484167+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:52:54.488371+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:52:54.491655+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:52:54.514762+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:52:54.515222+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:52:54.515303+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:52:54.525301+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-05-05T23:52:54.526799+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T23:52:54.527422+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T23:52:54.527852+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T23:52:54.555027+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:52:54.560049+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:52:54.561169+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:52:54.562381+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-05-05T23:52:54.563100+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-05-05T23:52:54.563767+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-05-05T23:52:54.564600+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-05-05T23:52:54.565161+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-05-05T23:52:54.565518+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-05-05T23:52:54.566337+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [6] []
[2020-05-05T23:52:54.567098+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [6] []
[2020-05-05T23:52:54.567915+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [6] []
[2020-05-05T23:52:54.568853+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-05-05T23:52:58.587911+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-05-05T23:52:58.600426+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:52:58.799006+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-05-05T23:52:58.909954+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T23:52:58.918563+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T23:52:58.918662+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:52:58.918764+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:52:58.919739+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:52:58.921217+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:52:58.924592+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:52:58.925435+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:52:58.925700+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:52:58.934379+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:52:58.939129+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:52:58.940758+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:52:58.942165+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:52:58.944494+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:52:58.998685+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:52:59.009408+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:52:59.032280+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T23:52:59.033463+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T23:52:59.033556+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:52:59.033636+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:52:59.034454+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:52:59.038198+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:52:59.043821+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:52:59.044238+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:52:59.044325+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:52:59.062436+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T23:52:59.063714+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76,77]] []
[2020-05-05T23:52:59.069602+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T23:53:49.391945+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:53:49.407121+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:53:50.528412+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ba11b6"},"request_uri":"http://localhost:8000/_wdt/ba11b6","method":"GET"} []
[2020-05-05T23:53:50.556691+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T23:53:50.584804+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T23:53:50.584890+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:53:50.584980+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:53:50.589196+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:53:50.593934+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:53:50.617138+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:53:50.617572+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:53:50.617642+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:53:50.626407+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:53:50.646510+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:53:50.653176+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:53:50.654135+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:53:50.655497+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:53:50.684023+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:53:50.690024+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:53:50.995713+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T23:53:50.996651+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T23:53:50.996701+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:53:50.996746+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:53:50.997296+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:53:51.000840+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:53:51.003008+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:53:51.003339+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:53:51.003394+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:53:51.018721+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T23:53:51.020631+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76,77]] []
[2020-05-05T23:53:51.027803+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T23:54:20.866641+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:54:20.917270+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:54:22.039724+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8ea2e2"},"request_uri":"http://localhost:8000/_wdt/8ea2e2","method":"GET"} []
[2020-05-05T23:54:22.082121+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T23:54:22.118328+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T23:54:22.118425+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:22.118508+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:22.123486+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:22.125268+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:54:22.145917+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:22.146336+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:22.146403+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:22.154056+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:54:22.158051+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:54:22.163923+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:54:22.164625+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:54:22.165841+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:54:22.272155+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T23:54:22.273179+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T23:54:22.273258+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:22.273331+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:22.274103+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:22.283981+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:54:22.286419+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:22.286772+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:22.286835+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:22.296897+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T23:54:22.299883+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76,77]] []
[2020-05-05T23:54:22.306358+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T23:54:22.482539+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:54:22.488525+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:54:32.388635+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:54:32.406134+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:54:33.661551+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6eaffb"},"request_uri":"http://localhost:8000/_wdt/6eaffb","method":"GET"} []
[2020-05-05T23:54:33.697001+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T23:54:33.734808+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T23:54:33.734882+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:33.734939+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:33.738831+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:33.741412+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:54:33.760472+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:33.760878+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:33.760947+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:33.774504+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:54:33.781989+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:54:33.794225+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:54:33.794952+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:54:33.796359+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:54:33.845565+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:54:33.852192+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:54:34.391717+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T23:54:34.392382+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T23:54:34.392430+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:34.392473+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:34.393277+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:34.402989+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:54:34.405494+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:34.405869+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:34.405938+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:54:34.436117+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T23:54:34.438410+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76,77]] []
[2020-05-05T23:54:34.443554+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T23:54:34.809132+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:54:34.816913+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:54:37.427325+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:54:37.434826+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:54:38.764773+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:54:38.771141+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:54:39.997475+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:54:40.002653+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:55:52.857657+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:55:52.894793+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:55:53.326056+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d4edfb"},"request_uri":"http://localhost:8000/_wdt/d4edfb","method":"GET"} []
[2020-05-05T23:55:53.390814+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T23:55:53.437222+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T23:55:53.437289+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:55:53.437337+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:55:53.439751+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:55:53.442379+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:55:53.462441+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:55:53.462828+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:55:53.462890+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:55:53.470962+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:55:53.491712+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:55:53.496900+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:55:53.497545+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:55:53.498602+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:55:53.520900+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:55:53.525548+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:55:53.542887+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T23:55:53.543715+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T23:55:53.543766+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:55:53.543816+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:55:53.544537+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:55:53.549110+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:55:53.551712+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:55:53.552050+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:55:53.552109+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:55:53.566839+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T23:55:53.568438+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76,77]] []
[2020-05-05T23:55:53.574173+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T23:55:54.831943+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:55:54.836519+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:56:00.024476+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:56:00.030209+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:56:00.687639+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:56:00.691640+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:56:01.280690+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:56:01.289286+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:56:01.716659+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:56:01.725867+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:56:29.627585+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:56:29.632922+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:56:30.555409+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a4c3de"},"request_uri":"http://localhost:8000/_wdt/a4c3de","method":"GET"} []
[2020-05-05T23:56:30.579885+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-05T23:56:30.585545+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T23:56:30.585612+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:56:30.585664+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:56:30.586336+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:56:30.587207+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:56:30.589104+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:56:30.589463+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:56:30.589513+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:56:30.593684+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:56:30.596441+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:56:30.598188+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:56:30.598771+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-05T23:56:30.599764+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:56:30.638679+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:56:30.646408+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:56:30.681810+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-05T23:56:30.682804+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-05T23:56:30.682888+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:56:30.682968+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:56:30.683781+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:56:30.688001+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-05T23:56:30.691943+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:56:30.692423+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:56:30.692507+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-05T23:56:30.701667+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-05T23:56:30.703305+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76,77]] []
[2020-05-05T23:56:30.705292+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-05T23:56:31.731311+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:56:31.737960+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:58:11.195045+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:58:11.202692+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-05T23:58:12.401763+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"230b9e"},"request_uri":"http://localhost:8000/_wdt/230b9e","method":"GET"} []
[2020-05-05T23:58:12.479033+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-05T23:58:12.485048+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:00:53.976578+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:00:53.980975+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:00:54.996886+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9f67d8"},"request_uri":"http://localhost:8000/_wdt/9f67d8","method":"GET"} []
[2020-05-06T00:00:55.156004+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:00:55.168379+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:01:55.538383+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:01:55.543900+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:01:56.517201+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"19e993"},"request_uri":"http://localhost:8000/_wdt/19e993","method":"GET"} []
[2020-05-06T00:01:56.550002+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:01:56.556628+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:01:57.304485+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:01:57.307950+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:01:58.508654+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-05-06T00:01:58.517730+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T00:01:58.709607+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-05-06T00:01:58.795692+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:01:58.801597+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:01:58.821576+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-06T00:01:58.827454+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T00:01:58.827551+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T00:01:58.827628+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T00:01:58.828595+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T00:01:58.829997+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T00:01:58.834132+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T00:01:58.834643+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T00:01:58.834744+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T00:01:58.903904+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-06T00:01:58.920178+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-06T00:01:58.920653+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-06T00:01:58.920975+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-06T00:01:58.921743+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-06T00:01:58.977561+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-06T00:01:58.979247+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T00:01:58.979383+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T00:01:58.979512+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T00:01:58.980238+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T00:01:58.984043+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T00:01:58.985742+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T00:01:58.985982+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T00:01:58.986021+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T00:01:59.015904+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-06T00:01:59.017412+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76,77]] []
[2020-05-06T00:01:59.031131+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-06T00:02:00.037690+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:02:00.042827+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:10:36.399308+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:10:36.409138+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:10:37.396869+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"448af6"},"request_uri":"http://localhost:8000/_wdt/448af6","method":"GET"} []
[2020-05-06T00:10:37.434862+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /getInfosUser/2" (from "http://localhost:8000/")" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /getInfosUser/2\" (from \"http://localhost:8000/\") at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/getInfosUser/2/\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-05-06T00:10:37.486714+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:10:37.491279+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:12:32.369450+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:12:32.374148+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:12:33.346914+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"940ef7"},"request_uri":"http://localhost:8000/_wdt/940ef7","method":"GET"} []
[2020-05-06T00:12:33.375489+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T00:12:33.383949+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T00:12:33.390561+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:12:33.413947+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:12:33.419582+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:17:38.498046+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:17:38.505224+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:17:39.388393+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7d8a8e"},"request_uri":"http://localhost:8000/_wdt/7d8a8e","method":"GET"} []
[2020-05-06T00:17:39.414140+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T00:17:39.425682+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T00:17:39.433102+02:00] php.CRITICAL: Uncaught Error: Call to a member function getInamiNumber() on null {"exception":"[object] (Error(code: 0): Call to a member function getInamiNumber() on null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:53)"} []
[2020-05-06T00:17:39.436600+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getInamiNumber() on null" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php line 53 {"exception":"[object] (Error(code: 0): Call to a member function getInamiNumber() on null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:53)"} []
[2020-05-06T00:17:39.439932+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:17:39.483646+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:17:39.492258+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:17:44.142647+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:17:44.148025+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:17:45.038046+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T00:17:45.043276+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T00:17:45.045478+02:00] php.CRITICAL: Uncaught Error: Call to a member function getInamiNumber() on null {"exception":"[object] (Error(code: 0): Call to a member function getInamiNumber() on null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:53)"} []
[2020-05-06T00:17:45.047138+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getInamiNumber() on null" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php line 53 {"exception":"[object] (Error(code: 0): Call to a member function getInamiNumber() on null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:53)"} []
[2020-05-06T00:17:45.050386+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:17:45.085374+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f5c2db"},"request_uri":"http://localhost:8000/_wdt/f5c2db","method":"GET"} []
[2020-05-06T00:17:46.806326+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:17:46.811187+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:19:03.279057+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-06T00:19:03.289258+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T00:19:03.330118+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T00:19:03.339401+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T00:19:03.351857+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-05-06T00:19:03.364332+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-06T00:19:03.365648+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'admin' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T00:19:03.367506+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'admin' */ WHERE k.table_name = 'admin' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T00:19:03.372993+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'admin' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T00:19:03.374519+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'admin' [] []
[2020-05-06T00:19:03.375440+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'conference' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T00:19:03.377125+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'conference' */ WHERE k.table_name = 'conference' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T00:19:03.378358+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'conference' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T00:19:03.379492+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'conference' [] []
[2020-05-06T00:19:03.380515+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'medecin' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T00:19:03.382100+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'medecin' */ WHERE k.table_name = 'medecin' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T00:19:03.383522+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'medecin' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T00:19:03.384686+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'medecin' [] []
[2020-05-06T00:19:03.385658+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T00:19:03.387280+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T00:19:03.388518+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T00:19:03.389560+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-05-06T00:19:03.390449+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'participant' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T00:19:03.391896+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'participant' */ WHERE k.table_name = 'participant' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T00:19:03.393089+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'participant' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T00:19:03.394128+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'participant' [] []
[2020-05-06T00:19:03.395049+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'speaker' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T00:19:03.396610+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'speaker' */ WHERE k.table_name = 'speaker' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T00:19:03.397966+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'speaker' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T00:19:03.399422+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'speaker' [] []
[2020-05-06T00:19:03.400306+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T00:19:03.402116+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T00:19:03.403344+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T00:19:03.404537+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-05-06T00:19:07.009951+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-06T00:19:07.011308+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T00:19:07.016090+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T00:19:07.018429+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T00:19:07.023801+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-05-06T00:19:07.025577+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-05-06T00:19:10.230951+02:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355', '20200317201021', '20200317201232', '20200318120105', '20200331213036', '20200417151230', '20200427220257', '20200428160443', '20200505221903') ORDER BY version DESC LIMIT 1 [] []
[2020-05-06T00:19:10.236189+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-05-06T00:19:10.249277+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-06T00:19:10.339192+02:00] doctrine.DEBUG: ALTER TABLE medecin CHANGE inami_number inami_number INT DEFAULT NULL [] []
[2020-05-06T00:19:10.470586+02:00] doctrine.DEBUG: INSERT INTO migration_versions (version, executed_at) VALUES (?, ?) ["20200505221903","2020-05-05 22:19:10"] []
[2020-05-06T00:19:10.484566+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-06T00:19:33.205840+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:19:33.211237+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:19:34.157348+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c1cc36"},"request_uri":"http://localhost:8000/_wdt/c1cc36","method":"GET"} []
[2020-05-06T00:19:34.180152+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T00:19:34.187017+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T00:19:34.192769+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:19:34.627064+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:19:34.632336+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:26:08.134277+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:26:08.141945+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:26:09.171978+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b62045"},"request_uri":"http://localhost:8000/_wdt/b62045","method":"GET"} []
[2020-05-06T00:26:09.219887+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:26:09.224973+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:26:09.248026+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T00:26:09.257300+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T00:26:09.263292+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:31:05.549989+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:31:05.556128+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:31:06.475070+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"449025"},"request_uri":"http://localhost:8000/_wdt/449025","method":"GET"} []
[2020-05-06T00:31:06.572905+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T00:31:06.585049+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T00:31:06.596065+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:31:06.626119+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:31:06.633592+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:31:31.154773+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:31:31.160865+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:31:32.126829+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"39a998"},"request_uri":"http://localhost:8000/_wdt/39a998","method":"GET"} []
[2020-05-06T00:31:32.154842+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T00:31:32.162963+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T00:31:32.169777+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:31:32.203129+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:31:32.211363+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:32:29.044692+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:32:29.054450+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:32:30.078261+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1688aa"},"request_uri":"http://localhost:8000/_wdt/1688aa","method":"GET"} []
[2020-05-06T00:32:30.098026+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T00:32:30.103873+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T00:32:30.109645+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:32:30.135657+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:32:30.142846+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:33:13.779427+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:33:13.788457+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:33:14.637617+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1520c9"},"request_uri":"http://localhost:8000/_wdt/1520c9","method":"GET"} []
[2020-05-06T00:33:14.658096+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T00:33:14.665740+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T00:33:14.672354+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:33:18.153174+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:33:18.160807+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:33:40.594309+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:33:40.600295+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:33:41.622186+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"167a36"},"request_uri":"http://localhost:8000/_wdt/167a36","method":"GET"} []
[2020-05-06T00:33:41.660883+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T00:33:41.675320+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T00:33:41.684315+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:33:43.467484+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:33:43.474060+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:38:58.045483+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:38:58.052475+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:38:59.069908+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"834cf4"},"request_uri":"http://localhost:8000/_wdt/834cf4","method":"GET"} []
[2020-05-06T00:38:59.691140+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:38:59.696990+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:39:11.430010+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:39:11.437051+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:39:12.287121+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4e0d16"},"request_uri":"http://localhost:8000/_wdt/4e0d16","method":"GET"} []
[2020-05-06T00:39:12.341789+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T00:39:12.352331+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T00:39:12.361630+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:39:12.392480+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:39:12.398850+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:39:45.069100+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:39:45.075499+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:39:45.927893+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e1b39a"},"request_uri":"http://localhost:8000/_wdt/e1b39a","method":"GET"} []
[2020-05-06T00:39:45.950965+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T00:39:45.956700+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T00:39:45.963335+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:39:45.996714+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:39:46.005235+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:42:42.609342+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:42:42.616847+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:42:43.555418+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5a4298"},"request_uri":"http://localhost:8000/_wdt/5a4298","method":"GET"} []
[2020-05-06T00:42:43.590298+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T00:42:43.600127+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T00:42:43.607741+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:42:43.635454+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:42:43.643534+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:43:13.273901+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:43:13.282203+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:43:14.272338+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"28d8a9"},"request_uri":"http://localhost:8000/_wdt/28d8a9","method":"GET"} []
[2020-05-06T00:43:14.319355+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:43:14.324840+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:43:14.343987+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T00:43:14.350146+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T00:43:14.358107+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:43:34.347222+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:43:34.351840+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:43:35.277655+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"285eab"},"request_uri":"http://localhost:8000/_wdt/285eab","method":"GET"} []
[2020-05-06T00:43:35.305968+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T00:43:35.315218+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T00:43:35.322111+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:43:38.748754+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:43:38.753055+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:43:41.415105+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:43:41.419755+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:43:42.288167+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ed766a"},"request_uri":"http://localhost:8000/_wdt/ed766a","method":"GET"} []
[2020-05-06T00:43:42.316595+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T00:43:42.323479+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T00:43:42.329401+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:43:42.351988+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:43:42.358610+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:54:23.500540+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:54:23.508706+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:54:24.449759+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f7641a"},"request_uri":"http://localhost:8000/_wdt/f7641a","method":"GET"} []
[2020-05-06T00:54:24.472794+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T00:54:24.478421+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T00:54:24.484493+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T00:54:24.505328+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T00:54:24.512725+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:01:11.219818+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:01:11.225328+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:01:12.206240+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:01:12.212203+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:01:12.220793+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:01:12.241603+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6e7065"},"request_uri":"http://localhost:8000/_wdt/6e7065","method":"GET"} []
[2020-05-06T01:01:12.391649+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:01:12.398454+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:01:17.020605+02:00] request.INFO: Matched route "app_user_postinfosuser". {"route":"app_user_postinfosuser","route_parameters":{"_route":"app_user_postinfosuser","_controller":"App\\Controller\\UserController::postInfosUser"},"request_uri":"http://localhost:8000/postInfosUser","method":"POST"} []
[2020-05-06T01:01:17.022070+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:01:17.027639+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:01:17.030001+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\User::setAddress() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\User::setAddress() at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:73)"} []
[2020-05-06T01:01:17.031951+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setAddress" of class "App\Entity\User". Did you mean to call e.g. "getAddresse" or "setAddresse"?" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php line 73 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setAddress\" of class \"App\\Entity\\User\".\nDid you mean to call e.g. \"getAddresse\" or \"setAddresse\"? at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:73)"} []
[2020-05-06T01:02:24.699334+02:00] request.INFO: Matched route "app_user_postinfosuser". {"route":"app_user_postinfosuser","route_parameters":{"_route":"app_user_postinfosuser","_controller":"App\\Controller\\UserController::postInfosUser"},"request_uri":"http://localhost:8000/postInfosUser","method":"POST"} []
[2020-05-06T01:02:24.700049+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:02:24.702198+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:02:24.705489+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\User::setAddress() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\User::setAddress() at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:73)"} []
[2020-05-06T01:02:24.707273+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setAddress" of class "App\Entity\User". Did you mean to call e.g. "getAddresse" or "setAddresse"?" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php line 73 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setAddress\" of class \"App\\Entity\\User\".\nDid you mean to call e.g. \"getAddresse\" or \"setAddresse\"? at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:73)"} []
[2020-05-06T01:03:03.566057+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:03:03.573935+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:03:04.472336+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c5f04c"},"request_uri":"http://localhost:8000/_wdt/c5f04c","method":"GET"} []
[2020-05-06T01:03:04.500674+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:03:04.507801+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:03:04.513577+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:03:04.536421+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:03:04.543075+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:03:05.666607+02:00] request.INFO: Matched route "app_user_postinfosuser". {"route":"app_user_postinfosuser","route_parameters":{"_route":"app_user_postinfosuser","_controller":"App\\Controller\\UserController::postInfosUser"},"request_uri":"http://localhost:8000/postInfosUser","method":"POST"} []
[2020-05-06T01:03:05.667408+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:03:05.674642+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:03:05.676864+02:00] php.CRITICAL: Uncaught Error: Call to undefined method App\Entity\User::setAddress() {"exception":"[object] (Error(code: 0): Call to undefined method App\\Entity\\User::setAddress() at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:73)"} []
[2020-05-06T01:03:05.677848+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\ErrorHandler\Error\UndefinedMethodError: "Attempted to call an undefined method named "setAddress" of class "App\Entity\User". Did you mean to call e.g. "getAddresse" or "setAddresse"?" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php line 73 {"exception":"[object] (Symfony\\Component\\ErrorHandler\\Error\\UndefinedMethodError(code: 0): Attempted to call an undefined method named \"setAddress\" of class \"App\\Entity\\User\".\nDid you mean to call e.g. \"getAddresse\" or \"setAddresse\"? at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:73)"} []
[2020-05-06T01:03:27.844908+02:00] request.INFO: Matched route "app_user_postinfosuser". {"route":"app_user_postinfosuser","route_parameters":{"_route":"app_user_postinfosuser","_controller":"App\\Controller\\UserController::postInfosUser"},"request_uri":"http://localhost:8000/postInfosUser","method":"POST"} []
[2020-05-06T01:03:27.845927+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:03:27.850679+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:04:33.817733+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:04:33.823884+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:04:34.763488+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"19c699"},"request_uri":"http://localhost:8000/_wdt/19c699","method":"GET"} []
[2020-05-06T01:04:34.805431+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:04:34.814636+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:04:34.819352+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:04:34.847644+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:04:34.856416+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:05:32.165350+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:05:32.171715+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:05:33.214263+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8a9858"},"request_uri":"http://localhost:8000/_wdt/8a9858","method":"GET"} []
[2020-05-06T01:05:33.248022+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:05:33.257814+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:05:33.263810+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:05:33.293008+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:05:33.306588+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:06:07.089538+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:06:07.098650+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:06:08.160524+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"910cc3"},"request_uri":"http://localhost:8000/_wdt/910cc3","method":"GET"} []
[2020-05-06T01:06:08.195147+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:06:08.202936+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:06:08.209242+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:06:08.236030+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:06:08.243433+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:06:24.087169+02:00] request.INFO: Matched route "app_user_postinfosuser". {"route":"app_user_postinfosuser","route_parameters":{"_route":"app_user_postinfosuser","_controller":"App\\Controller\\UserController::postInfosUser"},"request_uri":"http://localhost:8000/postInfosUser","method":"POST"} []
[2020-05-06T01:06:24.088827+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:06:24.098677+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:06:30.186572+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:06:30.193872+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:06:31.101099+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dfbe07"},"request_uri":"http://localhost:8000/_wdt/dfbe07","method":"GET"} []
[2020-05-06T01:06:31.132326+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:06:31.140158+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:06:31.149112+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:06:31.182751+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:06:31.192486+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:09:06.272442+02:00] request.INFO: Matched route "app_user_postinfosuser". {"route":"app_user_postinfosuser","route_parameters":{"_route":"app_user_postinfosuser","_controller":"App\\Controller\\UserController::postInfosUser"},"request_uri":"http://localhost:8000/postInfosUser","method":"POST"} []
[2020-05-06T01:09:06.273664+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:09:06.279879+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:09:06.283554+02:00] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: Undefined index: te" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php line 72 {"exception":"[object] (ErrorException(code: 0): Notice: Undefined index: te at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:72)"} []
[2020-05-06T01:09:24.375508+02:00] request.INFO: Matched route "app_user_postinfosuser". {"route":"app_user_postinfosuser","route_parameters":{"_route":"app_user_postinfosuser","_controller":"App\\Controller\\UserController::postInfosUser"},"request_uri":"http://localhost:8000/postInfosUser","method":"POST"} []
[2020-05-06T01:09:24.376329+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:09:24.383965+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:09:35.806661+02:00] request.INFO: Matched route "app_user_postinfosuser". {"route":"app_user_postinfosuser","route_parameters":{"_route":"app_user_postinfosuser","_controller":"App\\Controller\\UserController::postInfosUser"},"request_uri":"http://localhost:8000/postInfosUser","method":"POST"} []
[2020-05-06T01:09:35.808711+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:09:35.818106+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:09:35.820409+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-06T01:09:35.820661+02:00] doctrine.DEBUG: UPDATE user SET addresse = ? WHERE id = ? ["a",2] []
[2020-05-06T01:09:35.824383+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-06T01:12:20.325499+02:00] request.INFO: Matched route "app_user_postinfosuser". {"route":"app_user_postinfosuser","route_parameters":{"_route":"app_user_postinfosuser","_controller":"App\\Controller\\UserController::postInfosUser"},"request_uri":"http://localhost:8000/postInfosUser","method":"POST"} []
[2020-05-06T01:12:20.326318+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:12:20.331524+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:14:15.993117+02:00] request.INFO: Matched route "app_user_postinfosuser". {"route":"app_user_postinfosuser","route_parameters":{"_route":"app_user_postinfosuser","_controller":"App\\Controller\\UserController::postInfosUser"},"request_uri":"http://localhost:8000/postInfosUser","method":"POST"} []
[2020-05-06T01:14:15.994119+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:14:16.025423+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:14:17.388190+02:00] request.INFO: Matched route "app_user_postinfosuser". {"route":"app_user_postinfosuser","route_parameters":{"_route":"app_user_postinfosuser","_controller":"App\\Controller\\UserController::postInfosUser"},"request_uri":"http://localhost:8000/postInfosUser","method":"GET"} []
[2020-05-06T01:14:17.398455+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email IS NULL LIMIT 1 [] []
[2020-05-06T01:14:17.406614+02:00] php.CRITICAL: Uncaught Error: Call to a member function getMedecin() on null {"exception":"[object] (Error(code: 0): Call to a member function getMedecin() on null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:68)"} []
[2020-05-06T01:14:17.407570+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getMedecin() on null" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php line 68 {"exception":"[object] (Error(code: 0): Call to a member function getMedecin() on null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:68)"} []
[2020-05-06T01:14:17.427184+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:14:17.925126+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"63c3c0"},"request_uri":"http://localhost:8000/_wdt/63c3c0","method":"GET"} []
[2020-05-06T01:14:18.109120+02:00] request.INFO: Matched route "app_user_postinfosuser". {"route":"app_user_postinfosuser","route_parameters":{"_route":"app_user_postinfosuser","_controller":"App\\Controller\\UserController::postInfosUser"},"request_uri":"http://localhost:8000/postInfosUser","method":"GET"} []
[2020-05-06T01:14:18.121162+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email IS NULL LIMIT 1 [] []
[2020-05-06T01:14:18.124474+02:00] php.CRITICAL: Uncaught Error: Call to a member function getMedecin() on null {"exception":"[object] (Error(code: 0): Call to a member function getMedecin() on null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:68)"} []
[2020-05-06T01:14:18.125821+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getMedecin() on null" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php line 68 {"exception":"[object] (Error(code: 0): Call to a member function getMedecin() on null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:68)"} []
[2020-05-06T01:14:18.138024+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:14:23.985192+02:00] request.INFO: Matched route "app_user_postinfosuser". {"route":"app_user_postinfosuser","route_parameters":{"_route":"app_user_postinfosuser","_controller":"App\\Controller\\UserController::postInfosUser"},"request_uri":"http://localhost:8000/postInfosUser","method":"GET"} []
[2020-05-06T01:14:23.993747+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email IS NULL LIMIT 1 [] []
[2020-05-06T01:14:23.995263+02:00] php.CRITICAL: Uncaught Error: Call to a member function getMedecin() on null {"exception":"[object] (Error(code: 0): Call to a member function getMedecin() on null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:68)"} []
[2020-05-06T01:14:23.997156+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getMedecin() on null" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php line 68 {"exception":"[object] (Error(code: 0): Call to a member function getMedecin() on null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:68)"} []
[2020-05-06T01:14:24.018316+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:14:24.723512+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"36bf3b"},"request_uri":"http://localhost:8000/_wdt/36bf3b","method":"GET"} []
[2020-05-06T01:14:24.848019+02:00] request.INFO: Matched route "app_user_postinfosuser". {"route":"app_user_postinfosuser","route_parameters":{"_route":"app_user_postinfosuser","_controller":"App\\Controller\\UserController::postInfosUser"},"request_uri":"http://localhost:8000/postInfosUser","method":"GET"} []
[2020-05-06T01:14:24.857970+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email IS NULL LIMIT 1 [] []
[2020-05-06T01:14:24.859961+02:00] php.CRITICAL: Uncaught Error: Call to a member function getMedecin() on null {"exception":"[object] (Error(code: 0): Call to a member function getMedecin() on null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:68)"} []
[2020-05-06T01:14:24.861835+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getMedecin() on null" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php line 68 {"exception":"[object] (Error(code: 0): Call to a member function getMedecin() on null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:68)"} []
[2020-05-06T01:14:24.881937+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:15:25.675128+02:00] request.INFO: Matched route "app_user_postinfosuser". {"route":"app_user_postinfosuser","route_parameters":{"_route":"app_user_postinfosuser","_controller":"App\\Controller\\UserController::postInfosUser"},"request_uri":"http://localhost:8000/postInfosUser","method":"POST"} []
[2020-05-06T01:15:25.676037+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:15:25.678038+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:15:30.769702+02:00] request.INFO: Matched route "app_user_postinfosuser". {"route":"app_user_postinfosuser","route_parameters":{"_route":"app_user_postinfosuser","_controller":"App\\Controller\\UserController::postInfosUser"},"request_uri":"http://localhost:8000/postInfosUser","method":"GET"} []
[2020-05-06T01:15:30.780297+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email IS NULL LIMIT 1 [] []
[2020-05-06T01:15:30.782294+02:00] php.CRITICAL: Uncaught Error: Call to a member function getMedecin() on null {"exception":"[object] (Error(code: 0): Call to a member function getMedecin() on null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:68)"} []
[2020-05-06T01:15:30.783811+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getMedecin() on null" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php line 68 {"exception":"[object] (Error(code: 0): Call to a member function getMedecin() on null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:68)"} []
[2020-05-06T01:15:30.797901+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:15:31.042696+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8fbead"},"request_uri":"http://localhost:8000/_wdt/8fbead","method":"GET"} []
[2020-05-06T01:15:31.081520+02:00] request.INFO: Matched route "app_user_postinfosuser". {"route":"app_user_postinfosuser","route_parameters":{"_route":"app_user_postinfosuser","_controller":"App\\Controller\\UserController::postInfosUser"},"request_uri":"http://localhost:8000/postInfosUser","method":"GET"} []
[2020-05-06T01:15:31.085692+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email IS NULL LIMIT 1 [] []
[2020-05-06T01:15:31.086856+02:00] php.CRITICAL: Uncaught Error: Call to a member function getMedecin() on null {"exception":"[object] (Error(code: 0): Call to a member function getMedecin() on null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:68)"} []
[2020-05-06T01:15:31.088425+02:00] request.CRITICAL: Uncaught PHP Exception Error: "Call to a member function getMedecin() on null" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php line 68 {"exception":"[object] (Error(code: 0): Call to a member function getMedecin() on null at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/Controller/UserController.php:68)"} []
[2020-05-06T01:15:31.100458+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:15:51.423703+02:00] request.INFO: Matched route "app_user_postinfosuser". {"route":"app_user_postinfosuser","route_parameters":{"_route":"app_user_postinfosuser","_controller":"App\\Controller\\UserController::postInfosUser"},"request_uri":"http://localhost:8000/postInfosUser","method":"POST"} []
[2020-05-06T01:15:51.425282+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:15:51.432265+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:22:15.613879+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-05-06T01:22:15.614633+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:22:15.614699+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:22:15.614741+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:22:15.614974+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:22:15.926423+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6182b0"},"request_uri":"http://localhost:8000/_wdt/6182b0","method":"GET"} []
[2020-05-06T01:22:16.269575+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-05-06T01:22:16.270138+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:22:16.270194+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:22:16.270228+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:22:16.270386+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:27:49.214986+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:27:49.220995+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:27:50.304494+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d0d0a7"},"request_uri":"http://localhost:8000/_wdt/d0d0a7","method":"GET"} []
[2020-05-06T01:27:50.584609+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:27:50.588591+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:29:34.491088+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:29:34.501098+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:29:35.542938+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"54d701"},"request_uri":"http://localhost:8000/_wdt/54d701","method":"GET"} []
[2020-05-06T01:29:35.567740+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:29:35.571880+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:29:44.938912+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:29:44.944935+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:29:45.780741+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:29:45.784442+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:29:45.799366+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9379a5"},"request_uri":"http://localhost:8000/_wdt/9379a5","method":"GET"} []
[2020-05-06T01:29:59.824198+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:29:59.833138+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:30:00.691389+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b9c1a3"},"request_uri":"http://localhost:8000/_wdt/b9c1a3","method":"GET"} []
[2020-05-06T01:30:00.781273+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:30:00.787523+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:30:00.899011+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:30:00.916610+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:30:00.943161+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:30:32.773935+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:30:32.780425+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:30:33.702562+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"10e827"},"request_uri":"http://localhost:8000/_wdt/10e827","method":"GET"} []
[2020-05-06T01:30:33.725377+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:30:33.732141+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:30:33.746133+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:30:34.438610+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:30:34.445308+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:31:09.987408+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:31:09.994886+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:31:10.875472+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4ab833"},"request_uri":"http://localhost:8000/_wdt/4ab833","method":"GET"} []
[2020-05-06T01:31:10.904896+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:31:10.912786+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:31:10.921957+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:31:10.954900+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:31:10.962447+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:31:12.376918+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"PUT"} []
[2020-05-06T01:31:12.378560+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:31:12.378660+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:31:12.378755+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:31:12.381900+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:31:12.385885+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:31:12.388630+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:31:12.389057+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:31:12.389132+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:31:12.393633+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-05-06T01:31:12.430572+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:31:55.196630+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:31:55.204007+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:31:56.118058+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:31:56.125267+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:31:56.132013+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:31:56.161906+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:31:56.168901+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:31:56.193499+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d8bddc"},"request_uri":"http://localhost:8000/_wdt/d8bddc","method":"GET"} []
[2020-05-06T01:31:58.527008+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"PUT"} []
[2020-05-06T01:31:58.528352+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:31:58.528443+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:31:58.528526+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:31:58.529598+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:31:58.542371+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:31:58.545893+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:31:58.546616+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:31:58.546704+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:31:58.550729+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-05-06T01:31:58.561212+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:32:25.709353+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:32:25.717174+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:32:26.668252+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f22060"},"request_uri":"http://localhost:8000/_wdt/f22060","method":"GET"} []
[2020-05-06T01:32:26.699695+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:32:26.707408+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:32:26.714488+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:32:26.742929+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:32:26.750851+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:32:27.361174+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"PUT"} []
[2020-05-06T01:32:27.362220+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:32:27.362326+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:32:27.362429+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:32:27.363419+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:32:27.368256+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:32:27.374688+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:32:27.375115+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:32:27.375205+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:32:27.378932+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-05-06T01:32:27.391358+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:32:38.798179+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:32:38.805778+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:32:39.785615+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3fe8a5"},"request_uri":"http://localhost:8000/_wdt/3fe8a5","method":"GET"} []
[2020-05-06T01:32:39.817456+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:32:39.825074+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:32:39.832374+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:32:39.859045+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:32:39.866960+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:32:40.512471+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"PUT"} []
[2020-05-06T01:32:40.513902+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:32:40.514035+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:32:40.514183+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:32:40.515392+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:32:40.519397+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:32:40.522110+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:32:40.522630+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:32:40.522740+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:32:40.525221+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-05-06T01:32:40.530642+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:39:04.044698+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"PUT"} []
[2020-05-06T01:39:04.045402+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:39:04.045459+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:04.045521+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:04.046250+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:04.046823+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:39:04.049206+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:04.049551+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:04.049603+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:04.051179+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-05-06T01:39:04.066586+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:39:11.573351+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"PUT"} []
[2020-05-06T01:39:11.575257+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:39:11.575367+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:11.575448+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:11.576615+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:11.581997+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:39:11.585383+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:11.585849+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:11.585913+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:11.588653+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-05-06T01:39:11.599210+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:39:13.488467+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"PUT"} []
[2020-05-06T01:39:13.490413+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:39:13.490586+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:13.490772+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:13.491968+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:13.497954+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:39:13.533445+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:13.535670+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:13.536143+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:13.551967+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-05-06T01:39:13.582379+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:39:41.935713+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"PUT"} []
[2020-05-06T01:39:41.936719+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:39:41.936797+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:41.936856+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:41.937619+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:41.943270+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:39:41.947929+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:41.948273+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:41.948345+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:41.950569+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-05-06T01:39:41.955782+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimonthotmail.com"] []
[2020-05-06T01:39:49.046496+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"PUT"} []
[2020-05-06T01:39:49.047819+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:39:49.047920+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:49.048006+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:49.048854+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:49.052236+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:39:49.054334+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:49.054625+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:49.054668+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:39:49.058446+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-05-06T01:39:49.064412+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail"] []
[2020-05-06T01:40:54.909473+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"PUT"} []
[2020-05-06T01:40:54.911471+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:40:54.911541+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:40:54.911596+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:40:54.912279+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:40:54.916400+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:40:54.919110+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:40:54.919432+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:40:54.919475+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:40:54.921286+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-05-06T01:40:54.929412+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.fr"] []
[2020-05-06T01:40:54.930193+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-06T01:40:54.930428+02:00] doctrine.DEBUG: UPDATE user SET email = ? WHERE id = ? ["simon.mohimont@hotmail.fr",2] []
[2020-05-06T01:40:54.941900+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-06T01:40:54.950727+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? [2] []
[2020-05-06T01:40:54.962508+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:40:54.964185+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:40:54.964956+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:40:55.032581+02:00] request.INFO: Matched route "api_medecins_put_item". {"route":"api_medecins_put_item","route_parameters":{"_route":"api_medecins_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Medecin","_api_item_operation_name":"put","id":"1"},"request_uri":"http://localhost:8000/api/medecins/1","method":"PUT"} []
[2020-05-06T01:40:55.033321+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:40:55.033385+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:40:55.033433+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:40:55.034048+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:40:55.039030+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:40:55.042724+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\UserNotFoundException(code: 0):  at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:158)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:40:55.043349+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:10.403096+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:41:10.451872+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:41:11.416050+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-05-06T01:41:11.420170+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:41:11.421514+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.com\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-05-06T01:41:17.634343+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-05-06T01:41:17.643238+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.fr"] []
[2020-05-06T01:41:17.805251+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.fr"} []
[2020-05-06T01:41:17.889526+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:41:17.894784+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:41:17.909418+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.fr","method":"GET"} []
[2020-05-06T01:41:17.912044+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:41:17.912108+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:17.912154+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:17.912691+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:17.913505+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.fr"] []
[2020-05-06T01:41:17.915446+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.fr\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:17.915680+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:17.915718+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:17.926765+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.fr"] []
[2020-05-06T01:41:17.944845+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:41:17.945881+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:41:17.946429+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:41:17.947483+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.fr"] []
[2020-05-06T01:41:17.986619+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-06T01:41:17.987208+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:41:17.987252+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:17.987296+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:17.987772+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:17.991475+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.fr"] []
[2020-05-06T01:41:17.995132+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.fr\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:17.995581+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:17.995674+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:18.014393+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-06T01:41:18.016503+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76,77]] []
[2020-05-06T01:41:18.028377+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-06T01:41:19.672212+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:41:19.678936+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:41:19.696124+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:41:19.701954+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:41:19.707577+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:41:26.689442+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"PUT"} []
[2020-05-06T01:41:26.691687+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:41:26.691838+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:26.692001+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:26.693313+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:26.699304+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.fr"] []
[2020-05-06T01:41:26.702888+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.fr\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:26.703456+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:26.703543+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:26.706887+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-05-06T01:41:26.715200+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:41:26.715965+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-06T01:41:26.716120+02:00] doctrine.DEBUG: UPDATE user SET email = ? WHERE id = ? ["simon.mohimont@hotmail.com",2] []
[2020-05-06T01:41:26.716400+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-06T01:41:26.723814+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? [2] []
[2020-05-06T01:41:26.726395+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:41:26.727897+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:41:26.728616+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:41:26.778598+02:00] request.INFO: Matched route "api_medecins_put_item". {"route":"api_medecins_put_item","route_parameters":{"_route":"api_medecins_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Medecin","_api_item_operation_name":"put","id":"1"},"request_uri":"http://localhost:8000/api/medecins/1","method":"PUT"} []
[2020-05-06T01:41:26.779364+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:41:26.779438+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:26.779519+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:26.780177+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:26.782874+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.fr"] []
[2020-05-06T01:41:26.784174+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\UserNotFoundException(code: 0):  at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:158)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:41:26.784472+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:02.568586+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"PUT"} []
[2020-05-06T01:42:02.569291+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:42:02.569351+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:02.569402+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:02.570134+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:02.573228+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.fr"] []
[2020-05-06T01:42:02.574367+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\UserNotFoundException(code: 0):  at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:158)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:02.574672+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:21.059931+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:42:21.064902+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:42:24.699238+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-05-06T01:42:24.706220+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.fr"] []
[2020-05-06T01:42:24.707946+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.fr\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-05-06T01:42:31.475354+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-05-06T01:42:31.484914+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:42:31.658495+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-05-06T01:42:31.758777+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-05-06T01:42:31.763425+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:42:31.763503+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:31.763562+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:31.764299+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:31.765420+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:42:31.768024+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:31.768464+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:31.768550+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:31.827688+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.email = ? ORDER BY u0_.id ASC LIMIT 30 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:42:31.837222+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:42:31.837677+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:42:31.837999+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:42:31.839336+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:42:31.868176+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:42:31.874914+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:42:31.898926+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-05-06T01:42:31.899554+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:42:31.899600+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:31.899642+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:31.900115+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:31.902601+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:42:31.904487+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:31.904726+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:31.904763+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:31.926755+02:00] doctrine.DEBUG: SELECT DISTINCT c0_.id AS id_0, c0_.id AS id_1 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-05-06T01:42:31.927705+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.start AS start_3, c0_.end AS end_4, c0_.room AS room_5, s1_.id AS id_6, s1_.description AS description_7, p2_.id AS id_8, s1_.user_id AS user_id_9, s1_.conference_id AS conference_id_10, p2_.user_id AS user_id_11, p2_.conference_id AS conference_id_12 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id WHERE c0_.id IN (?) ORDER BY c0_.id ASC [[76,77]] []
[2020-05-06T01:42:31.934920+02:00] doctrine.DEBUG: SELECT count(DISTINCT c0_.id) AS sclr_0 FROM conference c0_ LEFT JOIN speaker s1_ ON c0_.id = s1_.conference_id LEFT JOIN participant p2_ ON c0_.id = p2_.conference_id [] []
[2020-05-06T01:42:41.191330+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:42:41.201543+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:42:41.219705+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:42:41.226628+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:42:41.256964+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:42:43.710324+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"PUT"} []
[2020-05-06T01:42:43.711455+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:42:43.711548+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:43.711656+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:43.712589+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:43.716836+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:42:43.722437+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:43.722728+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:43.722770+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:43.726367+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-05-06T01:42:43.748780+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:42:43.749727+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? [2] []
[2020-05-06T01:42:43.751396+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:42:43.752369+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:42:43.752798+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:42:43.802153+02:00] request.INFO: Matched route "api_medecins_put_item". {"route":"api_medecins_put_item","route_parameters":{"_route":"api_medecins_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Medecin","_api_item_operation_name":"put","id":"1"},"request_uri":"http://localhost:8000/api/medecins/1","method":"PUT"} []
[2020-05-06T01:42:43.803034+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:42:43.803122+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:43.803198+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:43.804043+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:43.807252+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:42:43.811657+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:43.812050+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:43.812115+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:42:43.813633+02:00] doctrine.DEBUG: SELECT m0_.id AS id_0, m0_.inami_number AS inami_number_1, m0_.speciality AS speciality_2, m0_.user_id AS user_id_3 FROM medecin m0_ WHERE m0_.id = ? [1] []
[2020-05-06T01:42:43.827529+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-06T01:42:43.828066+02:00] doctrine.DEBUG: UPDATE medecin SET speciality = ? WHERE id = ? ["",1] []
[2020-05-06T01:42:43.828903+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-06T01:42:43.843140+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.id = ? [1] []
[2020-05-06T01:43:03.013774+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"PUT"} []
[2020-05-06T01:43:03.015317+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:43:03.015417+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:43:03.015507+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:43:03.016685+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:43:03.022818+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:43:03.028666+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:43:03.029458+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:43:03.029557+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:43:03.032481+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-05-06T01:43:03.038816+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:43:03.039690+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? [2] []
[2020-05-06T01:43:03.043015+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:43:03.044863+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:43:03.045565+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:43:03.088618+02:00] request.INFO: Matched route "api_medecins_put_item". {"route":"api_medecins_put_item","route_parameters":{"_route":"api_medecins_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Medecin","_api_item_operation_name":"put","id":"1"},"request_uri":"http://localhost:8000/api/medecins/1","method":"PUT"} []
[2020-05-06T01:43:03.089251+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:43:03.089309+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:43:03.089356+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:43:03.089877+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:43:03.093290+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:43:03.096017+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:43:03.096372+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:43:03.096431+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:43:03.098518+02:00] doctrine.DEBUG: SELECT m0_.id AS id_0, m0_.inami_number AS inami_number_1, m0_.speciality AS speciality_2, m0_.user_id AS user_id_3 FROM medecin m0_ WHERE m0_.id = ? [1] []
[2020-05-06T01:43:03.101892+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-06T01:43:03.102108+02:00] doctrine.DEBUG: UPDATE medecin SET speciality = ? WHERE id = ? ["chirurgien",1] []
[2020-05-06T01:43:03.102415+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-06T01:43:03.110847+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.id = ? [1] []
[2020-05-06T01:44:57.432660+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:44:57.440942+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:44:58.546476+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4fbd56"},"request_uri":"http://localhost:8000/_wdt/4fbd56","method":"GET"} []
[2020-05-06T01:44:58.617630+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:44:58.626289+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:44:58.632468+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:44:58.656902+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:44:58.662867+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:45:05.212498+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"PUT"} []
[2020-05-06T01:45:05.214194+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:45:05.214317+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:05.214412+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:05.215472+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:05.221906+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:45:05.224732+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:05.225048+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:05.225156+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:05.229710+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-05-06T01:45:05.239803+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:45:05.240910+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-06T01:45:05.241117+02:00] doctrine.DEBUG: UPDATE user SET telephone = ?, addresse = ? WHERE id = ? ["0470037469","1360",2] []
[2020-05-06T01:45:05.241443+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-06T01:45:05.248757+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? [2] []
[2020-05-06T01:45:05.251507+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:45:05.252958+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:45:05.253507+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:45:05.308996+02:00] request.INFO: Matched route "api_medecins_put_item". {"route":"api_medecins_put_item","route_parameters":{"_route":"api_medecins_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Medecin","_api_item_operation_name":"put","id":"1"},"request_uri":"http://localhost:8000/api/medecins/1","method":"PUT"} []
[2020-05-06T01:45:05.310665+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:45:05.310807+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:05.310951+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:05.311984+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:05.317208+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:45:05.320070+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:05.320705+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:05.320803+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:05.323571+02:00] doctrine.DEBUG: SELECT m0_.id AS id_0, m0_.inami_number AS inami_number_1, m0_.speciality AS speciality_2, m0_.user_id AS user_id_3 FROM medecin m0_ WHERE m0_.id = ? [1] []
[2020-05-06T01:45:05.328735+02:00] request.CRITICAL: Uncaught PHP Exception ApiPlatform\Core\Exception\InvalidArgumentException: "The type of the "inamiNumber" attribute must be "int", "string" given." at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php line 365 {"exception":"[object] (ApiPlatform\\Core\\Exception\\InvalidArgumentException(code: 0): The type of the \"inamiNumber\" attribute must be \"int\", \"string\" given. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/api-platform/core/src/Serializer/AbstractItemNormalizer.php:365)"} []
[2020-05-06T01:45:34.790246+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-06T01:45:34.793910+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T01:45:34.803988+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T01:45:34.804720+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T01:45:34.807183+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-05-06T01:45:34.809688+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-06T01:45:34.810127+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'admin' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T01:45:34.811015+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'admin' */ WHERE k.table_name = 'admin' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T01:45:34.812080+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'admin' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T01:45:34.812641+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'admin' [] []
[2020-05-06T01:45:34.813555+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'conference' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T01:45:34.814354+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'conference' */ WHERE k.table_name = 'conference' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T01:45:34.814790+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'conference' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T01:45:34.815157+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'conference' [] []
[2020-05-06T01:45:34.815452+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'medecin' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T01:45:34.815926+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'medecin' */ WHERE k.table_name = 'medecin' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T01:45:34.816291+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'medecin' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T01:45:34.816612+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'medecin' [] []
[2020-05-06T01:45:34.816911+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T01:45:34.817353+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T01:45:34.817665+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T01:45:34.817871+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-05-06T01:45:34.818057+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'participant' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T01:45:34.818480+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'participant' */ WHERE k.table_name = 'participant' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T01:45:34.818919+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'participant' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T01:45:34.819266+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'participant' [] []
[2020-05-06T01:45:34.819499+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'speaker' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T01:45:34.819935+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'speaker' */ WHERE k.table_name = 'speaker' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T01:45:34.820311+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'speaker' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T01:45:34.820663+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'speaker' [] []
[2020-05-06T01:45:34.820988+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T01:45:34.821576+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T01:45:34.821864+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T01:45:34.822138+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-05-06T01:45:38.170170+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-06T01:45:38.171698+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T01:45:38.176594+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T01:45:38.177118+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T01:45:38.179052+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-05-06T01:45:38.180078+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-05-06T01:45:39.737535+02:00] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2020-05-06T01:45:41.177558+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-05-06T01:45:41.179001+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-05-06T01:45:41.239190+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-05-06T01:45:41.240552+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-05-06T01:45:41.245459+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-05-06T01:45:41.247249+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-05-06T01:45:42.490247+02:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355', '20200317201021', '20200317201232', '20200318120105', '20200331213036', '20200417151230', '20200427220257', '20200428160443', '20200505221903', '20200505234534') ORDER BY version DESC LIMIT 1 [] []
[2020-05-06T01:45:42.494555+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-05-06T01:45:42.502635+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-06T01:45:42.542097+02:00] doctrine.DEBUG: ALTER TABLE medecin CHANGE inami_number inami_number VARCHAR(255) DEFAULT NULL [] []
[2020-05-06T01:45:42.705268+02:00] doctrine.DEBUG: INSERT INTO migration_versions (version, executed_at) VALUES (?, ?) ["20200505234534","2020-05-05 23:45:42"] []
[2020-05-06T01:45:42.721558+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-06T01:45:47.001082+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"PUT"} []
[2020-05-06T01:45:47.002163+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:45:47.002249+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:47.002376+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:47.003362+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:47.004112+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:45:47.006727+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:47.007157+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:47.007215+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:47.009399+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-05-06T01:45:47.028479+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:45:47.029737+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? [2] []
[2020-05-06T01:45:47.035174+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:45:47.035991+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:45:47.036687+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.conference_id AS conference_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-05-06T01:45:47.107913+02:00] request.INFO: Matched route "api_medecins_put_item". {"route":"api_medecins_put_item","route_parameters":{"_route":"api_medecins_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\Medecin","_api_item_operation_name":"put","id":"1"},"request_uri":"http://localhost:8000/api/medecins/1","method":"PUT"} []
[2020-05-06T01:45:47.108631+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T01:45:47.108698+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:47.108760+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:47.109502+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:47.117320+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-05-06T01:45:47.120539+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:47.120880+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:47.120944+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T01:45:47.122881+02:00] doctrine.DEBUG: SELECT m0_.id AS id_0, m0_.inami_number AS inami_number_1, m0_.speciality AS speciality_2, m0_.user_id AS user_id_3 FROM medecin m0_ WHERE m0_.id = ? [1] []
[2020-05-06T01:45:47.136718+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-05-06T01:45:47.137088+02:00] doctrine.DEBUG: UPDATE medecin SET inami_number = ? WHERE id = ? [1213454,1] []
[2020-05-06T01:45:47.137955+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-05-06T01:45:47.148953+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.id = ? [1] []
[2020-05-06T01:46:19.133726+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:46:19.139558+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:46:20.372368+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"90bb19"},"request_uri":"http://localhost:8000/_wdt/90bb19","method":"GET"} []
[2020-05-06T01:46:20.396588+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:46:20.408336+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:46:20.415760+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:46:23.373344+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:46:23.382030+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:46:25.765635+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:46:25.777990+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:46:26.766766+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9204af"},"request_uri":"http://localhost:8000/_wdt/9204af","method":"GET"} []
[2020-05-06T01:46:26.793037+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:46:26.797407+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:46:26.817229+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:46:26.827295+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:46:26.833814+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:46:50.000298+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:46:50.005394+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:46:50.927077+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fdd1b0"},"request_uri":"http://localhost:8000/_wdt/fdd1b0","method":"GET"} []
[2020-05-06T01:46:50.953583+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:46:50.960714+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:46:50.966868+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:46:51.001374+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:46:51.006586+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:47:14.462004+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:47:14.468182+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:47:15.434779+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"deb445"},"request_uri":"http://localhost:8000/_wdt/deb445","method":"GET"} []
[2020-05-06T01:47:15.470874+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:47:15.480635+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:47:15.488676+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:47:15.514754+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:47:15.523699+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:48:05.924862+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:48:05.934467+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:48:07.324498+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8c0ff8"},"request_uri":"http://localhost:8000/_wdt/8c0ff8","method":"GET"} []
[2020-05-06T01:48:07.345195+02:00] request.INFO: Matched route "app_user_getinfosuser". {"route":"app_user_getinfosuser","route_parameters":{"_route":"app_user_getinfosuser","_controller":"App\\Controller\\UserController::getInfosUser","id":"2"},"request_uri":"http://localhost:8000/getInfosUser/2","method":"GET"} []
[2020-05-06T01:48:07.354766+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? LIMIT 1 [2] []
[2020-05-06T01:48:07.359890+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T01:48:07.382571+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-05-06T01:48:07.389380+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T02:03:57.806686+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-05-06T02:03:57.807819+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T02:03:57.807898+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T02:03:57.807944+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T02:03:57.808174+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-05-06T02:03:58.395386+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"69146b"},"request_uri":"http://localhost:8000/_wdt/69146b","method":"GET"} []
[2020-05-06T02:03:58.895143+02:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-05-06T02:03:58.895672+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-05-06T02:03:58.895725+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T02:03:58.895760+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-05-06T02:03:58.895910+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
