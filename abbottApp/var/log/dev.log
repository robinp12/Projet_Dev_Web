[2020-03-09T22:26:07.337136+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /"" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2020-03-09T22:26:08.148317+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8f71d2"},"request_uri":"http://127.0.0.1:8000/_wdt/8f71d2","method":"GET"} []
[2020-03-09T22:26:08.754383+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /"" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2020-03-09T22:26:09.148507+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"44561a"},"request_uri":"http://127.0.0.1:8000/_wdt/44561a","method":"GET"} []
[2020-03-09T22:33:27.877471+01:00] console.ERROR: Error thrown while running command "make:entity Conference". Message: "Aborted." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\RuntimeException(code: 0): Aborted. at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/console/Helper/QuestionHelper.php:137)","command":"make:entity Conference","message":"Aborted."} []
[2020-03-09T22:33:27.886831+01:00] console.DEBUG: Command "make:entity Conference" exited with code "1" {"command":"make:entity Conference","code":1} []
[2020-03-09T22:33:55.650786+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-09T22:33:55.657562+01:00] doctrine.DEBUG: CREATE TABLE migration_versions (version VARCHAR(14) NOT NULL, executed_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-03-09T22:33:55.739197+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-09T22:33:55.741088+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-09T22:33:55.744599+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-09T22:33:55.747689+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-09T22:33:55.749695+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-09T22:34:06.095851+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-09T22:34:06.097136+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-09T22:34:06.101751+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-09T22:34:06.102247+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-09T22:34:06.103945+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-09T22:34:06.104734+01:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-09T22:34:07.593385+01:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355') ORDER BY version DESC LIMIT 1 [] []
[2020-03-09T22:34:07.597649+01:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-09T22:34:07.604858+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-09T22:34:07.648538+01:00] doctrine.DEBUG: CREATE TABLE conference (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, description LONGTEXT DEFAULT NULL, hour_start TIME NOT NULL, hour_end TIME DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-03-09T22:34:07.735863+01:00] doctrine.DEBUG: INSERT INTO migration_versions (version, executed_at) VALUES (?, ?) ["20200309213355","2020-03-09 21:34:07"] []
[2020-03-09T22:34:07.748362+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-09T22:39:45.602706+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2020-03-09T22:39:45.634030+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T22:39:46.507464+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3d694b"},"request_uri":"http://127.0.0.1:8000/_wdt/3d694b","method":"GET"} []
[2020-03-09T22:45:19.866422+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/conferences","method":"GET"} []
[2020-03-09T22:45:19.909059+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-09T22:45:19.913453+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-09T22:45:19.916990+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T22:48:55.239342+01:00] request.INFO: Matched route "api_conferences_post_collection". {"route":"api_conferences_post_collection","route_parameters":{"_route":"api_conferences_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"post"},"request_uri":"http://127.0.0.1:8000/api/conferences?description=description%20test1&hourStart=2020-03-09T21%3A42%3A40&name_=test1","method":"POST"} []
[2020-03-09T22:48:55.240281+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T22:48:55.242296+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\UnsupportedMediaTypeHttpException: "The content-type "" is not supported. Supported MIME types are "application/ld+json", "application/json", "text/html"." at /home/simon/Bureau/devWeb/abbottApp/vendor/api-platform/core/src/EventListener/DeserializeListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\UnsupportedMediaTypeHttpException(code: 0): The content-type \"\" is not supported. Supported MIME types are \"application/ld+json\", \"application/json\", \"text/html\". at /home/simon/Bureau/devWeb/abbottApp/vendor/api-platform/core/src/EventListener/DeserializeListener.php:135)"} []
[2020-03-09T22:50:17.125564+01:00] request.INFO: Matched route "api_conferences_post_collection". {"route":"api_conferences_post_collection","route_parameters":{"_route":"api_conferences_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"post"},"request_uri":"http://127.0.0.1:8000/api/conferences?description=description%20test1&hourStart=2020-03-09T21%3A42%3A40.799Z&name_=test1","method":"POST"} []
[2020-03-09T22:50:17.126913+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T22:50:17.128617+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\UnsupportedMediaTypeHttpException: "The content-type "" is not supported. Supported MIME types are "application/ld+json", "application/json", "text/html"." at /home/simon/Bureau/devWeb/abbottApp/vendor/api-platform/core/src/EventListener/DeserializeListener.php line 135 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\UnsupportedMediaTypeHttpException(code: 0): The content-type \"\" is not supported. Supported MIME types are \"application/ld+json\", \"application/json\", \"text/html\". at /home/simon/Bureau/devWeb/abbottApp/vendor/api-platform/core/src/EventListener/DeserializeListener.php:135)"} []
[2020-03-09T22:59:57.789289+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-09T22:59:57.831646+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-09T22:59:57.894995+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-09T23:00:51.429179+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-09T23:00:51.464220+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-09T23:00:51.479973+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Loiseau-les-Bains","2":"Ad nobis nobis et nihil nu [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.480322+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Tanguy","2":"Non magnam voluptatibus es [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.480518+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Wagner","2":"Suscipit cupiditate volupt [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.480859+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Techer","2":"Et possimus praesentium qu [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.481014+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Boyer-la-Forêt","2":"Autem dolorum in facere vo [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.481162+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Huetnec","2":"Doloribus aliquam omnis ap [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.481300+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Carre","2":"Iste ut assumenda blanditi [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.481434+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Hernandez","2":"Tempora nostrum facilis eo [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.481608+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Hamel-la-Forêt","2":"Ut consequuntur quia elige [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.481811+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Robindan","2":"Optio corporis voluptatem  [...]","3":"2020-03-09T23:00:51+01:00","4":null} []
[2020-03-09T23:00:51.482369+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-09T23:01:25.136147+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/conferences","method":"GET"} []
[2020-03-09T23:01:25.182949+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-09T23:01:25.189064+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-09T23:01:25.191502+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:14:39.823586+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:14:39.853224+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:14:39.942314+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d0846c"},"request_uri":"http://127.0.0.1:8000/_wdt/d0846c","method":"GET"} []
[2020-03-09T23:15:36.333889+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:15:36.343791+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:15:36.400933+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"911bbd"},"request_uri":"http://127.0.0.1:8000/_wdt/911bbd","method":"GET"} []
[2020-03-09T23:16:16.746023+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:16:16.756587+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:16:16.814835+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dfd589"},"request_uri":"http://127.0.0.1:8000/_wdt/dfd589","method":"GET"} []
[2020-03-09T23:16:17.877543+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:16:17.884045+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:16:17.937314+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"084fef"},"request_uri":"http://127.0.0.1:8000/_wdt/084fef","method":"GET"} []
[2020-03-09T23:16:40.431028+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:16:40.440013+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:16:40.498647+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"199580"},"request_uri":"http://127.0.0.1:8000/_wdt/199580","method":"GET"} []
[2020-03-09T23:17:02.051070+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:17:02.056856+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:17:02.105251+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"50c912"},"request_uri":"http://127.0.0.1:8000/_wdt/50c912","method":"GET"} []
[2020-03-09T23:19:16.377140+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:19:16.385039+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:19:16.436284+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /build/app.css" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /build/app.css\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/build/app.css/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-09T23:19:16.499068+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8d2c94"},"request_uri":"http://127.0.0.1:8000/_wdt/8d2c94","method":"GET"} []
[2020-03-09T23:20:22.013059+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:20:22.018049+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:20:22.084249+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"13ab14"},"request_uri":"http://127.0.0.1:8000/_wdt/13ab14","method":"GET"} []
[2020-03-09T23:24:52.333459+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:24:52.343378+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:24:52.411928+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ce8982"},"request_uri":"http://127.0.0.1:8000/_wdt/ce8982","method":"GET"} []
[2020-03-09T23:24:58.361820+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:24:58.367247+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:24:58.456156+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4befa4"},"request_uri":"http://127.0.0.1:8000/_wdt/4befa4","method":"GET"} []
[2020-03-09T23:26:36.766847+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-09T23:26:36.771377+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:26:36.879403+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d5d378"},"request_uri":"http://localhost:8000/_wdt/d5d378","method":"GET"} []
[2020-03-09T23:26:36.945825+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://localhost:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://localhost:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-09T23:27:28.657583+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-09T23:27:28.661785+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:27:28.753351+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"41d42d"},"request_uri":"http://localhost:8000/_wdt/41d42d","method":"GET"} []
[2020-03-09T23:28:24.729794+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-09T23:28:24.734905+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:28:48.832523+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-09T23:28:48.838401+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:28:51.709282+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-09T23:28:51.715261+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:29:59.984588+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-09T23:30:00.032493+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:33:37.464510+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-09T23:33:37.476729+01:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Could not find the entrypoints file from Webpack: the file "/home/simon/Bureau/devWeb/abbottApp/public/build/entrypoints.json" does not exist.")." at /home/simon/Bureau/devWeb/abbottApp/templates/app/index.html.twig line 6 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Could not find the entrypoints file from Webpack: the file \"/home/simon/Bureau/devWeb/abbottApp/public/build/entrypoints.json\" does not exist.\"). at /home/simon/Bureau/devWeb/abbottApp/templates/app/index.html.twig:6)\n[previous exception] [object] (InvalidArgumentException(code: 0): Could not find the entrypoints file from Webpack: the file \"/home/simon/Bureau/devWeb/abbottApp/public/build/entrypoints.json\" does not exist. at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/webpack-encore-bundle/src/Asset/EntrypointLookup.php:124)"} []
[2020-03-09T23:33:37.531393+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:33:37.853872+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"63e8f3"},"request_uri":"http://localhost:8000/_wdt/63e8f3","method":"GET"} []
[2020-03-09T23:33:46.942619+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-09T23:33:46.952668+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:33:59.449946+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:33:59.454236+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:34:29.495275+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:34:29.504624+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:35:09.027176+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:35:09.064278+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:35:09.148155+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7189c8"},"request_uri":"http://127.0.0.1:8000/_wdt/7189c8","method":"GET"} []
[2020-03-09T23:35:09.754522+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:35:09.766180+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:35:09.873273+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"26426d"},"request_uri":"http://127.0.0.1:8000/_wdt/26426d","method":"GET"} []
[2020-03-09T23:35:19.647521+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:35:19.659549+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:35:19.743923+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"743f05"},"request_uri":"http://127.0.0.1:8000/_wdt/743f05","method":"GET"} []
[2020-03-09T23:35:20.915148+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:35:20.926597+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:35:21.014367+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c43047"},"request_uri":"http://127.0.0.1:8000/_wdt/c43047","method":"GET"} []
[2020-03-09T23:35:21.617357+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:35:21.635140+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:35:21.739816+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"42a7c7"},"request_uri":"http://127.0.0.1:8000/_wdt/42a7c7","method":"GET"} []
[2020-03-09T23:35:32.948504+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:35:32.956825+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:35:50.502074+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:35:50.526444+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:35:51.951813+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:35:51.964877+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:36:04.664887+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:36:04.682282+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:36:04.773080+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4378aa"},"request_uri":"http://127.0.0.1:8000/_wdt/4378aa","method":"GET"} []
[2020-03-09T23:36:05.431629+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:36:05.441855+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:36:05.551011+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4bb19a"},"request_uri":"http://127.0.0.1:8000/_wdt/4bb19a","method":"GET"} []
[2020-03-09T23:36:19.618062+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:36:19.626706+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:36:19.714052+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2fde7d"},"request_uri":"http://127.0.0.1:8000/_wdt/2fde7d","method":"GET"} []
[2020-03-09T23:36:38.388227+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:36:38.399032+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:39:58.576562+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:39:58.590311+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:39:58.678512+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3e0a15"},"request_uri":"http://127.0.0.1:8000/_wdt/3e0a15","method":"GET"} []
[2020-03-09T23:41:06.053980+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:41:06.059758+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:41:29.233733+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:41:29.242613+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:41:29.373817+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"150b0d"},"request_uri":"http://127.0.0.1:8000/_wdt/150b0d","method":"GET"} []
[2020-03-09T23:44:40.983143+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:44:40.987890+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:44:41.064891+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"88dcf5"},"request_uri":"http://127.0.0.1:8000/_wdt/88dcf5","method":"GET"} []
[2020-03-09T23:44:56.852591+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:44:56.859965+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:44:56.931353+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3886c5"},"request_uri":"http://127.0.0.1:8000/_wdt/3886c5","method":"GET"} []
[2020-03-09T23:44:57.759193+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:44:57.765456+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:44:57.843551+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"551605"},"request_uri":"http://127.0.0.1:8000/_wdt/551605","method":"GET"} []
[2020-03-09T23:47:26.723113+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:47:26.728231+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:48:22.969637+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:48:22.977604+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:48:24.059927+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:48:24.072773+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:48:26.805467+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:48:26.814086+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:49:11.543072+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:49:11.551999+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:49:11.769718+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"234137"},"request_uri":"http://127.0.0.1:8000/_wdt/234137","method":"GET"} []
[2020-03-09T23:58:46.237081+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:58:46.243182+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:58:46.352819+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0f028f"},"request_uri":"http://127.0.0.1:8000/_wdt/0f028f","method":"GET"} []
[2020-03-09T23:58:50.631159+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-09T23:58:50.641261+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-09T23:58:50.738791+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2a5b7d"},"request_uri":"http://127.0.0.1:8000/_wdt/2a5b7d","method":"GET"} []
[2020-03-10T00:00:24.198079+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T00:00:24.203971+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T00:00:24.284041+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"514124"},"request_uri":"http://127.0.0.1:8000/_wdt/514124","method":"GET"} []
[2020-03-10T00:00:25.081448+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T00:00:25.091497+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T00:00:25.177050+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"de6d4b"},"request_uri":"http://127.0.0.1:8000/_wdt/de6d4b","method":"GET"} []
[2020-03-10T00:00:46.810460+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T00:00:46.814701+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T00:00:46.892582+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"038d92"},"request_uri":"http://127.0.0.1:8000/_wdt/038d92","method":"GET"} []
[2020-03-10T00:01:31.712923+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T00:01:31.722385+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T00:01:31.799542+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c0a369"},"request_uri":"http://127.0.0.1:8000/_wdt/c0a369","method":"GET"} []
[2020-03-10T00:03:39.299179+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T00:03:39.305566+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T00:03:39.398199+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1e783b"},"request_uri":"http://localhost:8000/_wdt/1e783b","method":"GET"} []
[2020-03-10T00:03:43.502802+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T00:03:43.507755+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T00:03:43.580722+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7d498e"},"request_uri":"http://localhost:8000/_wdt/7d498e","method":"GET"} []
[2020-03-10T00:03:56.896865+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T00:03:56.905359+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T00:03:57.005121+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f06632"},"request_uri":"http://localhost:8000/_wdt/f06632","method":"GET"} []
[2020-03-10T13:51:25.588454+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:51:25.658971+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:51:25.768320+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"80c060"},"request_uri":"http://127.0.0.1:8000/_wdt/80c060","method":"GET"} []
[2020-03-10T13:51:25.876731+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-10T13:52:12.761135+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:52:12.766564+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:52:12.860934+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4c4ddf"},"request_uri":"http://127.0.0.1:8000/_wdt/4c4ddf","method":"GET"} []
[2020-03-10T13:52:27.003977+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:52:27.010137+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:52:27.138121+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4d119b"},"request_uri":"http://127.0.0.1:8000/_wdt/4d119b","method":"GET"} []
[2020-03-10T13:52:31.534663+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:52:31.539271+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:52:31.639245+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b840e4"},"request_uri":"http://127.0.0.1:8000/_wdt/b840e4","method":"GET"} []
[2020-03-10T13:53:23.388241+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:53:23.394445+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:53:23.497890+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d94da6"},"request_uri":"http://127.0.0.1:8000/_wdt/d94da6","method":"GET"} []
[2020-03-10T13:54:06.940797+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:54:06.945391+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:54:07.023400+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9ea5fe"},"request_uri":"http://127.0.0.1:8000/_wdt/9ea5fe","method":"GET"} []
[2020-03-10T13:54:19.825476+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:54:19.830764+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:54:19.923354+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"34e54f"},"request_uri":"http://127.0.0.1:8000/_wdt/34e54f","method":"GET"} []
[2020-03-10T13:58:38.853090+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:58:38.899866+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:58:39.014323+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e1b327"},"request_uri":"http://127.0.0.1:8000/_wdt/e1b327","method":"GET"} []
[2020-03-10T13:58:47.815395+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:58:47.819113+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:58:47.923693+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"87ac40"},"request_uri":"http://127.0.0.1:8000/_wdt/87ac40","method":"GET"} []
[2020-03-10T13:59:02.931506+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:59:02.935275+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:59:03.024364+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b558de"},"request_uri":"http://127.0.0.1:8000/_wdt/b558de","method":"GET"} []
[2020-03-10T13:59:04.255007+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:59:04.262440+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:59:04.354460+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fd1dd7"},"request_uri":"http://127.0.0.1:8000/_wdt/fd1dd7","method":"GET"} []
[2020-03-10T13:59:04.871192+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:59:04.883733+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:59:04.987778+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ae852a"},"request_uri":"http://127.0.0.1:8000/_wdt/ae852a","method":"GET"} []
[2020-03-10T13:59:10.926414+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:59:10.930155+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:59:11.020806+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"22fc2c"},"request_uri":"http://127.0.0.1:8000/_wdt/22fc2c","method":"GET"} []
[2020-03-10T13:59:11.778559+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T13:59:11.789837+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T13:59:11.884874+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2c144d"},"request_uri":"http://127.0.0.1:8000/_wdt/2c144d","method":"GET"} []
[2020-03-10T14:04:26.473175+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T14:04:26.480450+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T14:04:26.595523+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a2d9db"},"request_uri":"http://127.0.0.1:8000/_wdt/a2d9db","method":"GET"} []
[2020-03-10T14:22:37.247511+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://10.4.16.161:8000/","method":"GET"} []
[2020-03-10T14:22:37.253429+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T17:38:55.468794+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T17:38:55.535406+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T17:38:55.638033+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fb7961"},"request_uri":"http://127.0.0.1:8000/_wdt/fb7961","method":"GET"} []
[2020-03-10T17:38:55.728025+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-10T17:40:03.772840+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T17:40:03.778162+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T17:40:03.864727+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8a2b90"},"request_uri":"http://127.0.0.1:8000/_wdt/8a2b90","method":"GET"} []
[2020-03-10T17:41:05.566106+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T17:41:05.610835+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T17:41:05.709555+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"99180c"},"request_uri":"http://127.0.0.1:8000/_wdt/99180c","method":"GET"} []
[2020-03-10T17:41:09.371760+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T17:41:09.376462+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T17:41:09.464914+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9b3f6e"},"request_uri":"http://127.0.0.1:8000/_wdt/9b3f6e","method":"GET"} []
[2020-03-10T17:41:15.837847+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T17:41:15.845910+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T17:41:15.926025+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e86f92"},"request_uri":"http://127.0.0.1:8000/_wdt/e86f92","method":"GET"} []
[2020-03-10T21:11:08.341562+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:11:08.460677+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:11:08.619871+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2022b9"},"request_uri":"http://127.0.0.1:8000/_wdt/2022b9","method":"GET"} []
[2020-03-10T21:11:08.943478+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-10T21:11:25.917520+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:11:25.926303+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:11:26.057467+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bed79e"},"request_uri":"http://127.0.0.1:8000/_wdt/bed79e","method":"GET"} []
[2020-03-10T21:11:27.162650+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:11:27.175604+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:11:27.288264+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d285c2"},"request_uri":"http://127.0.0.1:8000/_wdt/d285c2","method":"GET"} []
[2020-03-10T21:11:27.895230+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:11:27.910086+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:11:28.028592+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"41b318"},"request_uri":"http://127.0.0.1:8000/_wdt/41b318","method":"GET"} []
[2020-03-10T21:11:34.663807+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:11:34.678791+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:11:34.793751+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"32c8bd"},"request_uri":"http://127.0.0.1:8000/_wdt/32c8bd","method":"GET"} []
[2020-03-10T21:21:44.412592+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:21:44.421059+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:21:44.539304+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5bd277"},"request_uri":"http://127.0.0.1:8000/_wdt/5bd277","method":"GET"} []
[2020-03-10T21:21:45.362112+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:21:45.366814+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:21:45.444989+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4d3205"},"request_uri":"http://127.0.0.1:8000/_wdt/4d3205","method":"GET"} []
[2020-03-10T21:25:21.999689+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:25:22.006991+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:25:22.133252+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"36f6ad"},"request_uri":"http://127.0.0.1:8000/_wdt/36f6ad","method":"GET"} []
[2020-03-10T21:25:29.726271+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:25:29.732513+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:25:29.870610+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3eb43a"},"request_uri":"http://127.0.0.1:8000/_wdt/3eb43a","method":"GET"} []
[2020-03-10T21:25:45.935652+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T21:25:45.939472+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:25:46.027828+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b2e618"},"request_uri":"http://127.0.0.1:8000/_wdt/b2e618","method":"GET"} []
[2020-03-10T21:25:55.589894+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T21:25:55.598739+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:25:55.760223+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f37c58"},"request_uri":"http://localhost:8000/_wdt/f37c58","method":"GET"} []
[2020-03-10T21:25:55.790541+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://localhost:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://localhost:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-10T21:26:40.524250+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T21:26:40.528875+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:26:40.635982+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"58c7e4"},"request_uri":"http://localhost:8000/_wdt/58c7e4","method":"GET"} []
[2020-03-10T21:26:44.952798+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T21:26:44.962037+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:26:45.056767+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5a5738"},"request_uri":"http://localhost:8000/_wdt/5a5738","method":"GET"} []
[2020-03-10T21:29:04.352145+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T21:29:04.356687+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:29:04.483376+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"486fd3"},"request_uri":"http://localhost:8000/_wdt/486fd3","method":"GET"} []
[2020-03-10T21:29:10.757693+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T21:29:10.762219+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:29:10.861825+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a92982"},"request_uri":"http://localhost:8000/_wdt/a92982","method":"GET"} []
[2020-03-10T21:29:11.748699+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T21:29:11.760741+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:29:11.854838+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"55fe46"},"request_uri":"http://localhost:8000/_wdt/55fe46","method":"GET"} []
[2020-03-10T21:29:12.702562+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T21:29:12.709920+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:29:12.800960+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"96487d"},"request_uri":"http://localhost:8000/_wdt/96487d","method":"GET"} []
[2020-03-10T21:34:39.446258+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T21:34:39.450356+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:34:39.534755+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8c8946"},"request_uri":"http://localhost:8000/_wdt/8c8946","method":"GET"} []
[2020-03-10T21:34:40.347021+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T21:34:40.352715+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T21:34:40.449714+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0f5952"},"request_uri":"http://localhost:8000/_wdt/0f5952","method":"GET"} []
[2020-03-10T22:28:27.948887+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T22:28:27.998227+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T22:30:24.110134+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e8b57e"},"request_uri":"http://127.0.0.1:8000/_wdt/e8b57e","method":"GET"} []
[2020-03-10T22:30:24.223586+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-10T22:34:08.591621+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T22:34:08.638382+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T22:34:08.735598+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6168dc"},"request_uri":"http://127.0.0.1:8000/_wdt/6168dc","method":"GET"} []
[2020-03-10T22:34:14.165261+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T22:34:14.169240+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T22:34:14.249639+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"621dd6"},"request_uri":"http://127.0.0.1:8000/_wdt/621dd6","method":"GET"} []
[2020-03-10T22:54:57.871791+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T22:54:57.938977+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T22:54:58.264192+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4ae463"},"request_uri":"http://127.0.0.1:8000/_wdt/4ae463","method":"GET"} []
[2020-03-10T22:54:58.395695+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T22:54:58.402176+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T22:54:58.585285+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7ac8e8"},"request_uri":"http://127.0.0.1:8000/_wdt/7ac8e8","method":"GET"} []
[2020-03-10T22:59:00.398582+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T22:59:00.405681+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T22:59:00.644453+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e2cb14"},"request_uri":"http://127.0.0.1:8000/_wdt/e2cb14","method":"GET"} []
[2020-03-10T22:59:01.117905+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T22:59:01.122615+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T22:59:01.420113+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b0dbbc"},"request_uri":"http://127.0.0.1:8000/_wdt/b0dbbc","method":"GET"} []
[2020-03-10T22:59:06.722410+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T22:59:06.726795+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T22:59:06.954211+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b8bd01"},"request_uri":"http://127.0.0.1:8000/_wdt/b8bd01","method":"GET"} []
[2020-03-10T23:02:01.680535+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:02:01.688177+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:02:01.871411+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"255902"},"request_uri":"http://127.0.0.1:8000/_wdt/255902","method":"GET"} []
[2020-03-10T23:02:28.987243+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:02:28.993023+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:02:29.230998+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1ad162"},"request_uri":"http://127.0.0.1:8000/_wdt/1ad162","method":"GET"} []
[2020-03-10T23:02:41.026068+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:02:41.035622+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:02:41.316280+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"92d327"},"request_uri":"http://127.0.0.1:8000/_wdt/92d327","method":"GET"} []
[2020-03-10T23:02:41.373601+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:02:41.381502+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:02:41.633230+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2f52d3"},"request_uri":"http://127.0.0.1:8000/_wdt/2f52d3","method":"GET"} []
[2020-03-10T23:04:07.183905+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:04:07.188568+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:04:07.505800+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"111694"},"request_uri":"http://127.0.0.1:8000/_wdt/111694","method":"GET"} []
[2020-03-10T23:05:41.047228+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:05:41.054040+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:05:41.731546+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"be68f9"},"request_uri":"http://127.0.0.1:8000/_wdt/be68f9","method":"GET"} []
[2020-03-10T23:05:42.230205+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:05:42.247141+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:05:42.761856+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"75fd10"},"request_uri":"http://127.0.0.1:8000/_wdt/75fd10","method":"GET"} []
[2020-03-10T23:12:38.046283+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:12:38.054870+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:12:38.910815+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"84f61b"},"request_uri":"http://127.0.0.1:8000/_wdt/84f61b","method":"GET"} []
[2020-03-10T23:12:39.126604+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:12:39.131915+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:12:39.587764+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e32a9b"},"request_uri":"http://127.0.0.1:8000/_wdt/e32a9b","method":"GET"} []
[2020-03-10T23:17:57.690685+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:17:57.698172+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:17:58.125194+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:17:58.132930+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:17:58.369098+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7eebfd"},"request_uri":"http://127.0.0.1:8000/_wdt/7eebfd","method":"GET"} []
[2020-03-10T23:17:58.721953+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dfce29"},"request_uri":"http://127.0.0.1:8000/_wdt/dfce29","method":"GET"} []
[2020-03-10T23:18:52.069853+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:18:52.074674+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:18:52.548204+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7af570"},"request_uri":"http://127.0.0.1:8000/_wdt/7af570","method":"GET"} []
[2020-03-10T23:19:04.557268+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:19:04.563611+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:19:05.034161+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4fb916"},"request_uri":"http://127.0.0.1:8000/_wdt/4fb916","method":"GET"} []
[2020-03-10T23:19:05.912189+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:19:05.925163+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:19:06.385261+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a51bb7"},"request_uri":"http://127.0.0.1:8000/_wdt/a51bb7","method":"GET"} []
[2020-03-10T23:20:03.958755+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:20:03.967695+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:20:04.136701+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:20:04.142844+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:20:04.176746+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:20:04.182562+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:20:04.941474+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bc4db3"},"request_uri":"http://127.0.0.1:8000/_wdt/bc4db3","method":"GET"} []
[2020-03-10T23:20:04.971219+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c02214"},"request_uri":"http://127.0.0.1:8000/_wdt/c02214","method":"GET"} []
[2020-03-10T23:28:57.537619+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:28:57.545533+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:28:58.117764+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6ac2a2"},"request_uri":"http://127.0.0.1:8000/_wdt/6ac2a2","method":"GET"} []
[2020-03-10T23:29:17.685203+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:29:17.694360+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:29:18.200850+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0781e6"},"request_uri":"http://127.0.0.1:8000/_wdt/0781e6","method":"GET"} []
[2020-03-10T23:29:35.979544+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:29:35.986277+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:29:36.526244+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d95b34"},"request_uri":"http://127.0.0.1:8000/_wdt/d95b34","method":"GET"} []
[2020-03-10T23:31:29.130931+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:31:29.140755+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:31:29.666116+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"96828e"},"request_uri":"http://127.0.0.1:8000/_wdt/96828e","method":"GET"} []
[2020-03-10T23:31:31.193368+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:31:31.201940+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:31:31.840564+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d7a498"},"request_uri":"http://127.0.0.1:8000/_wdt/d7a498","method":"GET"} []
[2020-03-10T23:32:27.382266+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:32:27.392702+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:32:28.031461+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5e69c7"},"request_uri":"http://127.0.0.1:8000/_wdt/5e69c7","method":"GET"} []
[2020-03-10T23:35:11.125426+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:35:11.130502+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:35:11.642695+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cf4f12"},"request_uri":"http://127.0.0.1:8000/_wdt/cf4f12","method":"GET"} []
[2020-03-10T23:35:23.982024+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:35:23.990852+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:35:24.579459+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ebbb5a"},"request_uri":"http://127.0.0.1:8000/_wdt/ebbb5a","method":"GET"} []
[2020-03-10T23:35:44.366650+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:35:44.373875+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:35:44.663026+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:35:44.669246+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:35:45.222273+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9c77e0"},"request_uri":"http://127.0.0.1:8000/_wdt/9c77e0","method":"GET"} []
[2020-03-10T23:35:58.916650+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:35:58.923212+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:35:59.263255+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:35:59.269285+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:36:00.004453+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4bbeff"},"request_uri":"http://127.0.0.1:8000/_wdt/4bbeff","method":"GET"} []
[2020-03-10T23:36:50.529320+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:36:50.535210+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:36:51.082635+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c329d6"},"request_uri":"http://127.0.0.1:8000/_wdt/c329d6","method":"GET"} []
[2020-03-10T23:36:56.342246+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:36:56.347401+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:36:56.939460+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ca1c5"},"request_uri":"http://127.0.0.1:8000/_wdt/2ca1c5","method":"GET"} []
[2020-03-10T23:37:20.057572+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:37:20.065999+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:37:20.642138+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e776ff"},"request_uri":"http://127.0.0.1:8000/_wdt/e776ff","method":"GET"} []
[2020-03-10T23:37:53.989886+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:37:53.995380+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:37:54.556213+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1297e4"},"request_uri":"http://127.0.0.1:8000/_wdt/1297e4","method":"GET"} []
[2020-03-10T23:38:08.169742+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:38:08.180497+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:38:08.766585+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ac1904"},"request_uri":"http://127.0.0.1:8000/_wdt/ac1904","method":"GET"} []
[2020-03-10T23:38:18.763276+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:38:18.767621+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:38:18.925470+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:38:18.931547+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:38:19.627026+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8f8b05"},"request_uri":"http://127.0.0.1:8000/_wdt/8f8b05","method":"GET"} []
[2020-03-10T23:41:09.057418+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:41:09.065617+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:41:09.722247+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2580e6"},"request_uri":"http://127.0.0.1:8000/_wdt/2580e6","method":"GET"} []
[2020-03-10T23:41:46.452004+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:41:46.460634+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:41:47.003731+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0a67eb"},"request_uri":"http://127.0.0.1:8000/_wdt/0a67eb","method":"GET"} []
[2020-03-10T23:42:36.238720+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-10T23:42:36.242451+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:42:36.985208+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7dad1a"},"request_uri":"http://127.0.0.1:8000/_wdt/7dad1a","method":"GET"} []
[2020-03-10T23:43:08.753008+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:43:08.756743+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:43:09.399145+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8b88e2"},"request_uri":"http://localhost:8000/_wdt/8b88e2","method":"GET"} []
[2020-03-10T23:43:09.466397+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://localhost:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://localhost:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-10T23:43:16.966447+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:43:16.970601+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:43:17.193463+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:43:17.198043+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:43:17.698309+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"412ad3"},"request_uri":"http://localhost:8000/_wdt/412ad3","method":"GET"} []
[2020-03-10T23:44:00.165641+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:44:00.171312+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:44:00.840022+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"805f6c"},"request_uri":"http://localhost:8000/_wdt/805f6c","method":"GET"} []
[2020-03-10T23:48:44.251639+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:48:44.258294+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:48:44.927399+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5073df"},"request_uri":"http://localhost:8000/_wdt/5073df","method":"GET"} []
[2020-03-10T23:49:19.002083+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/conferences","method":"GET"} []
[2020-03-10T23:49:19.130077+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-10T23:49:19.164709+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-10T23:49:19.168728+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:51:14.860612+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:51:14.866830+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:51:15.360978+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0cc48d"},"request_uri":"http://localhost:8000/_wdt/0cc48d","method":"GET"} []
[2020-03-10T23:51:26.874661+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/api","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"api_entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api/","method":"GET"} []
[2020-03-10T23:51:26.894585+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:51:27.238721+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0bb0a1"},"request_uri":"http://localhost:8000/_wdt/0bb0a1","method":"GET"} []
[2020-03-10T23:51:30.983827+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-10T23:51:31.001374+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:51:31.309654+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a32031"},"request_uri":"http://localhost:8000/_wdt/a32031","method":"GET"} []
[2020-03-10T23:51:32.224118+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences?page=1","method":"GET"} []
[2020-03-10T23:51:32.232785+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-10T23:51:32.235218+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-10T23:51:32.240546+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:53:04.322500+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-10T23:53:04.344697+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:53:04.700058+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7960ac"},"request_uri":"http://localhost:8000/_wdt/7960ac","method":"GET"} []
[2020-03-10T23:53:05.649665+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences?page=1","method":"GET"} []
[2020-03-10T23:53:05.656885+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-10T23:53:05.660627+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-10T23:53:05.663664+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:53:08.824861+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:53:08.831161+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:53:09.563326+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"210dba"},"request_uri":"http://localhost:8000/_wdt/210dba","method":"GET"} []
[2020-03-10T23:53:10.835021+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-10T23:53:10.849069+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-10T23:53:10.858116+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-10T23:53:10.862097+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:58:20.726418+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:58:20.732319+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:58:21.646478+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1a61b6"},"request_uri":"http://localhost:8000/_wdt/1a61b6","method":"GET"} []
[2020-03-10T23:58:21.668918+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-10T23:58:21.678496+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-10T23:58:21.686932+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-10T23:58:21.690666+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:59:29.631251+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:59:29.636489+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:59:29.667069+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:59:29.674338+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:59:30.210585+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c4dbaf"},"request_uri":"http://localhost:8000/_wdt/c4dbaf","method":"GET"} []
[2020-03-10T23:59:30.233098+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-10T23:59:30.241632+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-10T23:59:30.246069+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-10T23:59:30.250810+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:59:54.683213+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-10T23:59:54.692604+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-10T23:59:55.278578+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3e37cd"},"request_uri":"http://localhost:8000/_wdt/3e37cd","method":"GET"} []
[2020-03-10T23:59:55.302395+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-10T23:59:55.308965+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-10T23:59:55.312596+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-10T23:59:55.315643+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:00:07.343240+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:00:07.348053+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:00:08.048309+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7c8eb3"},"request_uri":"http://localhost:8000/_wdt/7c8eb3","method":"GET"} []
[2020-03-11T00:00:08.079649+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:00:08.087949+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:00:08.093356+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:00:08.096721+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:01:53.582162+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:01:53.587651+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:01:53.799274+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:01:53.806186+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:01:54.467099+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"be8add"},"request_uri":"http://localhost:8000/_wdt/be8add","method":"GET"} []
[2020-03-11T00:01:54.489755+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:01:54.499169+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:01:54.503693+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:01:54.506532+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:02:03.832456+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:02:03.843831+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:02:04.806329+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"25a5a4"},"request_uri":"http://localhost:8000/_wdt/25a5a4","method":"GET"} []
[2020-03-11T00:02:04.828921+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:02:04.836186+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:02:04.840088+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:02:04.844760+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:02:24.283295+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:02:24.289431+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:02:24.486361+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:02:24.493032+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:02:25.155522+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6e33b6"},"request_uri":"http://localhost:8000/_wdt/6e33b6","method":"GET"} []
[2020-03-11T00:02:25.172512+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:02:25.180752+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:02:25.186110+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:02:25.189793+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:02:56.071355+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:02:56.077070+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:02:56.916945+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"46a080"},"request_uri":"http://localhost:8000/_wdt/46a080","method":"GET"} []
[2020-03-11T00:02:56.937813+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:02:56.943492+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:02:56.946290+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:02:56.949596+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:03:41.740133+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:03:41.746300+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:03:41.947861+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:03:41.952611+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:03:42.610955+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"31601e"},"request_uri":"http://localhost:8000/_wdt/31601e","method":"GET"} []
[2020-03-11T00:03:42.635580+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:03:42.642147+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:03:42.646734+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:03:42.650079+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:04:01.915496+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:04:01.921060+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:04:02.519323+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"77911a"},"request_uri":"http://localhost:8000/_wdt/77911a","method":"GET"} []
[2020-03-11T00:04:02.560742+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:04:02.573175+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:04:02.577901+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:04:02.581997+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:05:13.263496+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:05:13.267974+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:05:13.906868+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"26b904"},"request_uri":"http://localhost:8000/_wdt/26b904","method":"GET"} []
[2020-03-11T00:05:13.936487+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:05:13.949658+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:05:13.954983+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:05:13.960518+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:05:31.487430+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:05:31.492192+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:05:32.156485+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8f4342"},"request_uri":"http://localhost:8000/_wdt/8f4342","method":"GET"} []
[2020-03-11T00:05:32.196928+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:05:32.207716+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:05:32.213794+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:05:32.218214+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:05:47.299976+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:05:47.306135+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:05:47.498994+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:05:47.518120+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:05:48.257762+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"24f0d2"},"request_uri":"http://localhost:8000/_wdt/24f0d2","method":"GET"} []
[2020-03-11T00:05:48.282198+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:05:48.289311+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:05:48.293799+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:05:48.297037+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:06:11.201503+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:06:11.209083+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:06:11.400092+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:06:11.407169+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:06:11.488242+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"56313e"},"request_uri":"http://localhost:8000/_wdt/56313e","method":"GET"} []
[2020-03-11T00:06:11.626765+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"561561"},"request_uri":"http://localhost:8000/_wdt/561561","method":"GET"} []
[2020-03-11T00:06:11.680604+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:06:11.687333+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:06:11.691205+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:06:11.694605+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:08:01.774522+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:08:01.778229+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:08:01.934031+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"627fb0"},"request_uri":"http://localhost:8000/_wdt/627fb0","method":"GET"} []
[2020-03-11T00:08:02.012598+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:08:02.019163+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:08:02.022236+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:08:02.024494+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:09:59.375214+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:09:59.381676+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:09:59.587360+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f9cd9c"},"request_uri":"http://localhost:8000/_wdt/f9cd9c","method":"GET"} []
[2020-03-11T00:09:59.624541+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:09:59.633786+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:09:59.656290+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:09:59.676349+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:09:59.693657+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:09:59.698468+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:09:59.754485+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1feb16"},"request_uri":"http://localhost:8000/_wdt/1feb16","method":"GET"} []
[2020-03-11T00:09:59.818963+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:09:59.824766+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:09:59.827466+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:09:59.830807+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:10:14.505909+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:10:14.510256+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:10:14.672598+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0b1bcf"},"request_uri":"http://localhost:8000/_wdt/0b1bcf","method":"GET"} []
[2020-03-11T00:10:14.756445+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:10:14.774139+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:10:14.784823+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:10:14.787272+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:11:29.666667+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:11:29.671052+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:11:29.846742+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"858a1f"},"request_uri":"http://localhost:8000/_wdt/858a1f","method":"GET"} []
[2020-03-11T00:11:29.894629+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:11:29.906059+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:11:29.940494+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:11:29.953686+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:11:29.958981+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:11:29.962282+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:11:30.039495+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f89177"},"request_uri":"http://localhost:8000/_wdt/f89177","method":"GET"} []
[2020-03-11T00:11:30.118441+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:11:30.122931+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:11:30.126883+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:11:30.135380+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:11:36.250928+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:11:36.258782+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:11:36.286675+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:11:36.290764+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:11:36.470645+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e13dc8"},"request_uri":"http://localhost:8000/_wdt/e13dc8","method":"GET"} []
[2020-03-11T00:11:36.499538+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:11:36.506901+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:11:36.510720+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:11:36.514003+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:14:33.604691+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T00:14:33.621187+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-11T00:14:33.653316+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"MichaudBourg","2":"Sit voluptatem mollitia do [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.653643+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"BertrandBourg","2":"Neque nostrum a quidem nes [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.653822+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Colletnec","2":"Rem optio nemo nostrum nis [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.653973+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Francois","2":"Consectetur necessitatibus [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.654117+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Schmitt-sur-Lefevre","2":"Quod ab aut quaerat quam e [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.654262+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Greniernec","2":"Molestias quos fugit dolor [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.654404+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Daniel","2":"Voluptates asperiores recu [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.654537+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Ollivier","2":"Ut expedita architecto ad. [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.654668+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Dupredan","2":"Ad ipsum nemo illo cupidit [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.654801+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Delmas","2":"Suscipit facilis alias mol [...]","3":"2020-03-11T00:14:33+01:00","4":null} []
[2020-03-11T00:14:33.655652+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T00:14:37.114035+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:14:37.118072+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:14:37.283081+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"276a53"},"request_uri":"http://localhost:8000/_wdt/276a53","method":"GET"} []
[2020-03-11T00:14:37.348902+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:14:37.358247+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:14:37.361993+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:14:37.365409+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:16:09.332476+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T00:16:09.348015+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-11T00:16:09.364206+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Fernandes-sur-Turpin","2":"Provident et ad ullam et s [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.364544+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Didierboeuf","2":"Dolorum qui corporis quo v [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.364715+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Daniel","2":"Quo molestias sed velit su [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.364864+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Bouviernec","2":"Asperiores harum consequat [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.365004+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Le Roux","2":"Ut unde qui dolorem illum  [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.365146+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Joubertboeuf","2":"Inventore dolor vitae dele [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.365283+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Picard-sur-Mer","2":"Corrupti magni iure et ist [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.365419+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Marie-sur-Caron","2":"Est et quaerat delectus. R [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.365556+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Samson","2":"Praesentium quia voluptate [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.365691+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Riou","2":"Veniam velit qui non. Volu [...]","3":"2020-03-11T00:16:09+01:00","4":null} []
[2020-03-11T00:16:09.366220+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T00:16:12.056252+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:16:12.061384+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:16:12.212262+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"730956"},"request_uri":"http://localhost:8000/_wdt/730956","method":"GET"} []
[2020-03-11T00:16:12.290176+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:16:12.297312+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:16:12.299940+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:16:12.304041+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:16:29.509675+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T00:16:29.525099+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-11T00:16:29.546282+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":null,"2":"Eaque animi praesentium en [...]","3":"2020-03-11T00:16:29+01:00","4":null} []
[2020-03-11T00:16:29.548168+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-11T00:16:29.556410+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load --no-interaction". Message: "An exception occurred while executing 'INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?)' with params [null, "Eaque animi praesentium enim voluptatibus fugiat. Ea praesentium asperiores dolore hic vel consectetur. Incidunt dolores necessitatibus sit et tenetur harum.", "00:16:29", null]:  SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'name' cannot be null" {"exception":"[object] (Doctrine\\DBAL\\Exception\\NotNullConstraintViolationException(code: 0): An exception occurred while executing 'INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?)' with params [null, \"Eaque animi praesentium enim voluptatibus fugiat. Ea praesentium asperiores dolore hic vel consectetur. Incidunt dolores necessitatibus sit et tenetur harum.\", \"00:16:29\", null]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1048 Column 'name' cannot be null at /home/simon/Bureau/devWeb/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:103)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'name' cannot be null at /home/simon/Bureau/devWeb/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:123)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'name' cannot be null at /home/simon/Bureau/devWeb/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:121)","command":"doctrine:fixtures:load --no-interaction","message":"An exception occurred while executing 'INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?)' with params [null, \"Eaque animi praesentium enim voluptatibus fugiat. Ea praesentium asperiores dolore hic vel consectetur. Incidunt dolores necessitatibus sit et tenetur harum.\", \"00:16:29\", null]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1048 Column 'name' cannot be null"} []
[2020-03-11T00:16:29.556713+01:00] console.DEBUG: Command "doctrine:fixtures:load --no-interaction" exited with code "1" {"command":"doctrine:fixtures:load --no-interaction","code":1} []
[2020-03-11T00:17:15.426265+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T00:17:15.441833+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-11T00:17:15.457731+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"28, rue Patrick Pascal\n69  [...]","2":"Officia iure natus nihil a [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.458105+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"30, rue de Boyer\n33182 Lejeune","2":"Delectus et nisi cupiditat [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.458309+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"62, avenue Joly\n08283 Boulay","2":"Eum enim quae dolorum beat [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.458492+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"1, avenue Nicolas Lebreton [...]","2":"Aliquam iusto sed voluptas [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.458808+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"26, place de Girard\n90 927 [...]","2":"Alias laborum consequatur  [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.459230+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"8, place Pierre Leroux\n741 [...]","2":"Qui a amet numquam aliquam [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.459452+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"1, avenue de Meunier\n00486 [...]","2":"Fugiat sit quia animi aliq [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.459628+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"5, boulevard Jean\n02 616 Normand","2":"Suscipit eum sequi officii [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.459782+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"44, rue Grégoire Bernier\n8 [...]","2":"Asperiores recusandae repe [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.459929+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"89, rue Marty\n43 578 Weiss","2":"Quas atque cum assumenda q [...]","3":"2020-03-11T00:17:15+01:00","4":null} []
[2020-03-11T00:17:15.460528+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T00:17:18.384629+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:17:18.388931+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:17:18.542647+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"099c2e"},"request_uri":"http://localhost:8000/_wdt/099c2e","method":"GET"} []
[2020-03-11T00:17:18.610670+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:17:18.619021+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:17:18.622545+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:17:18.624621+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:18:39.684734+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:18:39.689382+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:18:39.847176+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5c480b"},"request_uri":"http://localhost:8000/_wdt/5c480b","method":"GET"} []
[2020-03-11T00:18:39.927727+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:18:39.934787+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:18:39.939469+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:18:39.942693+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:18:41.455773+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T00:18:41.470984+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-11T00:18:41.499103+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Perrierboeuf","2":"Voluptas porro officia sed [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.499573+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Jacob","2":"Ut quis voluptatem accusan [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.499808+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Hoareau","2":"Rerum dignissimos et volup [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.500040+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Pierre","2":"Dolores deserunt totam vol [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.500308+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Voisin-les-Bains","2":"Consequatur nam possimus a [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.500590+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Grondin","2":"Et nesciunt aut nemo dicta [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.501445+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Rodrigues","2":"Natus aut laboriosam commo [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.501778+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Legros","2":"Deserunt at nam nisi tempo [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.502075+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Paul-sur-Mer","2":"Id at sequi vero eveniet n [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.502388+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Millet","2":"Vitae cum iure quisquam do [...]","3":"2020-03-11T00:18:41+01:00","4":null} []
[2020-03-11T00:18:41.503106+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T00:18:42.860734+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:18:42.865423+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:18:42.959078+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"126143"},"request_uri":"http://localhost:8000/_wdt/126143","method":"GET"} []
[2020-03-11T00:18:43.037155+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:18:43.042357+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:18:43.044881+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:18:43.047042+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:19:35.877912+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:19:35.885009+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:19:35.887771+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:19:35.890253+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:19:42.793799+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:19:42.800191+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:19:43.483663+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"989189"},"request_uri":"http://localhost:8000/_wdt/989189","method":"GET"} []
[2020-03-11T00:19:43.570157+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:19:43.579820+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:19:43.586978+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:19:43.590706+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:19:55.132386+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:19:55.152635+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:19:55.466462+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7e1cf6"},"request_uri":"http://localhost:8000/_wdt/7e1cf6","method":"GET"} []
[2020-03-11T00:19:56.366993+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences?page=1","method":"GET"} []
[2020-03-11T00:19:56.376181+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:19:56.378571+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:19:56.381737+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:21:45.608423+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T00:21:45.625440+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-11T00:21:45.647647+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Chiny","2":"Ex atque dignissimos eaque [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.647977+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Visé","2":"Saepe aperiam voluptatem e [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.648155+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Châtelet","2":"Harum veritatis cumque vel [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.648303+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Namur","2":"In vel molestiae aperiam s [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.648490+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Tirlemont","2":"Odit voluptatem et et aute [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.648669+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Hannut","2":"Cupiditate sed laboriosam  [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.648828+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Couvin","2":"Et et consequatur qui nisi [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.648972+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Malmedy","2":"Harum qui molestias enim r [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.649113+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Zottegem","2":"Voluptatibus rerum praesen [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.649264+01:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end) VALUES (?, ?, ?, ?) {"1":"Bouillon","2":"Ipsum animi laboriosam vol [...]","3":"2020-03-11T00:21:45+01:00","4":null} []
[2020-03-11T00:21:45.649912+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T00:21:59.196655+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:21:59.202740+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:21:59.754008+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8817ea"},"request_uri":"http://localhost:8000/_wdt/8817ea","method":"GET"} []
[2020-03-11T00:21:59.772551+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:21:59.779646+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:21:59.785247+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:21:59.789013+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:22:48.709151+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:22:48.714909+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:22:48.975325+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"26e891"},"request_uri":"http://localhost:8000/_wdt/26e891","method":"GET"} []
[2020-03-11T00:22:49.023865+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:22:49.036125+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:22:49.041153+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:22:49.045635+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:23:15.345468+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:23:15.349235+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:23:15.507415+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0fc875"},"request_uri":"http://localhost:8000/_wdt/0fc875","method":"GET"} []
[2020-03-11T00:23:15.590534+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:23:15.597908+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:23:15.602081+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:23:15.604735+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:23:23.764479+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:23:23.770133+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:23:23.865764+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8474d6"},"request_uri":"http://localhost:8000/_wdt/8474d6","method":"GET"} []
[2020-03-11T00:23:23.943130+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:23:23.951526+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:23:23.954506+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:23:23.956669+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:23:28.860560+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:23:28.869111+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:23:28.871648+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:23:28.874058+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:24:38.486952+01:00] request.INFO: Matched route "_profiler". {"route":"_profiler","route_parameters":{"_route":"_profiler","_controller":"web_profiler.controller.profiler::panelAction","token":"8474d6"},"request_uri":"http://localhost:8000/_profiler/8474d6?panel=logger","method":"GET"} []
[2020-03-11T00:24:38.539431+01:00] request.INFO: Matched route "_profiler_search_bar". {"route":"_profiler_search_bar","route_parameters":{"_route":"_profiler_search_bar","_controller":"web_profiler.controller.profiler::searchBarAction"},"request_uri":"http://localhost:8000/_profiler/search_bar?panel=logger","method":"GET"} []
[2020-03-11T00:24:42.254619+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:24:42.262717+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:24:42.268186+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:24:42.273312+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:33:51.213022+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-11T00:33:51.226196+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:33:51.297021+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ec2259"},"request_uri":"http://localhost:8000/_wdt/ec2259","method":"GET"} []
[2020-03-11T00:59:42.711392+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T00:59:42.855666+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T00:59:43.366005+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0a9345"},"request_uri":"http://127.0.0.1:8000/_wdt/0a9345","method":"GET"} []
[2020-03-11T00:59:43.830754+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-11T00:59:45.111881+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T00:59:45.217663+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T00:59:45.232937+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T00:59:45.239386+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:03:03.217763+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T01:03:03.223789+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:03:03.468027+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7f4b98"},"request_uri":"http://127.0.0.1:8000/_wdt/7f4b98","method":"GET"} []
[2020-03-11T01:03:03.512031+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T01:03:03.520002+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T01:03:03.522819+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T01:03:03.525645+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:03:03.943603+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T01:03:03.950042+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:03:04.144867+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5a2d56"},"request_uri":"http://127.0.0.1:8000/_wdt/5a2d56","method":"GET"} []
[2020-03-11T01:03:04.208245+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T01:03:04.215383+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T01:03:04.217841+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T01:03:04.220027+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:03:06.148468+01:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"51"},"request_uri":"http://localhost:8000/api/conferences/51","method":"DELETE"} []
[2020-03-11T01:03:06.149788+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:03:06.214703+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ WHERE c0_.id = ? [51] []
[2020-03-11T01:03:06.230089+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T01:03:06.243948+01:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [51] []
[2020-03-11T01:03:06.244661+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T01:03:07.684117+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T01:03:07.690299+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:03:07.796220+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3308e3"},"request_uri":"http://127.0.0.1:8000/_wdt/3308e3","method":"GET"} []
[2020-03-11T01:03:07.875018+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T01:03:07.887085+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T01:03:07.890531+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T01:03:07.893622+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:18.712684+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T01:12:18.716699+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:19.249978+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c966f2"},"request_uri":"http://127.0.0.1:8000/_wdt/c966f2","method":"GET"} []
[2020-03-11T01:12:19.288094+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T01:12:19.297443+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T01:12:19.302119+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T01:12:19.304541+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:21.030005+01:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"52"},"request_uri":"http://localhost:8000/api/conferences/52","method":"DELETE"} []
[2020-03-11T01:12:21.030936+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:21.034771+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ WHERE c0_.id = ? [52] []
[2020-03-11T01:12:21.036686+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T01:12:21.037067+01:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [52] []
[2020-03-11T01:12:21.037368+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T01:12:27.752973+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T01:12:27.758300+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:27.943621+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"af3537"},"request_uri":"http://127.0.0.1:8000/_wdt/af3537","method":"GET"} []
[2020-03-11T01:12:27.968200+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /api/conferessnces" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /api/conferessnces\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/conferessnces/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-11T01:12:45.733851+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T01:12:45.737550+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:45.892808+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"54bf99"},"request_uri":"http://127.0.0.1:8000/_wdt/54bf99","method":"GET"} []
[2020-03-11T01:12:45.915753+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T01:12:45.920927+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T01:12:45.925730+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T01:12:45.930141+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:45.958802+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T01:12:45.966063+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:46.116800+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c6992e"},"request_uri":"http://127.0.0.1:8000/_wdt/c6992e","method":"GET"} []
[2020-03-11T01:12:46.209442+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T01:12:46.215230+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T01:12:46.217272+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T01:12:46.219381+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:48.641679+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "DELETE /api/confersssences/53" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"DELETE /api/confersssences/53\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/confersssences/53\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-11T01:12:50.999535+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "DELETE /api/confersssences/53" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"DELETE /api/confersssences/53\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/confersssences/53\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-11T01:12:56.003676+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T01:12:56.009046+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:56.163625+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"136830"},"request_uri":"http://127.0.0.1:8000/_wdt/136830","method":"GET"} []
[2020-03-11T01:12:56.220850+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T01:12:56.231976+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T01:12:56.235639+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T01:12:56.238290+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:56.549852+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T01:12:56.557998+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:56.665106+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7c81d6"},"request_uri":"http://127.0.0.1:8000/_wdt/7c81d6","method":"GET"} []
[2020-03-11T01:12:56.746651+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T01:12:56.751251+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T01:12:56.753338+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T01:12:56.755525+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:58.397855+01:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"53"},"request_uri":"http://localhost:8000/api/conferences/53","method":"DELETE"} []
[2020-03-11T01:12:58.399305+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T01:12:58.404692+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ WHERE c0_.id = ? [53] []
[2020-03-11T01:12:58.408885+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T01:12:58.409513+01:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [53] []
[2020-03-11T01:12:58.410310+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T10:07:09.775500+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T10:07:09.830176+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T10:07:10.189163+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"01ae91"},"request_uri":"http://127.0.0.1:8000/_wdt/01ae91","method":"GET"} []
[2020-03-11T10:07:10.290469+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-11T10:07:12.308903+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T10:07:12.390824+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T10:07:12.403725+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T10:07:12.406984+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T10:07:17.345932+01:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"54"},"request_uri":"http://localhost:8000/api/conferences/54","method":"DELETE"} []
[2020-03-11T10:07:17.346576+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T10:07:17.356540+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ WHERE c0_.id = ? [54] []
[2020-03-11T10:07:17.360319+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T10:07:17.369033+01:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [54] []
[2020-03-11T10:07:17.369522+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T10:07:37.475272+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/conferences","method":"GET"} []
[2020-03-11T10:07:37.481568+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T10:07:37.483756+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T10:07:37.486524+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T10:37:33.550455+01:00] php.DEBUG: Warning: filemtime(): stat failed for /home/simon/Bureau/devWeb/abbottApp/config/routes/dev/framework.yaml {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/config/Resource/FileResource.php","line":65,"trace":[{"file":"/home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/config/Resource/SelfCheckingResourceChecker.php","line":34,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2020-03-11T10:37:33.652685+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T10:37:33.682826+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T10:37:33.761680+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-11T10:37:33.770092+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T10:37:34.099894+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1e1b3f"},"request_uri":"http://127.0.0.1:8000/_wdt/1e1b3f","method":"GET"} []
[2020-03-11T10:37:34.215157+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f98283"},"request_uri":"http://127.0.0.1:8000/_wdt/f98283","method":"GET"} []
[2020-03-11T10:37:37.597577+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T10:37:37.650021+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T10:37:37.666859+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T10:37:37.671412+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T10:38:37.631167+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-11T10:38:37.636834+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T10:38:37.639020+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T10:38:37.643704+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T10:38:44.307745+01:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"55"},"request_uri":"http://localhost:8000/api/conferences/55","method":"DELETE"} []
[2020-03-11T10:38:44.308872+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-11T10:38:44.316879+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ WHERE c0_.id = ? [55] []
[2020-03-11T10:38:44.320460+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-11T10:38:44.328977+01:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [55] []
[2020-03-11T10:38:44.329364+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-11T10:50:58.454011+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/conferences","method":"GET"} []
[2020-03-11T10:50:58.462896+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-11T10:50:58.466880+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-11T10:50:58.469368+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-17T21:05:12.405737+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-17T21:05:12.456489+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-17T21:05:12.997196+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9c480e"},"request_uri":"http://127.0.0.1:8000/_wdt/9c480e","method":"GET"} []
[2020-03-17T21:05:28.498799+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-17T21:05:28.506461+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-17T21:05:28.993923+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0ffd66"},"request_uri":"http://127.0.0.1:8000/_wdt/0ffd66","method":"GET"} []
[2020-03-17T21:06:12.483387+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-17T21:06:12.582737+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-17T21:06:12.596729+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-17T21:06:12.600016+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-17T21:10:21.628893+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-17T21:10:21.630483+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-17T21:10:21.635154+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-17T21:10:21.635809+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-17T21:10:21.637524+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-17T21:10:21.639462+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-17T21:10:21.639830+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'conference' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-17T21:10:21.640409+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'conference' */ WHERE k.table_name = 'conference' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-17T21:10:21.640811+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'conference' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-17T21:10:21.641139+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'conference' [] []
[2020-03-17T21:10:21.641447+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-17T21:10:21.641916+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-17T21:10:21.642272+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-17T21:10:21.642607+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-17T21:10:28.690475+01:00] console.ERROR: Error thrown while running command "'make:migrations:migrate'". Message: "There are no commands defined in the "make:migrations" namespace.  Did you mean one of these?     doctrine:migrations     make     make:serializer" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\NamespaceNotFoundException(code: 0): There are no commands defined in the \"make:migrations\" namespace.\n\nDid you mean one of these?\n    doctrine:migrations\n    make\n    make:serializer at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/console/Application.php:574)","command":"'make:migrations:migrate'","message":"There are no commands defined in the \"make:migrations\" namespace.\n\nDid you mean one of these?\n    doctrine:migrations\n    make\n    make:serializer"} []
[2020-03-17T21:10:41.944170+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-17T21:10:41.945562+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-17T21:10:41.950176+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-17T21:10:41.950691+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-17T21:10:41.952403+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-17T21:10:41.953198+01:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-17T21:10:48.442746+01:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355', '20200317201021') ORDER BY version DESC LIMIT 1 [] []
[2020-03-17T21:10:48.446462+01:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-17T21:10:48.452817+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T21:10:48.496937+01:00] doctrine.DEBUG: CREATE TABLE users (id INT AUTO_INCREMENT NOT NULL, lastname VARCHAR(255) NOT NULL, firstname VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-03-17T21:10:48.589779+01:00] doctrine.DEBUG: INSERT INTO migration_versions (version, executed_at) VALUES (?, ?) ["20200317201021","2020-03-17 20:10:48"] []
[2020-03-17T21:10:48.602373+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-17T21:12:32.682110+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-17T21:12:32.683439+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-17T21:12:32.688005+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-17T21:12:32.688521+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-17T21:12:32.690250+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-17T21:12:32.691436+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-17T21:12:32.691823+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'conference' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-17T21:12:32.692396+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'conference' */ WHERE k.table_name = 'conference' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-17T21:12:32.692811+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'conference' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-17T21:12:32.693138+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'conference' [] []
[2020-03-17T21:12:32.693438+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-17T21:12:32.693909+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-17T21:12:32.694282+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-17T21:12:32.694593+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-17T21:12:32.694886+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'users' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-17T21:12:32.695359+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'users' */ WHERE k.table_name = 'users' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-17T21:12:32.695694+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'users' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-17T21:12:32.695924+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'users' [] []
[2020-03-17T21:12:34.403654+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-17T21:12:34.404975+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-17T21:12:34.409490+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-17T21:12:34.409992+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-17T21:12:34.411705+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-17T21:12:34.412523+01:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-17T21:12:35.223617+01:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355', '20200317201021', '20200317201232') ORDER BY version DESC LIMIT 1 [] []
[2020-03-17T21:12:35.224565+01:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-17T21:12:35.225895+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T21:12:35.240061+01:00] doctrine.DEBUG: ALTER TABLE users ADD password VARCHAR(255) NOT NULL [] []
[2020-03-17T21:12:35.417037+01:00] doctrine.DEBUG: INSERT INTO migration_versions (version, executed_at) VALUES (?, ?) ["20200317201232","2020-03-17 20:12:35"] []
[2020-03-17T21:12:35.424972+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-17T21:15:21.116835+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://127.0.0.1:8000/api","method":"GET"} []
[2020-03-17T21:15:21.129821+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-17T21:15:21.469202+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"70315f"},"request_uri":"http://127.0.0.1:8000/_wdt/70315f","method":"GET"} []
[2020-03-17T21:17:58.185065+01:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Users","_api_collection_operation_name":"get"},"request_uri":"http://127.0.0.1:8000/api/users","method":"GET"} []
[2020-03-17T21:17:58.213597+01:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.lastname AS lastname_1, u0_.firstname AS firstname_2, u0_.email AS email_3, u0_.password AS password_4 FROM users u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-03-17T21:17:58.225169+01:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM users u0_ [] []
[2020-03-17T21:17:58.227811+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-17T21:50:33.473621+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /api/login_check"" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /api/login_check\" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/login_check/\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-17T22:20:05.044371+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /api/login_check"" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /api/login_check\" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/login_check/\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-17T22:20:05.427696+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ece2b2"},"request_uri":"http://127.0.0.1:8000/_wdt/ece2b2","method":"GET"} []
[2020-03-17T22:24:43.987109+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"GET"} []
[2020-03-17T22:24:43.988831+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-17T22:24:43.989124+01:00] request.WARNING: Unable to look for the controller as the "_controller" parameter is missing. [] []
[2020-03-17T22:24:43.990420+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "Unable to find the controller for path "/api/login_check". The route is wrongly configured." at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/HttpKernel.php line 129 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): Unable to find the controller for path \"/api/login_check\". The route is wrongly configured. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/HttpKernel.php:129)"} []
[2020-03-17T22:24:44.170445+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"73a056"},"request_uri":"http://127.0.0.1:8000/_wdt/73a056","method":"GET"} []
[2020-03-17T22:25:40.328615+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-17T22:25:40.355216+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): Username \"alfred.tanguy@alves.com\" does not exist. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/User/InMemoryUserProvider.php:101)"} []
[2020-03-17T22:27:31.355248+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-17T22:27:31.364582+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\BadRequestHttpException: "The key "username" must be provided." at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/UsernamePasswordJsonAuthenticationListener.php line 105 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\BadRequestHttpException(code: 0): The key \"username\" must be provided. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/UsernamePasswordJsonAuthenticationListener.php:105)\n[previous exception] [object] (Symfony\\Component\\PropertyAccess\\Exception\\NoSuchPropertyException(code: 0): Neither the property \"username\" nor one of the methods \"getUsername()\", \"username()\", \"isUsername()\", \"hasUsername()\", \"__get()\" exist and have public access in class \"stdClass\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/property-access/PropertyAccessor.php:404)"} []
[2020-03-17T22:27:57.435442+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-17T22:27:57.436523+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): Username \"Admin@admin.com\" does not exist. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/User/InMemoryUserProvider.php:101)"} []
[2020-03-17T22:28:50.439747+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-17T22:28:50.441971+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\BadRequestHttpException: "The key "username" must be provided." at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/UsernamePasswordJsonAuthenticationListener.php line 105 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\BadRequestHttpException(code: 0): The key \"username\" must be provided. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/UsernamePasswordJsonAuthenticationListener.php:105)\n[previous exception] [object] (Symfony\\Component\\PropertyAccess\\Exception\\NoSuchPropertyException(code: 0): Neither the property \"username\" nor one of the methods \"getUsername()\", \"username()\", \"isUsername()\", \"hasUsername()\", \"__get()\" exist and have public access in class \"stdClass\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/property-access/PropertyAccessor.php:404)"} []
[2020-03-17T22:31:45.787890+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-17T22:31:45.789098+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): Username \"Admin@admin.com\" does not exist. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/User/InMemoryUserProvider.php:101)"} []
[2020-03-17T22:32:54.401030+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-17T22:32:54.402301+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): Username \"Admin@admin.com\" does not exist. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/User/InMemoryUserProvider.php:101)"} []
[2020-03-17T22:41:24.637120+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T22:41:24.668965+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-17T22:41:24.669918+01:00] doctrine.DEBUG: DELETE FROM users [] []
[2020-03-17T22:41:24.708407+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-17T22:41:24.719525+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'App\DataFixtures\User' not found" {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)","command":"doctrine:fixtures:load","message":"Class 'App\\DataFixtures\\User' not found"} []
[2020-03-17T22:41:24.721436+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-17T22:41:24.723006+01:00] php.CRITICAL: Uncaught Error: Class 'App\DataFixtures\User' not found {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)"} []
[2020-03-17T22:41:27.746241+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T22:41:27.766564+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-17T22:41:27.766930+01:00] doctrine.DEBUG: DELETE FROM users [] []
[2020-03-17T22:41:27.777962+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-17T22:41:27.785871+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'App\DataFixtures\User' not found" {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)","command":"doctrine:fixtures:load","message":"Class 'App\\DataFixtures\\User' not found"} []
[2020-03-17T22:41:27.786131+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-17T22:41:27.786304+01:00] php.CRITICAL: Uncaught Error: Class 'App\DataFixtures\User' not found {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)"} []
[2020-03-17T22:42:49.110836+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T22:42:49.142553+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-17T22:42:49.142892+01:00] doctrine.DEBUG: DELETE FROM users [] []
[2020-03-17T22:42:49.159494+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-17T22:42:49.183212+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'App\DataFixtures\User' not found" {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)","command":"doctrine:fixtures:load","message":"Class 'App\\DataFixtures\\User' not found"} []
[2020-03-17T22:42:49.184170+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-17T22:42:49.184756+01:00] php.CRITICAL: Uncaught Error: Class 'App\DataFixtures\User' not found {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)"} []
[2020-03-17T22:44:36.979411+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T22:44:37.031919+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-17T22:44:37.032371+01:00] doctrine.DEBUG: DELETE FROM users [] []
[2020-03-17T22:44:37.047603+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-17T22:44:37.060916+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'App\DataFixtures\User' not found" {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)","command":"doctrine:fixtures:load","message":"Class 'App\\DataFixtures\\User' not found"} []
[2020-03-17T22:44:37.062620+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-17T22:44:37.063792+01:00] php.CRITICAL: Uncaught Error: Class 'App\DataFixtures\User' not found {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)"} []
[2020-03-17T22:44:53.423192+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T22:44:53.459131+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-17T22:44:53.459458+01:00] doctrine.DEBUG: DELETE FROM users [] []
[2020-03-17T22:44:53.470027+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-17T22:44:53.510007+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'App\Entity\User' not found" {"exception":"[object] (Error(code: 0): Class 'App\\Entity\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)","command":"doctrine:fixtures:load","message":"Class 'App\\Entity\\User' not found"} []
[2020-03-17T22:44:53.511706+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-17T22:44:53.512984+01:00] php.CRITICAL: Uncaught Error: Class 'App\Entity\User' not found {"exception":"[object] (Error(code: 0): Class 'App\\Entity\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)"} []
[2020-03-17T22:46:26.114327+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T22:46:26.151417+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-17T22:46:26.151746+01:00] doctrine.DEBUG: DELETE FROM users [] []
[2020-03-17T22:46:26.187348+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-17T22:46:26.203323+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'App\DataFixtures\User' not found" {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)","command":"doctrine:fixtures:load","message":"Class 'App\\DataFixtures\\User' not found"} []
[2020-03-17T22:46:26.204350+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-17T22:46:26.204987+01:00] php.CRITICAL: Uncaught Error: Class 'App\DataFixtures\User' not found {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)"} []
[2020-03-17T22:46:41.600118+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T22:46:41.641121+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-17T22:46:41.641476+01:00] doctrine.DEBUG: DELETE FROM users [] []
[2020-03-17T22:46:41.697120+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-17T22:46:41.706265+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Class 'App\DataFixtures\User' not found" {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)","command":"doctrine:fixtures:load","message":"Class 'App\\DataFixtures\\User' not found"} []
[2020-03-17T22:46:41.706566+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-17T22:46:41.706754+01:00] php.CRITICAL: Uncaught Error: Class 'App\DataFixtures\User' not found {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\User' not found at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:29)"} []
[2020-03-17T22:46:56.551518+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T22:46:56.588087+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-17T22:46:56.589632+01:00] doctrine.DEBUG: DELETE FROM users [] []
[2020-03-17T22:46:56.611504+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-17T22:46:56.619355+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Argument 1 passed to Symfony\Component\Security\Core\Encoder\UserPasswordEncoder::encodePassword() must be an instance of Symfony\Component\Security\Core\User\UserInterface, instance of App\Entity\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 33" {"exception":"[object] (TypeError(code: 0): Argument 1 passed to Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoder::encodePassword() must be an instance of Symfony\\Component\\Security\\Core\\User\\UserInterface, instance of App\\Entity\\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 33 at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Encoder/UserPasswordEncoder.php:33)","command":"doctrine:fixtures:load","message":"Argument 1 passed to Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoder::encodePassword() must be an instance of Symfony\\Component\\Security\\Core\\User\\UserInterface, instance of App\\Entity\\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 33"} []
[2020-03-17T22:46:56.619641+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-17T22:46:56.619812+01:00] php.CRITICAL: Uncaught Error: Argument 1 passed to Symfony\Component\Security\Core\Encoder\UserPasswordEncoder::encodePassword() must be an instance of Symfony\Component\Security\Core\User\UserInterface, instance of App\Entity\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 33 {"exception":"[object] (TypeError(code: 0): Argument 1 passed to Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoder::encodePassword() must be an instance of Symfony\\Component\\Security\\Core\\User\\UserInterface, instance of App\\Entity\\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 33 at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Encoder/UserPasswordEncoder.php:33)"} []
[2020-03-17T22:51:21.275399+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-17T22:51:21.316367+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-17T22:51:21.316897+01:00] doctrine.DEBUG: DELETE FROM users [] []
[2020-03-17T22:51:21.326905+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-17T22:51:21.365020+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "Argument 1 passed to Symfony\Component\Security\Core\Encoder\UserPasswordEncoder::encodePassword() must be an instance of Symfony\Component\Security\Core\User\UserInterface, instance of App\Entity\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 30" {"exception":"[object] (TypeError(code: 0): Argument 1 passed to Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoder::encodePassword() must be an instance of Symfony\\Component\\Security\\Core\\User\\UserInterface, instance of App\\Entity\\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 30 at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Encoder/UserPasswordEncoder.php:33)","command":"doctrine:fixtures:load","message":"Argument 1 passed to Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoder::encodePassword() must be an instance of Symfony\\Component\\Security\\Core\\User\\UserInterface, instance of App\\Entity\\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 30"} []
[2020-03-17T22:51:21.365314+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-17T22:51:21.365542+01:00] php.CRITICAL: Uncaught Error: Argument 1 passed to Symfony\Component\Security\Core\Encoder\UserPasswordEncoder::encodePassword() must be an instance of Symfony\Component\Security\Core\User\UserInterface, instance of App\Entity\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 30 {"exception":"[object] (TypeError(code: 0): Argument 1 passed to Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoder::encodePassword() must be an instance of Symfony\\Component\\Security\\Core\\User\\UserInterface, instance of App\\Entity\\Users given, called in /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 30 at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Encoder/UserPasswordEncoder.php:33)"} []
[2020-03-18T13:01:00.348356+01:00] console.ERROR: Error thrown while running command "'make:migrations'". Message: "Command "make:migrations" is not defined.  Did you mean one of these?     doctrine:migrations:diff     doctrine:migrations:dump-schema     doctrine:migrations:execute     doctrine:migrations:generate     doctrine:migrations:latest     doctrine:migrations:migrate     doctrine:migrations:rollup     doctrine:migrations:status     doctrine:migrations:up-to-date     doctrine:migrations:version     make:auth     make:command     make:controller     make:crud     make:entity     make:fixtures     make:form     make:functional-test     make:migration     make:registration-form     make:serializer:encoder     make:serializer:normalizer     make:subscriber     make:twig-extension     make:unit-test     make:user     make:validator     make:voter" {"exception":"[object] (Symfony\\Component\\Console\\Exception\\CommandNotFoundException(code: 0): Command \"make:migrations\" is not defined.\n\nDid you mean one of these?\n    doctrine:migrations:diff\n    doctrine:migrations:dump-schema\n    doctrine:migrations:execute\n    doctrine:migrations:generate\n    doctrine:migrations:latest\n    doctrine:migrations:migrate\n    doctrine:migrations:rollup\n    doctrine:migrations:status\n    doctrine:migrations:up-to-date\n    doctrine:migrations:version\n    make:auth\n    make:command\n    make:controller\n    make:crud\n    make:entity\n    make:fixtures\n    make:form\n    make:functional-test\n    make:migration\n    make:registration-form\n    make:serializer:encoder\n    make:serializer:normalizer\n    make:subscriber\n    make:twig-extension\n    make:unit-test\n    make:user\n    make:validator\n    make:voter at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/console/Application.php:644)","command":"'make:migrations'","message":"Command \"make:migrations\" is not defined.\n\nDid you mean one of these?\n    doctrine:migrations:diff\n    doctrine:migrations:dump-schema\n    doctrine:migrations:execute\n    doctrine:migrations:generate\n    doctrine:migrations:latest\n    doctrine:migrations:migrate\n    doctrine:migrations:rollup\n    doctrine:migrations:status\n    doctrine:migrations:up-to-date\n    doctrine:migrations:version\n    make:auth\n    make:command\n    make:controller\n    make:crud\n    make:entity\n    make:fixtures\n    make:form\n    make:functional-test\n    make:migration\n    make:registration-form\n    make:serializer:encoder\n    make:serializer:normalizer\n    make:subscriber\n    make:twig-extension\n    make:unit-test\n    make:user\n    make:validator\n    make:voter"} []
[2020-03-18T13:01:05.850110+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-18T13:01:05.863000+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-18T13:01:05.877639+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-18T13:01:05.878945+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-18T13:01:05.881381+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-18T13:01:05.883342+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-18T13:01:05.883792+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'conference' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-18T13:01:05.884879+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'conference' */ WHERE k.table_name = 'conference' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-18T13:01:05.885909+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'conference' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-18T13:01:05.886568+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'conference' [] []
[2020-03-18T13:01:05.887186+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-18T13:01:05.887795+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-18T13:01:05.888160+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-18T13:01:05.888447+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-18T13:01:05.888731+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'users' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-18T13:01:05.889284+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'users' */ WHERE k.table_name = 'users' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-18T13:01:05.889697+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'users' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-18T13:01:05.890032+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'users' [] []
[2020-03-18T13:01:17.166320+01:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-18T13:01:17.167758+01:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-18T13:01:17.174391+01:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-18T13:01:17.174908+01:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-18T13:01:17.176680+01:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-18T13:01:17.177666+01:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-18T13:01:19.497876+01:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355', '20200317201021', '20200317201232', '20200318120105') ORDER BY version DESC LIMIT 1 [] []
[2020-03-18T13:01:19.500116+01:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-18T13:01:19.502767+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-18T13:01:19.544466+01:00] doctrine.DEBUG: CREATE TABLE user (id INT AUTO_INCREMENT NOT NULL, email VARCHAR(180) NOT NULL, roles JSON NOT NULL, password VARCHAR(255) NOT NULL, first_name VARCHAR(255) NOT NULL, last_name VARCHAR(255) NOT NULL, gsm VARCHAR(255) DEFAULT NULL, profile_pic VARCHAR(255) DEFAULT NULL, UNIQUE INDEX UNIQ_8D93D649E7927C74 (email), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-03-18T13:01:19.607127+01:00] doctrine.DEBUG: DROP TABLE users [] []
[2020-03-18T13:01:19.636622+01:00] doctrine.DEBUG: INSERT INTO migration_versions (version, executed_at) VALUES (?, ?) ["20200318120105","2020-03-18 12:01:19"] []
[2020-03-18T13:01:19.646578+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-18T13:02:51.011887+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-18T13:02:51.057067+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-18T13:02:51.057730+01:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-03-18T13:02:51.091929+01:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-03-18T13:02:51.099892+01:00] console.ERROR: Error thrown while running command "doctrine:fixtures:load". Message: "No encoder has been configured for account "App\Entity\User"." {"exception":"[object] (RuntimeException(code: 0): No encoder has been configured for account \"App\\Entity\\User\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Encoder/EncoderFactory.php:53)","command":"doctrine:fixtures:load","message":"No encoder has been configured for account \"App\\Entity\\User\"."} []
[2020-03-18T13:02:51.100405+01:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2020-03-18T13:09:14.216278+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-18T13:09:14.272782+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-18T13:09:14.273365+01:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-03-18T13:09:14.449864+01:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, first_name, last_name, gsm, profile_pic) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.com","2":[],"3":"$argon2id$v=19$m=65536,t=4 [...]","4":"Simon","5":"Mohimont","6":null,"7":null} []
[2020-03-18T13:09:14.452120+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-18T13:10:00.103180+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-18T13:10:00.135655+01:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-03-18T13:10:00.135981+01:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-03-18T13:10:00.301298+01:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, first_name, last_name, gsm, profile_pic) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.com","2":[],"3":"$argon2id$v=19$m=65536,t=4 [...]","4":"Simon","5":"Mohimont","6":null,"7":null} []
[2020-03-18T13:10:00.302371+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-18T13:10:20.931712+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-18T13:10:20.933638+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): Username \"simon.mohimont@hotmail.com\" does not exist. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/User/InMemoryUserProvider.php:101)"} []
[2020-03-18T13:10:51.356912+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-18T13:10:51.360741+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\BadRequestHttpException: "The key "password" must be provided." at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/UsernamePasswordJsonAuthenticationListener.php line 111 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\BadRequestHttpException(code: 0): The key \"password\" must be provided. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/UsernamePasswordJsonAuthenticationListener.php:111)\n[previous exception] [object] (Symfony\\Component\\PropertyAccess\\Exception\\NoSuchPropertyException(code: 0): Neither the property \"password\" nor one of the methods \"getPassword()\", \"password()\", \"isPassword()\", \"hasPassword()\", \"__get()\" exist and have public access in class \"stdClass\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/property-access/PropertyAccessor.php:404)"} []
[2020-03-18T13:11:36.222830+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-18T13:11:36.223961+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): Username \"simon.mohimont@hotmail.com\" does not exist. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/User/InMemoryUserProvider.php:101)"} []
[2020-03-18T13:18:26.962006+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-18T13:18:26.963308+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): Username \"simon.mohimont@hotmail.com\" does not exist. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/User/InMemoryUserProvider.php:101)"} []
[2020-03-18T13:18:33.549810+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-18T13:18:33.551225+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): Username \"simon.mohimont@hotmail.com\" does not exist. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/User/InMemoryUserProvider.php:101)"} []
[2020-03-18T13:31:37.901955+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://127.0.0.1:8000/api/login_check","method":"POST"} []
[2020-03-18T13:31:37.915048+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T13:31:38.103748+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T13:32:38.164464+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:32:38.173597+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:32:38.957016+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e85277"},"request_uri":"http://localhost:8000/_wdt/e85277","method":"GET"} []
[2020-03-18T13:32:39.080970+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://localhost:8000/")" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://localhost:8000/\") at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-18T13:38:07.100894+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:38:07.105195+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:38:07.790105+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e22156"},"request_uri":"http://localhost:8000/_wdt/e22156","method":"GET"} []
[2020-03-18T13:38:28.439712+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:38:28.444297+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:38:29.124002+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8060b9"},"request_uri":"http://localhost:8000/_wdt/8060b9","method":"GET"} []
[2020-03-18T13:41:04.634916+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:41:04.640317+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:41:05.206735+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9f7dc9"},"request_uri":"http://localhost:8000/_wdt/9f7dc9","method":"GET"} []
[2020-03-18T13:44:38.887788+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:44:38.893379+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:44:39.550664+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"483fb6"},"request_uri":"http://localhost:8000/_wdt/483fb6","method":"GET"} []
[2020-03-18T13:44:42.155570+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:44:42.161142+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:44:42.783278+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"777386"},"request_uri":"http://localhost:8000/_wdt/777386","method":"GET"} []
[2020-03-18T13:45:42.506935+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:45:42.511020+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:45:43.053381+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0c592c"},"request_uri":"http://localhost:8000/_wdt/0c592c","method":"GET"} []
[2020-03-18T13:48:38.999988+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:48:39.004288+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:48:39.583933+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"edba98"},"request_uri":"http://localhost:8000/_wdt/edba98","method":"GET"} []
[2020-03-18T13:48:59.011758+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:48:59.016491+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:48:59.546926+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1ffbe3"},"request_uri":"http://localhost:8000/_wdt/1ffbe3","method":"GET"} []
[2020-03-18T13:50:55.723833+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:50:55.729239+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:50:56.258805+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b96265"},"request_uri":"http://localhost:8000/_wdt/b96265","method":"GET"} []
[2020-03-18T13:53:17.076709+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:53:17.088002+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:53:17.685728+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ad1769"},"request_uri":"http://localhost:8000/_wdt/ad1769","method":"GET"} []
[2020-03-18T13:53:43.067114+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:53:43.070985+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:53:43.593759+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b4fd62"},"request_uri":"http://localhost:8000/_wdt/b4fd62","method":"GET"} []
[2020-03-18T13:56:23.606439+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:56:23.610659+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:56:24.331310+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"47de46"},"request_uri":"http://localhost:8000/_wdt/47de46","method":"GET"} []
[2020-03-18T13:57:38.302455+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:57:38.306323+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:57:38.875808+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2a547f"},"request_uri":"http://localhost:8000/_wdt/2a547f","method":"GET"} []
[2020-03-18T13:58:03.845773+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:58:03.851297+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:58:04.416554+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3c2d8e"},"request_uri":"http://localhost:8000/_wdt/3c2d8e","method":"GET"} []
[2020-03-18T13:58:59.401266+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T13:58:59.406602+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T13:58:59.960450+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0eb39d"},"request_uri":"http://localhost:8000/_wdt/0eb39d","method":"GET"} []
[2020-03-18T14:00:07.550949+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:00:07.555600+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:00:08.092346+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b18300"},"request_uri":"http://localhost:8000/_wdt/b18300","method":"GET"} []
[2020-03-18T14:00:25.443269+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:00:25.447120+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:00:25.991917+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7fb720"},"request_uri":"http://localhost:8000/_wdt/7fb720","method":"GET"} []
[2020-03-18T14:01:01.371593+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:01:01.375758+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:01:02.081336+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8ae926"},"request_uri":"http://localhost:8000/_wdt/8ae926","method":"GET"} []
[2020-03-18T14:01:15.204120+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:01:15.209318+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:01:15.772247+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d139f2"},"request_uri":"http://localhost:8000/_wdt/d139f2","method":"GET"} []
[2020-03-18T14:01:27.164277+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:01:27.173219+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:01:27.917832+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"540daa"},"request_uri":"http://localhost:8000/_wdt/540daa","method":"GET"} []
[2020-03-18T14:01:37.326167+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:01:37.329793+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["Admin@admin.com"] []
[2020-03-18T14:01:37.330552+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"Admin@admin.com\" not found. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-03-18T14:01:43.031024+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:01:43.035075+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:01:43.197409+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:20:20.072967+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:20:20.078088+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:20:20.934704+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d7e28b"},"request_uri":"http://localhost:8000/_wdt/d7e28b","method":"GET"} []
[2020-03-18T14:20:28.992733+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:20:28.995869+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:20:29.146350+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:21:14.460263+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:21:14.466128+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:21:15.076105+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e7dd08"},"request_uri":"http://localhost:8000/_wdt/e7dd08","method":"GET"} []
[2020-03-18T14:21:16.450744+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:21:16.456660+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:21:16.637002+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:21:21.308825+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:21:21.311501+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:21:21.477531+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2020-03-18T14:29:12.703901+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-03-18T14:29:12.786934+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:29:13.332149+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b873e8"},"request_uri":"http://localhost:8000/_wdt/b873e8","method":"GET"} []
[2020-03-18T14:29:27.197109+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:29:27.205651+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:29:27.523003+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0fb9e3"},"request_uri":"http://localhost:8000/_wdt/0fb9e3","method":"GET"} []
[2020-03-18T14:29:30.728845+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:29:30.748756+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:29:30.956822+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:30:27.180477+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:30:27.187779+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:30:27.505864+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"82b319"},"request_uri":"http://localhost:8000/_wdt/82b319","method":"GET"} []
[2020-03-18T14:30:32.064020+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:30:32.088757+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:30:32.091051+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:30:32.095324+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:31:36.457756+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:31:36.461835+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:31:36.643879+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b2cae6"},"request_uri":"http://localhost:8000/_wdt/b2cae6","method":"GET"} []
[2020-03-18T14:31:36.758366+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:31:36.766503+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:31:36.790025+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:31:36.792218+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:31:42.439027+01:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"62"},"request_uri":"http://localhost:8000/api/conferences/62","method":"DELETE"} []
[2020-03-18T14:31:42.440584+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:31:42.527700+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ WHERE c0_.id = ? [62] []
[2020-03-18T14:31:42.536090+01:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-18T14:31:42.538431+01:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [62] []
[2020-03-18T14:31:42.539920+01:00] doctrine.DEBUG: "COMMIT" [] []
[2020-03-18T14:36:25.203579+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:36:25.207989+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:36:25.539694+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0a0f26"},"request_uri":"http://localhost:8000/_wdt/0a0f26","method":"GET"} []
[2020-03-18T14:37:14.175067+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:37:14.183000+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:37:14.502806+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1e7b97"},"request_uri":"http://localhost:8000/_wdt/1e7b97","method":"GET"} []
[2020-03-18T14:37:16.188163+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:37:16.207290+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:37:16.211985+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:37:16.216342+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:37:17.660835+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:37:17.667463+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:37:17.669445+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:37:17.672117+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:37:20.658097+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:37:20.672560+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:37:20.676268+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:37:20.680284+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:37:42.948707+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:37:42.955671+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:37:43.209405+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"85fe4e"},"request_uri":"http://localhost:8000/_wdt/85fe4e","method":"GET"} []
[2020-03-18T14:38:01.052756+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:38:01.058787+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:38:01.302866+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"202ec0"},"request_uri":"http://localhost:8000/_wdt/202ec0","method":"GET"} []
[2020-03-18T14:38:02.325547+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:38:02.331003+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:38:02.461706+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"88f800"},"request_uri":"http://localhost:8000/_wdt/88f800","method":"GET"} []
[2020-03-18T14:38:06.336789+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:38:06.341476+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:38:06.526960+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:38:15.679916+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:38:15.683638+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:38:15.853526+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:38:19.661173+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:38:19.668606+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:38:19.670890+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:38:19.673881+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:38:22.367915+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:38:22.379543+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:38:22.382517+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:38:22.385699+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:41:08.223109+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:41:08.228035+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:41:08.452349+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"610fc2"},"request_uri":"http://localhost:8000/_wdt/610fc2","method":"GET"} []
[2020-03-18T14:41:08.533640+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:41:08.538549+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:41:08.538645+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:08.538694+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:08.544725+01:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:67)"} []
[2020-03-18T14:41:08.544902+01:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-03-18T14:41:12.451036+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:41:12.451829+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:41:12.451878+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:12.451911+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:12.453089+01:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:67)"} []
[2020-03-18T14:41:12.453147+01:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-03-18T14:41:14.589216+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:41:14.597300+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:41:14.750789+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:41:15.781071+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:41:15.782455+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:41:15.782547+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:15.782619+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:15.788665+01:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:15.790844+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:41:15.793123+01:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:15.793610+01:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:15.793698+01:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:15.819157+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:41:15.824846+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:41:19.824525+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:41:19.826069+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:41:19.826193+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:19.826312+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:19.827222+01:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:19.830425+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:41:19.831308+01:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:19.831716+01:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:19.831788+01:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:19.836194+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:41:19.838473+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:41:22.395573+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:41:22.397103+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:41:22.397212+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:22.397270+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:22.399022+01:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:67)"} []
[2020-03-18T14:41:22.399129+01:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-03-18T14:41:43.322768+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:41:43.327666+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:41:43.525869+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"280fb9"},"request_uri":"http://localhost:8000/_wdt/280fb9","method":"GET"} []
[2020-03-18T14:41:43.638206+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:41:43.640841+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:41:43.640904+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:43.640947+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:43.642294+01:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:67)"} []
[2020-03-18T14:41:43.642420+01:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-03-18T14:41:47.874571+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:41:47.880309+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:41:48.055823+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:41:49.187111+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:41:49.188038+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:41:49.188111+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:49.188177+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:49.188970+01:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:49.191393+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:41:49.193065+01:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:49.193946+01:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:49.194115+01:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:49.224313+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:41:49.234317+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:41:52.972726+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:41:52.973748+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:41:52.973812+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:52.973856+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:41:52.975473+01:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:67)"} []
[2020-03-18T14:41:52.975576+01:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-03-18T14:43:29.449914+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:43:29.455407+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:43:29.650194+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"349dca"},"request_uri":"http://localhost:8000/_wdt/349dca","method":"GET"} []
[2020-03-18T14:43:33.344187+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:43:33.355393+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:43:33.518898+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"379e63"},"request_uri":"http://localhost:8000/_wdt/379e63","method":"GET"} []
[2020-03-18T14:43:44.254202+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:43:44.261947+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:43:44.449330+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:43:45.973514+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:43:45.974422+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:43:45.974493+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:43:45.974573+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:43:45.975342+01:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:43:45.979351+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:43:46.008724+01:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:43:46.010941+01:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:43:46.011764+01:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:43:46.059132+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:43:46.085340+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:45:31.455527+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:45:31.459998+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:45:31.713061+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d86b17"},"request_uri":"http://localhost:8000/_wdt/d86b17","method":"GET"} []
[2020-03-18T14:51:54.703665+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:51:54.713687+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:51:54.905823+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:52:03.141357+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T14:52:03.142594+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:52:03.142697+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:52:03.142771+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:52:03.143689+01:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:52:03.146024+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:52:03.146674+01:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:52:03.146946+01:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:52:03.146986+01:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:52:03.151148+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T14:52:03.154629+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-18T14:52:11.183167+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:52:11.188036+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:52:11.379413+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:52:40.518660+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:52:40.525673+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:52:41.226722+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"902ef7"},"request_uri":"http://localhost:8000/_wdt/902ef7","method":"GET"} []
[2020-03-18T14:52:53.998080+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-03-18T14:52:53.998721+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:52:53.998770+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:52:53.998803+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:52:54.000000+01:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:67)"} []
[2020-03-18T14:52:54.000079+01:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-03-18T14:52:57.943177+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:52:57.948503+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:52:58.715124+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eb4744"},"request_uri":"http://localhost:8000/_wdt/eb4744","method":"GET"} []
[2020-03-18T14:53:01.985090+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-03-18T14:53:01.985806+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:53:01.985861+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:53:01.985896+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:53:01.987458+01:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:67)"} []
[2020-03-18T14:53:01.987637+01:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-03-18T14:53:04.808763+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:53:04.814714+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:53:05.443163+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"198e61"},"request_uri":"http://localhost:8000/_wdt/198e61","method":"GET"} []
[2020-03-18T14:53:07.530063+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T14:53:07.535821+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T14:53:07.747786+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T14:53:10.348634+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-03-18T14:53:10.349551+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:53:10.349640+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:53:10.349684+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:53:10.350918+01:00] security.INFO: An AuthenticationException was thrown; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AuthenticationCredentialsNotFoundException(code: 0): A Token was not found in the TokenStorage. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:67)"} []
[2020-03-18T14:53:10.350980+01:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-03-18T14:53:38.249667+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T14:53:38.257218+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:53:38.928616+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3383cc"},"request_uri":"http://localhost:8000/_wdt/3383cc","method":"GET"} []
[2020-03-18T14:53:41.449914+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-03-18T14:53:41.450623+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T14:53:41.450673+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:53:41.450707+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T14:53:41.450904+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T14:53:41.890636+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"25db21"},"request_uri":"http://localhost:8000/_wdt/25db21","method":"GET"} []
[2020-03-18T15:02:17.351818+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-18T15:02:17.357295+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-18T15:02:17.701912+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2b601d"},"request_uri":"http://localhost:8000/_wdt/2b601d","method":"GET"} []
[2020-03-18T15:03:28.828627+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-18T15:03:28.832105+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T15:03:29.021696+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-18T15:03:36.321223+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-18T15:03:36.322085+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-18T15:03:36.322138+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T15:03:36.322184+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T15:03:36.322742+01:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T15:03:36.325007+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-18T15:03:36.325617+01:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T15:03:36.325877+01:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T15:03:36.325914+01:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-18T15:03:36.340864+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-18T15:03:36.350211+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-23T22:00:18.568480+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-23T22:00:18.645580+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-23T22:00:19.248683+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4a71df"},"request_uri":"http://127.0.0.1:8000/_wdt/4a71df","method":"GET"} []
[2020-03-23T22:00:23.872118+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-23T22:00:23.878288+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-23T22:00:23.878386+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:00:23.878470+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:00:23.887754+01:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:00:23.890333+01:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:00:48.718474+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-23T22:00:48.780255+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-23T22:00:48.979555+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2020-03-23T22:00:50.768074+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-23T22:00:50.770534+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-23T22:00:50.968127+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2020-03-23T22:00:50.997275+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-23T22:00:51.002681+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-23T22:00:51.187601+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2020-03-23T22:00:52.605812+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-23T22:00:52.610783+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-23T22:00:52.769014+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2020-03-23T22:01:10.719487+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-23T22:01:10.725413+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-23T22:01:11.002997+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8db510"},"request_uri":"http://127.0.0.1:8000/_wdt/8db510","method":"GET"} []
[2020-03-23T22:01:11.772829+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-23T22:01:11.778975+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-23T22:01:11.958377+01:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:84)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): The presented password is invalid. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/DaoAuthenticationProvider.php:65)"} []
[2020-03-23T22:01:47.647740+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-03-23T22:01:47.652107+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-23T22:01:47.847888+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8b73fb"},"request_uri":"http://127.0.0.1:8000/_wdt/8b73fb","method":"GET"} []
[2020-03-23T22:01:50.541198+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-23T22:01:50.546125+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-23T22:01:50.707710+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-23T22:01:53.685848+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-23T22:01:53.687509+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-23T22:01:53.687656+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:01:53.687789+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:01:53.690197+01:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:01:53.692541+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-23T22:01:53.694257+01:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:01:53.694638+01:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:01:53.694694+01:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-23T22:01:53.750649+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-23T22:01:53.768435+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-25T09:10:02.717635+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-25T09:10:02.806761+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-25T09:10:03.426058+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"197a12"},"request_uri":"http://localhost:8000/_wdt/197a12","method":"GET"} []
[2020-03-25T09:10:03.557746+01:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://localhost:8000/")" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://localhost:8000/\") at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-03-25T09:20:29.837935+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-25T09:20:29.945351+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-25T09:20:30.132370+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-25T09:20:31.194738+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-25T09:20:31.221725+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-25T09:20:31.221809+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:20:31.221878+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:20:31.229218+01:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:20:31.233204+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-25T09:20:31.234929+01:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:20:31.235174+01:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:20:31.235213+01:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:20:31.394859+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-25T09:20:31.408936+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-25T09:26:46.076808+01:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-03-25T09:26:46.081535+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-25T09:26:46.279715+01:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-03-25T09:26:56.671215+01:00] request.INFO: Matched route "api_entrypoint". {"route":"api_entrypoint","route_parameters":{"_route":"api_entrypoint","_controller":"api_platform.action.entrypoint","_format":"","_api_respond":"true","index":"index"},"request_uri":"http://localhost:8000/api","method":"GET"} []
[2020-03-25T09:26:56.672265+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-25T09:26:56.672335+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:26:56.672379+01:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:26:56.672622+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-25T09:26:57.060327+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b4777c"},"request_uri":"http://localhost:8000/_wdt/b4777c","method":"GET"} []
[2020-03-25T09:27:46.987212+01:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-03-25T09:27:46.993531+01:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-03-25T09:27:47.490229+01:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"79aabd"},"request_uri":"http://localhost:8000/_wdt/79aabd","method":"GET"} []
[2020-03-25T09:27:52.429918+01:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-03-25T09:27:52.431902+01:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-03-25T09:27:52.431994+01:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:27:52.432072+01:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:27:52.433003+01:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:27:52.436700+01:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-03-25T09:27:52.437623+01:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:27:52.437999+01:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:27:52.438053+01:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-03-25T09:27:52.443475+01:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-03-25T09:27:52.445981+01:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-03-31T23:30:36.359505+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-31T23:30:36.362197+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-31T23:30:36.369195+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-31T23:30:36.370704+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-31T23:30:36.372930+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-31T23:30:36.375272+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-31T23:30:36.375585+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'conference' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-31T23:30:36.376290+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'conference' */ WHERE k.table_name = 'conference' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-31T23:30:36.377581+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'conference' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-31T23:30:36.377864+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'conference' [] []
[2020-03-31T23:30:36.378095+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-31T23:30:36.378483+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-31T23:30:36.378764+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-31T23:30:36.378989+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-31T23:30:36.379192+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-31T23:30:36.379692+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-31T23:30:36.380640+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-31T23:30:36.380925+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-03-31T23:30:45.492139+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-03-31T23:30:45.493440+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-03-31T23:30:45.497919+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-03-31T23:30:45.498366+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-03-31T23:30:45.499984+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-03-31T23:30:45.501731+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-31T23:30:46.805401+02:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355', '20200317201021', '20200317201232', '20200318120105', '20200331213036') ORDER BY version DESC LIMIT 1 [] []
[2020-03-31T23:30:46.809668+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-03-31T23:30:46.819312+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-03-31T23:30:46.864020+02:00] doctrine.DEBUG: CREATE TABLE event (id INT AUTO_INCREMENT NOT NULL, name VARCHAR(255) NOT NULL, description LONGTEXT DEFAULT NULL, date_start DATE NOT NULL, date_end DATE NOT NULL, place VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-03-31T23:30:46.969092+02:00] doctrine.DEBUG: CREATE TABLE admin (id INT AUTO_INCREMENT NOT NULL, user_id INT NOT NULL, event_id INT NOT NULL, responsabilities VARCHAR(255) DEFAULT NULL, INDEX IDX_880E0D76A76ED395 (user_id), INDEX IDX_880E0D7671F7E88B (event_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-03-31T23:30:47.097800+02:00] doctrine.DEBUG: CREATE TABLE medecin (id INT AUTO_INCREMENT NOT NULL, user_id INT NOT NULL, inami_number INT NOT NULL, speciality VARCHAR(255) DEFAULT NULL, UNIQUE INDEX UNIQ_1BDA53C6A76ED395 (user_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-03-31T23:30:47.210192+02:00] doctrine.DEBUG: CREATE TABLE participant (id INT AUTO_INCREMENT NOT NULL, user_id INT NOT NULL, event_id INT NOT NULL, INDEX IDX_D79F6B11A76ED395 (user_id), INDEX IDX_D79F6B1171F7E88B (event_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-03-31T23:30:47.340544+02:00] doctrine.DEBUG: CREATE TABLE speaker (id INT AUTO_INCREMENT NOT NULL, user_id INT NOT NULL, conference_id INT NOT NULL, description LONGTEXT DEFAULT NULL, INDEX IDX_7B85DB61A76ED395 (user_id), INDEX IDX_7B85DB61604B8382 (conference_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB [] []
[2020-03-31T23:30:47.460908+02:00] doctrine.DEBUG: ALTER TABLE admin ADD CONSTRAINT FK_880E0D76A76ED395 FOREIGN KEY (user_id) REFERENCES user (id) [] []
[2020-03-31T23:30:47.624811+02:00] doctrine.DEBUG: ALTER TABLE admin ADD CONSTRAINT FK_880E0D7671F7E88B FOREIGN KEY (event_id) REFERENCES event (id) [] []
[2020-03-31T23:30:47.803121+02:00] doctrine.DEBUG: ALTER TABLE medecin ADD CONSTRAINT FK_1BDA53C6A76ED395 FOREIGN KEY (user_id) REFERENCES user (id) [] []
[2020-03-31T23:30:47.980810+02:00] doctrine.DEBUG: ALTER TABLE participant ADD CONSTRAINT FK_D79F6B11A76ED395 FOREIGN KEY (user_id) REFERENCES user (id) [] []
[2020-03-31T23:30:48.153315+02:00] doctrine.DEBUG: ALTER TABLE participant ADD CONSTRAINT FK_D79F6B1171F7E88B FOREIGN KEY (event_id) REFERENCES event (id) [] []
[2020-03-31T23:30:48.324866+02:00] doctrine.DEBUG: ALTER TABLE speaker ADD CONSTRAINT FK_7B85DB61A76ED395 FOREIGN KEY (user_id) REFERENCES user (id) [] []
[2020-03-31T23:30:48.495913+02:00] doctrine.DEBUG: ALTER TABLE speaker ADD CONSTRAINT FK_7B85DB61604B8382 FOREIGN KEY (conference_id) REFERENCES conference (id) [] []
[2020-03-31T23:30:48.662452+02:00] doctrine.DEBUG: ALTER TABLE conference ADD event_id INT DEFAULT NULL, ADD informations LONGTEXT DEFAULT NULL, ADD room VARCHAR(255) DEFAULT NULL [] []
[2020-03-31T23:30:48.833629+02:00] doctrine.DEBUG: ALTER TABLE conference ADD CONSTRAINT FK_911533C871F7E88B FOREIGN KEY (event_id) REFERENCES event (id) [] []
[2020-03-31T23:30:49.026587+02:00] doctrine.DEBUG: CREATE INDEX IDX_911533C871F7E88B ON conference (event_id) [] []
[2020-03-31T23:30:49.115919+02:00] doctrine.DEBUG: ALTER TABLE user ADD telephone VARCHAR(255) DEFAULT NULL, ADD addresse VARCHAR(255) DEFAULT NULL, DROP gsm, DROP profile_pic [] []
[2020-03-31T23:30:49.285612+02:00] doctrine.DEBUG: INSERT INTO migration_versions (version, executed_at) VALUES (?, ?) ["20200331213036","2020-03-31 21:30:49"] []
[2020-03-31T23:30:49.294160+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-17T16:29:16.877140+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:29:16.980148+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:29:17.650181+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c50f80"},"request_uri":"http://127.0.0.1:8000/_wdt/c50f80","method":"GET"} []
[2020-04-17T16:29:17.961266+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-04-17T16:29:18.033789+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:29:18.041420+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:29:19.217629+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:29:19.224620+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:36:50.424934+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:36:50.444023+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:36:51.092999+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e14cd7"},"request_uri":"http://127.0.0.1:8000/_wdt/e14cd7","method":"GET"} []
[2020-04-17T16:36:51.674751+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:36:51.683484+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:36:53.909574+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:36:53.916280+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:36:54.516588+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:36:54.520618+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:36:56.942972+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:36:56.948861+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:38:50.655575+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:38:50.660403+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:38:52.559163+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:38:52.566408+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:39:09.623927+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:39:09.631526+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:39:09.911164+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0dd695"},"request_uri":"http://127.0.0.1:8000/_wdt/0dd695","method":"GET"} []
[2020-04-17T16:39:09.997248+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:39:10.002446+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:39:15.686723+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:39:15.690561+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:39:15.845976+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2d2aa7"},"request_uri":"http://127.0.0.1:8000/_wdt/2d2aa7","method":"GET"} []
[2020-04-17T16:39:15.888285+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:39:15.894417+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:39:24.384190+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:39:24.388183+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:39:24.554053+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5d200e"},"request_uri":"http://127.0.0.1:8000/_wdt/5d200e","method":"GET"} []
[2020-04-17T16:39:24.597166+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:39:24.602606+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:41:38.190899+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:41:38.201530+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:41:38.344273+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fac136"},"request_uri":"http://127.0.0.1:8000/_wdt/fac136","method":"GET"} []
[2020-04-17T16:41:39.204204+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:41:39.209385+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:42:14.217481+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:42:14.224718+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:42:14.442853+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9fffb6"},"request_uri":"http://127.0.0.1:8000/_wdt/9fffb6","method":"GET"} []
[2020-04-17T16:42:15.153472+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:42:15.162234+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:42:24.067347+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:42:24.071286+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:42:24.271007+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9bab46"},"request_uri":"http://127.0.0.1:8000/_wdt/9bab46","method":"GET"} []
[2020-04-17T16:42:24.349996+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:42:24.357408+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:45:00.456181+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:45:00.460591+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:45:00.711319+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a896f9"},"request_uri":"http://127.0.0.1:8000/_wdt/a896f9","method":"GET"} []
[2020-04-17T16:45:00.790126+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:45:00.795189+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:46:13.819360+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:46:13.824274+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:46:14.119850+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"363968"},"request_uri":"http://127.0.0.1:8000/_wdt/363968","method":"GET"} []
[2020-04-17T16:46:14.172701+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:46:14.176840+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:46:32.797520+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "POST /api/users" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"POST /api/users\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/users\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-04-17T16:46:35.529917+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "POST /api/users" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"POST /api/users\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/users\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-04-17T16:46:43.549498+02:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "POST /api/users" (from "http://127.0.0.1:8000/")" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php line 136 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"POST /api/users\" (from \"http://127.0.0.1:8000/\") at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/http-kernel/EventListener/RouterListener.php:136)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/api/users\". at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2020-04-17T16:47:18.934263+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:47:18.939822+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:47:19.768482+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1bc42d"},"request_uri":"http://127.0.0.1:8000/_wdt/1bc42d","method":"GET"} []
[2020-04-17T16:47:19.862569+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:47:19.876099+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:47:24.999026+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2020-04-17T16:47:25.000248+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T16:47:25.000346+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:47:25.000409+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:47:25.000776+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:47:25.008194+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-17T16:47:25.011566+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-17T16:48:44.964380+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2020-04-17T16:48:44.964958+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T16:48:44.965007+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:48:44.965042+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:48:44.965222+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:48:45.011910+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-17T16:48:45.029100+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.com","2":[],"3":"salut","4":"Mohimont","5":"Simon","6":null,"7":null} []
[2020-04-17T16:48:45.052669+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-04-17T16:48:45.069179+02:00] request.CRITICAL: Uncaught PHP Exception Doctrine\DBAL\Exception\UniqueConstraintViolationException: "An exception occurred while executing 'INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse) VALUES (?, ?, ?, ?, ?, ?, ?)' with params ["simon.mohimont@hotmail.com", "[]", "salut", "Mohimont", "Simon", null, null]:  SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'simon.mohimont@hotmail.com' for key 'UNIQ_8D93D649E7927C74'" at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php line 55 {"exception":"[object] (Doctrine\\DBAL\\Exception\\UniqueConstraintViolationException(code: 0): An exception occurred while executing 'INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse) VALUES (?, ?, ?, ?, ?, ?, ?)' with params [\"simon.mohimont@hotmail.com\", \"[]\", \"salut\", \"Mohimont\", \"Simon\", null, null]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'simon.mohimont@hotmail.com' for key 'UNIQ_8D93D649E7927C74' at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:55)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'simon.mohimont@hotmail.com' for key 'UNIQ_8D93D649E7927C74' at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:123)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'simon.mohimont@hotmail.com' for key 'UNIQ_8D93D649E7927C74' at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:121)"} []
[2020-04-17T16:49:02.776051+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2020-04-17T16:49:02.777791+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T16:49:02.777895+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:49:02.777946+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:49:02.778377+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:49:02.795370+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-17T16:49:02.796019+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimonta@hotmail.com","2":[],"3":"salut","4":"Mohimont","5":"Simon","6":null,"7":null} []
[2020-04-17T16:49:02.797774+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-17T16:49:02.812131+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t9.id AS id_10, t9.inami_number AS inami_number_11, t9.speciality AS speciality_12, t9.user_id AS user_id_13 FROM user t0 LEFT JOIN medecin t9 ON t9.user_id = t0.id WHERE t0.id = ? [4] []
[2020-04-17T16:49:02.895865+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T16:49:02.899939+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-17T16:49:02.902386+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-17T16:49:03.041961+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:49:03.047650+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:58:56.300554+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:58:56.308513+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:58:56.352954+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:58:56.357818+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:58:57.120518+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a68996"},"request_uri":"http://127.0.0.1:8000/_wdt/a68996","method":"GET"} []
[2020-04-17T16:58:57.202810+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:58:57.211282+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:59:05.693391+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2020-04-17T16:59:05.694809+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T16:59:05.694955+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:59:05.695086+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:59:05.695662+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:59:05.721229+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t9.id AS id_10, t9.inami_number AS inami_number_11, t9.speciality AS speciality_12, t9.user_id AS user_id_13 FROM user t0 LEFT JOIN medecin t9 ON t9.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-17T16:59:10.231921+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2020-04-17T16:59:10.233275+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T16:59:10.233402+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:59:10.233475+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T16:59:10.233928+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T16:59:10.243261+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t9.id AS id_10, t9.inami_number AS inami_number_11, t9.speciality AS speciality_12, t9.user_id AS user_id_13 FROM user t0 LEFT JOIN medecin t9 ON t9.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.comaa"] []
[2020-04-17T16:59:10.248527+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-17T16:59:10.249045+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.comaa","2":[],"3":"salut","4":"Mohimont","5":"Simon","6":null,"7":null} []
[2020-04-17T16:59:10.252461+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-17T16:59:10.262283+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t9.id AS id_10, t9.inami_number AS inami_number_11, t9.speciality AS speciality_12, t9.user_id AS user_id_13 FROM user t0 LEFT JOIN medecin t9 ON t9.user_id = t0.id WHERE t0.id = ? [5] []
[2020-04-17T16:59:10.282553+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-17T16:59:10.324988+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-17T16:59:10.325618+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-17T16:59:10.418520+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T16:59:10.424921+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:12:30.502595+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-17T17:12:30.505962+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:30.512395+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:30.513890+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:30.516312+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-17T17:12:30.518732+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-17T17:12:30.519185+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'admin' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:30.519758+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'admin' */ WHERE k.table_name = 'admin' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:30.521391+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'admin' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:30.521817+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'admin' [] []
[2020-04-17T17:12:30.522069+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'conference' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:30.522543+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'conference' */ WHERE k.table_name = 'conference' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:30.522886+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'conference' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:30.523264+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'conference' [] []
[2020-04-17T17:12:30.523657+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'event' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:30.524119+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'event' */ WHERE k.table_name = 'event' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:30.524426+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'event' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:30.524661+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'event' [] []
[2020-04-17T17:12:30.525317+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'medecin' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:30.525892+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'medecin' */ WHERE k.table_name = 'medecin' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:30.526325+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'medecin' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:30.526917+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'medecin' [] []
[2020-04-17T17:12:30.527267+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:30.527893+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:30.528265+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:30.528584+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-17T17:12:30.528889+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'participant' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:30.529373+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'participant' */ WHERE k.table_name = 'participant' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:30.530019+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'participant' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:30.530410+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'participant' [] []
[2020-04-17T17:12:30.530682+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'speaker' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:30.531169+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'speaker' */ WHERE k.table_name = 'speaker' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:30.531901+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'speaker' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:30.532296+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'speaker' [] []
[2020-04-17T17:12:30.532764+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'user' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:30.533268+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'user' */ WHERE k.table_name = 'user' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:30.533604+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'user' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:30.534024+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'user' [] []
[2020-04-17T17:12:34.898174+02:00] doctrine.DEBUG: SHOW FULL TABLES WHERE Table_type = 'BASE TABLE' [] []
[2020-04-17T17:12:34.899566+02:00] doctrine.DEBUG: SELECT COLUMN_NAME AS Field, COLUMN_TYPE AS Type, IS_NULLABLE AS `Null`, COLUMN_KEY AS `Key`, COLUMN_DEFAULT AS `Default`, EXTRA AS Extra, COLUMN_COMMENT AS Comment, CHARACTER_SET_NAME AS CharacterSet, COLLATION_NAME AS Collation FROM information_schema.COLUMNS WHERE TABLE_SCHEMA = 'abbott' AND TABLE_NAME = 'migration_versions' ORDER BY ORDINAL_POSITION ASC [] []
[2020-04-17T17:12:34.904453+02:00] doctrine.DEBUG: SELECT DISTINCT k.`CONSTRAINT_NAME`, k.`COLUMN_NAME`, k.`REFERENCED_TABLE_NAME`, k.`REFERENCED_COLUMN_NAME` /*!50116 , c.update_rule, c.delete_rule */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON   c.constraint_name = k.constraint_name AND   c.table_name = 'migration_versions' */ WHERE k.table_name = 'migration_versions' AND k.table_schema = 'abbott' /*!50116 AND c.constraint_schema = 'abbott' */ AND k.`REFERENCED_COLUMN_NAME` is not NULL [] []
[2020-04-17T17:12:34.904904+02:00] doctrine.DEBUG: SELECT NON_UNIQUE AS Non_Unique, INDEX_NAME AS Key_name, COLUMN_NAME AS Column_Name, SUB_PART AS Sub_Part, INDEX_TYPE AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_NAME = 'migration_versions' AND TABLE_SCHEMA = 'abbott' ORDER BY SEQ_IN_INDEX ASC [] []
[2020-04-17T17:12:34.906550+02:00] doctrine.DEBUG: SELECT ENGINE, AUTO_INCREMENT, TABLE_COLLATION, TABLE_COMMENT, CREATE_OPTIONS FROM information_schema.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_SCHEMA = DATABASE() AND TABLE_NAME = 'migration_versions' [] []
[2020-04-17T17:12:34.908412+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-04-17T17:12:37.036310+02:00] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20200309213355', '20200317201021', '20200317201232', '20200318120105', '20200331213036', '20200417151230') ORDER BY version DESC LIMIT 1 [] []
[2020-04-17T17:12:37.042836+02:00] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2020-04-17T17:12:37.052900+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-17T17:12:37.094258+02:00] doctrine.DEBUG: ALTER TABLE user ADD is_accepted TINYINT(1) NOT NULL [] []
[2020-04-17T17:12:37.261234+02:00] doctrine.DEBUG: INSERT INTO migration_versions (version, executed_at) VALUES (?, ?) ["20200417151230","2020-04-17 15:12:37"] []
[2020-04-17T17:12:37.270725+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-17T17:15:55.562769+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:15:55.567877+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:15:56.202934+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bc9fe4"},"request_uri":"http://127.0.0.1:8000/_wdt/bc9fe4","method":"GET"} []
[2020-04-17T17:15:56.926431+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:15:56.930432+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:16:36.020027+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:16:36.026615+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:16:36.744644+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bc6e7f"},"request_uri":"http://127.0.0.1:8000/_wdt/bc6e7f","method":"GET"} []
[2020-04-17T17:16:36.904758+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:16:36.910019+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:17:02.927933+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:17:02.936007+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:17:03.793843+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f5b47c"},"request_uri":"http://127.0.0.1:8000/_wdt/f5b47c","method":"GET"} []
[2020-04-17T17:17:03.823543+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:17:03.827947+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:17:06.125877+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-17T17:17:06.132885+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:17:06.649490+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-17T17:17:06.649990+02:00] doctrine.DEBUG: UPDATE user SET password = ? WHERE id = ? ["$argon2i$v=19$m=65536,t=4, [...]",2] []
[2020-04-17T17:17:06.652259+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-17T17:17:06.660242+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-17T17:17:06.754033+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:17:06.758443+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:17:07.883599+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:17:07.892525+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:17:07.950176+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-17T17:17:07.953403+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T17:17:07.953470+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:17:07.953517+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:17:07.958818+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:17:07.959838+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:17:07.963625+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:17:07.963904+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:17:07.963948+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:17:08.014552+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-17T17:17:08.015232+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:17:08.016350+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:17:08.036815+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:17:08.038259+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:17:08.038981+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:17:08.040563+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:17:08.041361+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:17:08.042253+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:17:08.043229+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:17:08.043865+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:17:08.044387+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:17:08.047467+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-17T17:21:01.353862+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:21:01.362535+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:21:02.075397+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d5cceb"},"request_uri":"http://127.0.0.1:8000/_wdt/d5cceb","method":"GET"} []
[2020-04-17T17:21:02.120561+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:21:02.126157+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:21:02.157652+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-17T17:21:02.163423+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T17:21:02.163553+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:02.163673+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:02.164946+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:02.166466+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:21:02.170308+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:02.170705+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:02.170779+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:02.175334+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-17T17:21:02.176249+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:21:02.176955+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:21:02.182346+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:21:02.184297+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:21:02.187502+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:21:02.188425+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:21:02.188840+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:21:02.189136+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:21:02.189643+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:21:02.190045+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:21:02.190399+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:21:02.191306+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-17T17:21:03.012375+02:00] request.INFO: Matched route "api_users_put_item". {"route":"api_users_put_item","route_parameters":{"_route":"api_users_put_item","_controller":"api_platform.action.put_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"put","id":"2"},"request_uri":"http://localhost:8000/api/users/2","method":"PUT"} []
[2020-04-17T17:21:03.013330+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T17:21:03.013428+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.013507+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.014236+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.017995+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:21:03.020421+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.020678+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.020729+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.023945+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [2] []
[2020-04-17T17:21:03.040671+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:21:03.041809+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:21:03.042427+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:21:03.044153+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:21:03.044866+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-17T17:21:03.045095+02:00] doctrine.DEBUG: UPDATE user SET roles = ?, is_accepted = ? WHERE id = ? [["ROLE_USER"],true,2] []
[2020-04-17T17:21:03.045680+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-17T17:21:03.053367+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.id = ? [2] []
[2020-04-17T17:21:03.054975+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:21:03.055406+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:21:03.055759+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [2] []
[2020-04-17T17:21:03.142846+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-17T17:21:03.145622+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T17:21:03.145706+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.145765+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.146375+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.147144+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:21:03.149010+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.149267+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.149311+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:03.154274+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-17T17:21:03.154766+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:21:03.155119+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:21:03.157630+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:21:03.158727+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:21:03.159229+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:21:03.159855+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:21:03.160243+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:21:03.160599+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:21:03.161407+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-17T17:21:14.039188+02:00] request.INFO: Matched route "api_users_delete_item". {"route":"api_users_delete_item","route_parameters":{"_route":"api_users_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\User","_api_item_operation_name":"delete","id":"5"},"request_uri":"http://localhost:8000/api/users/5","method":"DELETE"} []
[2020-04-17T17:21:14.040087+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T17:21:14.040182+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:14.040242+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:14.041439+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:14.045446+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:21:14.047990+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:14.048320+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:14.048371+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:21:14.050817+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.id = ? [5] []
[2020-04-17T17:21:14.051395+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [5] []
[2020-04-17T17:21:14.053337+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-17T17:21:14.053524+02:00] doctrine.DEBUG: DELETE FROM user WHERE id = ? [5] []
[2020-04-17T17:21:14.053939+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-17T17:22:40.495173+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:22:40.502859+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:22:41.446221+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5a8fb9"},"request_uri":"http://127.0.0.1:8000/_wdt/5a8fb9","method":"GET"} []
[2020-04-17T17:22:41.934097+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:22:41.940923+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:22:41.965043+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-17T17:22:41.968919+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T17:22:41.968992+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:22:41.969041+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:22:41.969588+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:22:41.970370+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:22:41.972839+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:22:41.973252+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:22:41.973338+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:22:41.979469+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-17T17:22:41.980439+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:22:41.985932+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:22:41.987423+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:22:41.987978+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:22:41.988877+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-17T17:29:07.046623+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:29:07.055673+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:29:07.723564+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a68d5f"},"request_uri":"http://127.0.0.1:8000/_wdt/a68d5f","method":"GET"} []
[2020-04-17T17:29:07.786295+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:29:07.797547+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:29:07.862010+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-17T17:29:07.868621+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T17:29:07.868761+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:29:07.868891+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:29:07.870220+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:29:07.871650+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:29:07.874851+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:29:07.875192+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:29:07.875272+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:29:07.879946+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-17T17:29:07.880524+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:29:07.886671+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:29:07.888502+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:29:07.889134+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [4] []
[2020-04-17T17:29:07.890386+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-17T17:29:08.406085+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:29:08.409626+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:29:09.634275+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-17T17:29:09.640078+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:29:09.817297+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-17T17:29:09.900489+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:29:09.907010+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:52:13.000410+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:52:13.008679+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:52:38.113203+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:52:38.118113+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:52:38.840769+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"23e16a"},"request_uri":"http://127.0.0.1:8000/_wdt/23e16a","method":"GET"} []
[2020-04-17T17:52:38.865273+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:52:38.869767+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:52:39.719127+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:52:39.723562+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:55:23.257169+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:55:23.268924+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:55:23.952209+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f270dd"},"request_uri":"http://127.0.0.1:8000/_wdt/f270dd","method":"GET"} []
[2020-04-17T17:55:23.976177+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:55:23.984052+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:55:25.633544+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:55:25.637783+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:55:26.258740+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:55:26.268048+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:55:27.637257+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?email=simon.mohimont%40hotmail.com","method":"GET"} []
[2020-04-17T17:55:27.644286+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-17T17:55:27.644444+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:55:27.644577+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-17T17:55:27.645101+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:55:27.648863+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-17T17:55:27.649148+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-17T17:55:27.683975+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:55:27.690380+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:57:32.657673+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:57:32.668546+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:57:33.429460+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f2e9b0"},"request_uri":"http://127.0.0.1:8000/_wdt/f2e9b0","method":"GET"} []
[2020-04-17T17:57:33.474015+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:57:33.479661+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:57:34.392576+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:57:34.397951+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:57:34.834488+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T17:57:34.840445+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T17:57:35.954245+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-17T17:57:35.960234+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-17T17:57:36.147119+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-17T18:01:49.167623+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T18:01:49.174070+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-17T18:01:49.911974+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"86dd04"},"request_uri":"http://127.0.0.1:8000/_wdt/86dd04","method":"GET"} []
[2020-04-17T18:01:49.940201+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://127.0.0.1:8000/","method":"GET"} []
[2020-04-17T18:01:49.947249+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:11:02.472971+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/config/routes/dev/framework.yaml {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/config/Resource/FileResource.php","line":65,"trace":[{"file":"/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/config/Resource/SelfCheckingResourceChecker.php","line":34,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2020-04-21T17:11:02.551742+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Config\Exception\LoaderLoadException: "An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) in . (which is being imported from "/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type." at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/config/Loader/FileLoader.php line 173 {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) in . (which is being imported from \"/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-04-21T17:11:02.719901+02:00] request.CRITICAL: Exception thrown when handling an exception (Symfony\Component\Config\Exception\LoaderLoadException: An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) in . (which is being imported from "/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/config/Loader/FileLoader.php line 173) {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) in . (which is being imported from \"/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-04-21T17:11:02.720317+02:00] php.CRITICAL: Uncaught Exception: An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) in . (which is being imported from "/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type. {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) in . (which is being imported from \"/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)\n[previous exception] [object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) in . (which is being imported from \"/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-04-21T17:11:02.722038+02:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Config\Exception\LoaderLoadException: "An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) in . (which is being imported from "/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type." at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/config/Loader/FileLoader.php line 173 {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) in . (which is being imported from \"/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)\n[previous exception] [object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) in . (which is being imported from \"/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-04-21T17:11:03.029398+02:00] request.CRITICAL: Exception thrown when handling an exception (Symfony\Component\Config\Exception\LoaderLoadException: An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) in . (which is being imported from "/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/config/Loader/FileLoader.php line 173) {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) in . (which is being imported from \"/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-04-21T17:11:03.029578+02:00] php.CRITICAL: Uncaught Exception: An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) in . (which is being imported from "/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/config/routes/api_platform.yaml"). Make sure there is a loader supporting the "api_platform" type. {"exception":"[object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) in . (which is being imported from \"/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)\n[previous exception] [object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) in . (which is being imported from \"/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)\n[previous exception] [object] (Symfony\\Component\\Config\\Exception\\LoaderLoadException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) in . (which is being imported from \"/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/config/routes/api_platform.yaml\"). Make sure there is a loader supporting the \"api_platform\" type. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/config/Loader/FileLoader.php:173)\n[previous exception] [object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 0): An exception occurred in driver: SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:93)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:31)\n[previous exception] [object] (PDOException(code: 1045): SQLSTATE[HY000] [1045] Access denied for user 'simon'@'localhost' (using password: YES) at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:27)"} []
[2020-04-21T17:11:27.940920+02:00] php.DEBUG: Warning: filemtime(): stat failed for /home/simon/Bureau/devWeb/Projet_Dev_Web/abbottApp/config/routes/dev/framework.yaml {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/config/Resource/FileResource.php","line":65,"trace":[{"file":"/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/config/Resource/SelfCheckingResourceChecker.php","line":34,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2020-04-21T17:11:28.032667+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:11:28.062450+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:11:28.562050+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1225c5"},"request_uri":"http://localhost:8000/_wdt/1225c5","method":"GET"} []
[2020-04-21T17:12:14.075349+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:12:14.084537+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:12:14.666113+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7a05b8"},"request_uri":"http://localhost:8000/_wdt/7a05b8","method":"GET"} []
[2020-04-21T17:12:14.744852+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:12:14.755766+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:12:15.200920+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"abb276"},"request_uri":"http://localhost:8000/_wdt/abb276","method":"GET"} []
[2020-04-21T17:12:17.872514+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:12:17.876466+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:12:17.876539+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:17.876599+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:17.880799+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:17.888217+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:12:17.897851+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:17.898330+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:17.898389+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:17.930003+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:12:17.931524+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:12:18.541412+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:12:18.542448+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:12:18.542576+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:18.542662+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:18.543551+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:18.548367+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:12:18.551463+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:18.551817+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:18.551878+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:18.567109+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:12:18.568360+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:12:21.292893+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T17:12:21.300072+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:12:21.527058+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-21T17:12:22.854079+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:12:22.856671+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:12:22.856725+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:22.856761+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:22.857220+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:22.857712+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:12:22.858864+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:22.859042+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:22.859075+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:22.862758+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:12:22.863683+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:12:23.953572+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:12:23.954259+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:12:23.954310+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:23.954363+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:23.954952+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:23.957597+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:12:23.959153+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:23.959534+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:23.959622+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:23.963507+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:12:23.964462+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:12:25.969055+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:12:25.969888+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:12:25.969947+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:25.969992+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:25.970483+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:25.973450+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:12:25.974785+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:25.975000+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:25.975032+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:25.979685+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:12:25.980490+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:12:26.367538+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:12:26.370308+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:12:26.370380+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:26.370425+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:26.370868+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:26.371389+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:12:26.372611+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:26.372778+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:26.372817+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:12:26.375006+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:12:26.375600+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:18:20.373321+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:18:20.379650+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:18:20.911919+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a999c5"},"request_uri":"http://localhost:8000/_wdt/a999c5","method":"GET"} []
[2020-04-21T17:18:22.398888+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:18:22.403644+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:18:22.403717+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:18:22.403775+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:18:22.404525+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:18:22.405423+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:18:22.407268+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:18:22.407514+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:18:22.407555+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:18:22.410769+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:18:22.411423+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:18:24.336924+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:18:24.340800+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:18:24.727221+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1b9b93"},"request_uri":"http://localhost:8000/_wdt/1b9b93","method":"GET"} []
[2020-04-21T17:18:24.752811+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:18:24.762161+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:18:24.762345+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:18:24.762487+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:18:24.764067+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:18:24.766241+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:18:24.767753+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:18:24.767994+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:18:24.768032+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:18:24.771213+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:18:24.772200+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:18:47.373053+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:18:47.377277+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:18:47.709559+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"efbe14"},"request_uri":"http://localhost:8000/_wdt/efbe14","method":"GET"} []
[2020-04-21T17:18:48.423815+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:18:48.426987+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:18:48.427046+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:18:48.427086+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:18:48.427546+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:18:48.428176+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:18:48.430291+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:18:48.430712+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:18:48.430811+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:18:48.438743+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:18:48.441131+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:19:22.376495+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:19:22.382827+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:19:22.754822+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0388b8"},"request_uri":"http://localhost:8000/_wdt/0388b8","method":"GET"} []
[2020-04-21T17:19:23.422969+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:19:23.427906+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:19:23.428010+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:19:23.428073+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:19:23.429063+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:19:23.432068+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:19:23.437680+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:19:23.438126+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:19:23.438201+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:19:23.444254+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:19:23.446937+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:20:19.392737+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:20:19.399472+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:20:19.730604+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a0cc32"},"request_uri":"http://localhost:8000/_wdt/a0cc32","method":"GET"} []
[2020-04-21T17:20:20.412488+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:20:20.416894+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:20:20.416972+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:20.417025+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:20.418056+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:20.419417+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:20:20.420830+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:20.421016+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:20.421049+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:20.424222+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:20:20.424826+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:20:47.153737+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:20:47.161190+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:20:47.466914+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0fed65"},"request_uri":"http://localhost:8000/_wdt/0fed65","method":"GET"} []
[2020-04-21T17:20:47.513156+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:20:47.521004+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:20:47.521099+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:47.521160+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:47.521920+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:47.522863+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:20:47.525287+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:47.525889+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:47.525991+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:47.534593+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:20:47.535488+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:20:52.397763+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:20:52.405260+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:20:52.802319+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"56ade4"},"request_uri":"http://localhost:8000/_wdt/56ade4","method":"GET"} []
[2020-04-21T17:20:52.901749+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:20:52.906691+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:20:52.906850+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:52.906945+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:52.908214+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:52.910077+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:20:52.914330+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:52.916367+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:52.916708+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:52.933380+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:20:52.938226+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:20:56.545803+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:20:56.549250+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:20:56.818698+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b0c0bb"},"request_uri":"http://localhost:8000/_wdt/b0c0bb","method":"GET"} []
[2020-04-21T17:20:56.844354+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:20:56.853581+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:20:56.853669+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:56.853731+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:56.854303+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:56.855055+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:20:56.856619+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:56.856816+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:56.856848+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:20:56.861971+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:20:56.863787+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:21:01.281249+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:21:01.285693+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:21:01.580543+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f94dfd"},"request_uri":"http://localhost:8000/_wdt/f94dfd","method":"GET"} []
[2020-04-21T17:21:01.612104+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:21:01.620581+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:21:01.620662+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:01.620711+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:01.621386+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:01.622238+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:21:01.624085+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:01.624380+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:01.624436+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:01.633015+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:21:01.636136+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:21:04.993517+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:21:05.001118+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:21:05.312727+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"06d14c"},"request_uri":"http://localhost:8000/_wdt/06d14c","method":"GET"} []
[2020-04-21T17:21:05.339025+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:21:05.342725+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:21:05.342851+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:05.342918+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:05.343713+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:05.344905+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:21:05.349288+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:05.350007+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:05.350105+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:05.353242+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:21:05.354431+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:21:11.441561+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:21:11.445585+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:21:11.718549+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"43d4f9"},"request_uri":"http://localhost:8000/_wdt/43d4f9","method":"GET"} []
[2020-04-21T17:21:11.745528+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:21:11.755035+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:21:11.755122+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:11.755193+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:11.756055+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:11.757227+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:21:11.759613+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:11.759942+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:11.760000+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:11.768043+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:21:11.769436+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:21:15.247303+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:21:15.250879+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:21:15.554724+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dd9302"},"request_uri":"http://localhost:8000/_wdt/dd9302","method":"GET"} []
[2020-04-21T17:21:15.577743+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:21:15.583334+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:21:15.583407+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:15.583462+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:15.584262+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:15.585371+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:21:15.587105+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:15.587328+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:15.587366+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:15.591024+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:21:15.592921+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:21:17.878303+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:21:17.881429+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:21:18.172661+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c260cb"},"request_uri":"http://localhost:8000/_wdt/c260cb","method":"GET"} []
[2020-04-21T17:21:18.199049+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:21:18.204454+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:21:18.204513+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:18.204552+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:18.205032+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:18.205744+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:21:18.207371+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:18.207660+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:18.207723+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:18.211893+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:21:18.213703+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:21:21.433798+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:21:21.437652+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:21:21.709421+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"183956"},"request_uri":"http://localhost:8000/_wdt/183956","method":"GET"} []
[2020-04-21T17:21:21.730857+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:21:21.736230+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:21:21.736342+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:21.736453+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:21.737144+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:21.738088+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:21:21.740401+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:21.740895+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:21.740981+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:21.748831+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:21:21.750323+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:21:47.598960+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:21:47.602331+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:21:47.908458+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"84e0da"},"request_uri":"http://localhost:8000/_wdt/84e0da","method":"GET"} []
[2020-04-21T17:21:47.931940+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:21:47.936407+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:21:47.936484+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:47.936544+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:47.937225+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:47.937974+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:21:47.939909+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:47.940416+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:47.940498+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:21:47.950460+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:21:47.951611+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:22:09.239843+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:22:09.244442+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:22:09.570023+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5fa994"},"request_uri":"http://localhost:8000/_wdt/5fa994","method":"GET"} []
[2020-04-21T17:22:09.586327+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:22:09.590694+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:22:09.590808+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:22:09.590891+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:22:09.591769+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:22:09.593660+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:22:09.595943+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:22:09.596368+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:22:09.596432+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:22:09.600612+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:22:09.601522+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:22:14.629956+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:22:14.634772+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:22:14.985714+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a5cee3"},"request_uri":"http://localhost:8000/_wdt/a5cee3","method":"GET"} []
[2020-04-21T17:22:15.020483+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:22:15.025599+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:22:15.025664+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:22:15.025762+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:22:15.027612+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:22:15.030935+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:22:15.034643+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:22:15.034886+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:22:15.034929+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:22:15.039290+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:22:15.041966+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:22:18.622889+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:22:18.624333+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:22:18.624425+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:22:18.624498+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:22:18.625458+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:22:18.629909+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:22:18.631908+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:22:18.632244+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:22:18.632298+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:22:18.636638+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:22:18.637363+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:25:08.114426+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:25:08.120601+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:25:08.310095+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"474450"},"request_uri":"http://localhost:8000/_wdt/474450","method":"GET"} []
[2020-04-21T17:25:27.836969+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:25:27.840374+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:25:28.019477+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5a942f"},"request_uri":"http://localhost:8000/_wdt/5a942f","method":"GET"} []
[2020-04-21T17:25:32.676899+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:25:32.681424+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:25:32.761517+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"def50b"},"request_uri":"http://localhost:8000/_wdt/def50b","method":"GET"} []
[2020-04-21T17:25:59.207785+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:25:59.211178+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:25:59.373159+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"29c8b2"},"request_uri":"http://localhost:8000/_wdt/29c8b2","method":"GET"} []
[2020-04-21T17:26:01.769509+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T17:26:01.777385+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:26:01.922246+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-21T17:26:18.309381+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:26:18.312877+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:26:18.451316+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ba2392"},"request_uri":"http://localhost:8000/_wdt/ba2392","method":"GET"} []
[2020-04-21T17:26:24.741264+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:26:24.746398+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:26:24.835687+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a755d6"},"request_uri":"http://localhost:8000/_wdt/a755d6","method":"GET"} []
[2020-04-21T17:26:28.781573+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:26:28.783161+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:26:28.783283+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:28.783422+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:28.784529+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:28.789578+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:26:28.792315+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:28.792720+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:28.792791+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:28.799337+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:26:28.800628+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:26:29.623194+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:26:29.631796+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:26:29.631974+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:29.632153+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:29.633758+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:29.635626+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:26:29.638514+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:29.638776+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:29.638828+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:29.641565+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:26:29.642709+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:26:30.745185+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:26:30.746130+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:26:30.746194+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:30.746289+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:30.747386+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:30.751211+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:26:30.752826+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:30.753155+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:30.753212+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:30.756490+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:26:30.757255+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:26:33.399475+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:26:33.403268+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:26:33.478134+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a6920d"},"request_uri":"http://localhost:8000/_wdt/a6920d","method":"GET"} []
[2020-04-21T17:26:33.537908+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:26:33.538937+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:26:33.539014+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:33.539080+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:33.539724+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:33.542856+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:26:33.544795+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:33.545146+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:33.545207+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:33.551975+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:26:33.554396+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:26:49.489360+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:26:49.492635+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:26:49.492696+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:49.492735+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:49.493218+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:49.493937+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:26:49.495562+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:49.496114+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:49.496240+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:26:49.500189+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:26:49.501256+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:27:02.586298+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:27:02.589860+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:27:02.676108+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3ed40f"},"request_uri":"http://localhost:8000/_wdt/3ed40f","method":"GET"} []
[2020-04-21T17:27:02.714473+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:27:02.717647+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:27:02.717737+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:02.717816+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:02.718513+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:02.719376+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:27:02.721615+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:02.721919+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:02.721968+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:02.725122+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:27:02.725844+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:27:07.859683+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:27:07.860861+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:27:07.860952+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:07.861023+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:07.862002+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:07.867001+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:27:07.869475+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:07.869920+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:07.869986+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:07.874206+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:27:07.874929+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:27:33.658414+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:27:33.662592+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:27:33.844728+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1ee2ef"},"request_uri":"http://localhost:8000/_wdt/1ee2ef","method":"GET"} []
[2020-04-21T17:27:33.891159+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:27:33.892156+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:27:33.892225+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:33.892270+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:33.892860+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:33.898670+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:27:33.902340+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:33.902957+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:33.903064+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:33.908612+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:27:33.909395+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:27:35.154162+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:27:35.158536+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:27:35.158635+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:35.158722+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:35.159458+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:35.160520+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:27:35.162928+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:35.163337+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:35.163402+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:35.167912+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:27:35.168887+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:27:35.976508+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:27:35.978898+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:27:35.979124+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:35.979332+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:35.980730+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:35.986908+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:27:35.989511+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:35.989830+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:35.989893+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:35.994715+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:27:35.995561+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:27:37.586081+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:27:37.586782+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:27:37.586829+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:37.586869+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:37.587348+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:37.590437+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:27:37.592266+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:37.592517+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:37.592553+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:37.596458+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:27:37.597445+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:27:38.209588+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:27:38.212638+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:27:38.212717+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:38.212767+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:38.213431+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:38.214277+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:27:38.216379+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:38.216725+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:38.216788+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:38.220106+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:27:38.220976+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:27:52.355952+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:27:52.359802+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:27:52.493600+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cbecd0"},"request_uri":"http://localhost:8000/_wdt/cbecd0","method":"GET"} []
[2020-04-21T17:27:52.540847+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:27:52.544795+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:27:52.544898+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:52.544965+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:52.545752+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:52.547044+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:27:52.549995+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:52.550312+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:52.550361+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:27:52.553886+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:27:52.554618+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:28:10.029884+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:28:10.033570+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:28:10.208337+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"80c240"},"request_uri":"http://localhost:8000/_wdt/80c240","method":"GET"} []
[2020-04-21T17:28:19.733575+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:28:19.738085+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:28:19.906658+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"54a477"},"request_uri":"http://localhost:8000/_wdt/54a477","method":"GET"} []
[2020-04-21T17:28:22.163090+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:28:22.166595+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:28:22.262258+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7d069c"},"request_uri":"http://localhost:8000/_wdt/7d069c","method":"GET"} []
[2020-04-21T17:29:40.149326+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:29:40.155409+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:29:40.341815+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a79952"},"request_uri":"http://localhost:8000/_wdt/a79952","method":"GET"} []
[2020-04-21T17:29:47.602333+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:29:47.606349+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:29:47.687264+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"679fb1"},"request_uri":"http://localhost:8000/_wdt/679fb1","method":"GET"} []
[2020-04-21T17:29:52.390919+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:29:52.395176+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:29:52.480384+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aa780f"},"request_uri":"http://localhost:8000/_wdt/aa780f","method":"GET"} []
[2020-04-21T17:30:15.735710+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:30:15.740260+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:30:15.912560+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d63cde"},"request_uri":"http://localhost:8000/_wdt/d63cde","method":"GET"} []
[2020-04-21T17:30:44.705554+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:30:44.708926+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:30:44.859520+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"88b490"},"request_uri":"http://localhost:8000/_wdt/88b490","method":"GET"} []
[2020-04-21T17:30:48.501903+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:30:48.505999+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:30:48.611262+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d491f5"},"request_uri":"http://localhost:8000/_wdt/d491f5","method":"GET"} []
[2020-04-21T17:31:00.001312+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T17:31:00.005648+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:31:00.248352+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-21T17:32:33.919823+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:32:33.924351+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:32:34.091978+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a5b9d8"},"request_uri":"http://localhost:8000/_wdt/a5b9d8","method":"GET"} []
[2020-04-21T17:32:36.160004+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:32:36.167185+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:32:36.167322+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:32:36.167411+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:32:36.168766+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:32:36.170633+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:32:36.173240+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:32:36.173652+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:32:36.173733+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:32:36.178967+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:32:36.179998+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:32:44.646086+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:32:44.649639+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:32:44.852298+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"915a72"},"request_uri":"http://localhost:8000/_wdt/915a72","method":"GET"} []
[2020-04-21T17:32:44.887082+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:32:44.894776+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:32:44.895021+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:32:44.895187+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:32:44.896847+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:32:44.898894+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:32:44.903657+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:32:44.904018+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:32:44.904076+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:32:44.907129+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:32:44.908004+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:32:59.400203+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:32:59.405406+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:32:59.580426+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"81bb1a"},"request_uri":"http://localhost:8000/_wdt/81bb1a","method":"GET"} []
[2020-04-21T17:32:59.612530+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:32:59.620444+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:32:59.620644+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:32:59.620782+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:32:59.622413+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:32:59.624577+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:32:59.628573+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:32:59.629202+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:32:59.629323+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:32:59.633351+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:32:59.634135+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:33:03.982537+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:33:03.986729+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:33:04.104419+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bd6570"},"request_uri":"http://localhost:8000/_wdt/bd6570","method":"GET"} []
[2020-04-21T17:33:04.137557+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:33:04.140624+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:33:04.140681+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:04.140718+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:04.141203+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:04.141883+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:33:04.143486+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:04.143813+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:04.143860+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:04.149757+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:33:04.152545+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:33:12.698810+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:33:12.702595+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:33:12.827430+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"917891"},"request_uri":"http://localhost:8000/_wdt/917891","method":"GET"} []
[2020-04-21T17:33:12.859881+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:33:12.862890+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:33:12.862948+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:12.862996+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:12.863644+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:12.864567+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:33:12.866105+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:12.866335+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:12.866369+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:12.869762+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:33:12.871078+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:33:16.902687+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:33:16.908040+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:33:17.027224+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6d991a"},"request_uri":"http://localhost:8000/_wdt/6d991a","method":"GET"} []
[2020-04-21T17:33:17.055339+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:33:17.058283+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:33:17.058356+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:17.058415+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:17.059060+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:17.059803+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:33:17.063376+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:17.063617+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:17.063654+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:17.072608+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:33:17.075614+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:33:21.864109+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:33:21.867833+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:33:21.970655+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9dc699"},"request_uri":"http://localhost:8000/_wdt/9dc699","method":"GET"} []
[2020-04-21T17:33:22.024414+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:33:22.028957+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:33:22.029057+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:22.029157+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:22.029941+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:22.031005+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:33:22.033270+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:22.033616+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:22.033670+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:22.036864+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:33:22.038266+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:33:26.274007+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:33:26.277935+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:33:26.383778+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c5d74b"},"request_uri":"http://localhost:8000/_wdt/c5d74b","method":"GET"} []
[2020-04-21T17:33:26.428505+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:33:26.436288+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:33:26.436353+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:26.436398+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:26.436899+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:26.437565+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:33:26.439016+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:26.439207+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:26.439241+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:26.441776+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:33:26.442506+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:33:29.762096+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:33:29.765885+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:33:29.863977+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d3c96f"},"request_uri":"http://localhost:8000/_wdt/d3c96f","method":"GET"} []
[2020-04-21T17:33:29.922186+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:33:29.925211+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:33:29.925273+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:29.925324+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:29.925878+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:29.926601+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:33:29.927951+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:29.928178+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:29.928212+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:29.930713+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:33:29.931389+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:33:35.821233+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:33:35.822066+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:33:35.822130+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:35.822176+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:35.822741+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:35.825856+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:33:35.827556+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:35.827873+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:35.827923+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:35.832176+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:33:35.832828+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:33:38.490535+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:33:38.494024+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:33:38.494091+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:38.494134+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:38.494652+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:38.495394+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:33:38.497150+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:38.497423+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:38.497461+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:38.500609+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:33:38.501472+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:33:44.115456+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:33:44.119337+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:33:44.119396+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:44.119443+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:44.120085+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:44.120877+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:33:44.122399+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:44.122716+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:44.122763+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:44.125784+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:33:44.126833+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:33:55.898191+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:33:55.899503+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:33:55.899620+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:55.899693+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:55.900578+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:55.905048+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:33:55.907291+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:55.907646+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:55.907696+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:33:55.912184+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:33:55.912980+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:34:10.495732+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:34:10.500356+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:34:10.854101+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1110d0"},"request_uri":"http://localhost:8000/_wdt/1110d0","method":"GET"} []
[2020-04-21T17:34:10.880146+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:34:10.881268+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:34:10.881348+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:10.881427+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:10.882557+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:10.888577+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:34:10.891112+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:10.891354+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:10.891396+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:10.897318+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:34:10.899852+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:34:18.509669+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:34:18.514664+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:34:18.810698+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c22581"},"request_uri":"http://localhost:8000/_wdt/c22581","method":"GET"} []
[2020-04-21T17:34:18.879869+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:34:18.882719+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:34:18.882964+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:18.883180+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:18.885027+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:18.890900+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:34:18.893462+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:18.893752+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:18.893809+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:18.902150+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:34:18.905651+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:34:24.226442+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:34:24.232266+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:34:24.606886+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"314f4c"},"request_uri":"http://localhost:8000/_wdt/314f4c","method":"GET"} []
[2020-04-21T17:34:24.643570+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:34:24.644456+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:34:24.644511+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:24.644552+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:24.645091+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:24.649230+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:34:24.654574+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:24.655636+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:24.655836+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:24.669826+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:34:24.673621+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:34:27.612979+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:34:27.617634+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:34:27.903542+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"85d8c5"},"request_uri":"http://localhost:8000/_wdt/85d8c5","method":"GET"} []
[2020-04-21T17:34:27.989805+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:34:27.990698+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:34:27.990759+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:27.990806+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:27.991350+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:27.995841+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:34:27.998641+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:27.999323+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:27.999428+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:28.017275+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:34:28.018153+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:34:32.635757+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:34:32.639244+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:34:32.924275+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"778e97"},"request_uri":"http://localhost:8000/_wdt/778e97","method":"GET"} []
[2020-04-21T17:34:32.983866+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:34:32.984909+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:34:32.984991+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:32.985068+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:32.985871+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:32.990755+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:34:32.992909+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:32.993521+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:32.993639+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:33.010775+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:34:33.013638+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:34:42.598777+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:34:42.603549+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:34:42.923553+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fb193d"},"request_uri":"http://localhost:8000/_wdt/fb193d","method":"GET"} []
[2020-04-21T17:34:42.957567+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:34:42.958485+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:34:42.958556+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:42.958616+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:42.959348+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:42.968549+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:34:42.974172+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:42.974873+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:42.975032+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:42.983609+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:34:42.984704+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:34:57.008942+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:34:57.012625+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:34:57.315580+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"346226"},"request_uri":"http://localhost:8000/_wdt/346226","method":"GET"} []
[2020-04-21T17:34:57.347656+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:34:57.350712+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:34:57.350996+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:57.351206+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:57.353243+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:57.364596+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:34:57.366360+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:57.366653+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:57.366712+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:34:57.371256+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:34:57.371885+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:35:01.713311+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:35:01.718344+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:35:02.001926+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f63b1e"},"request_uri":"http://localhost:8000/_wdt/f63b1e","method":"GET"} []
[2020-04-21T17:35:02.027297+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:35:02.031028+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:35:02.031246+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:02.031402+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:02.033265+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:02.046016+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:35:02.048417+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:02.048654+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:02.048690+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:02.052614+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:35:02.053445+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:35:23.679817+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:35:23.684594+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:35:23.991411+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"59e1ae"},"request_uri":"http://localhost:8000/_wdt/59e1ae","method":"GET"} []
[2020-04-21T17:35:24.067139+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:35:24.068153+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:35:24.068227+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:24.068290+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:24.069051+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:24.073413+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:35:24.076580+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:24.076997+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:24.077081+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:24.094128+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:35:24.096820+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:35:32.085438+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:35:32.090438+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:35:32.407273+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c29fef"},"request_uri":"http://localhost:8000/_wdt/c29fef","method":"GET"} []
[2020-04-21T17:35:32.493872+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:35:32.494625+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:35:32.494684+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:32.494730+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:32.495351+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:32.499388+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:35:32.501185+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:32.501458+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:32.501498+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:32.505680+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:35:32.506636+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:35:40.979117+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:35:40.984003+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:35:41.386580+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"23b2e3"},"request_uri":"http://localhost:8000/_wdt/23b2e3","method":"GET"} []
[2020-04-21T17:35:41.473191+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:35:41.474002+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:35:41.474056+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:41.474098+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:41.474651+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:41.477540+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:35:41.479083+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:41.479295+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:41.479332+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:35:41.482699+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:35:41.483328+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:36:01.053680+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:36:01.060502+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:36:01.415784+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d87cbb"},"request_uri":"http://localhost:8000/_wdt/d87cbb","method":"GET"} []
[2020-04-21T17:36:01.472076+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:36:01.473473+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:36:01.473601+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:36:01.473713+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:36:01.474912+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:36:01.481183+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:36:01.484042+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:36:01.484600+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:36:01.484739+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:36:01.490518+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:36:01.491695+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:36:32.618787+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:36:32.622463+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:36:32.905876+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ca104a"},"request_uri":"http://localhost:8000/_wdt/ca104a","method":"GET"} []
[2020-04-21T17:36:32.925798+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:36:32.926432+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:36:32.926477+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:36:32.926515+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:36:32.926973+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:36:32.930350+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:36:32.932927+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:36:32.933254+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:36:32.933316+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:36:32.937114+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:36:32.937877+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:36:40.794615+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:36:40.799147+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:36:41.137495+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d2955a"},"request_uri":"http://localhost:8000/_wdt/d2955a","method":"GET"} []
[2020-04-21T17:36:41.179318+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:36:41.180295+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:36:41.180375+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:36:41.180442+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:36:41.181487+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:36:41.192569+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:36:41.200278+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:36:41.200951+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:36:41.201138+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:36:41.215035+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:36:41.219062+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:37:09.128278+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:37:09.129178+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:37:09.129240+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:37:09.129285+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:37:09.129932+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:37:09.133078+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:37:09.134822+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:37:09.135156+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:37:09.135214+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:37:09.139278+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:37:09.140005+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:37:09.967868+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:37:09.973433+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:37:09.973560+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:37:09.973672+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:37:09.974458+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:37:09.975678+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:37:09.978271+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:37:09.978804+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:37:09.978933+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:37:09.984462+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:37:09.986169+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:37:15.208078+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T17:37:15.215363+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:37:15.406841+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-21T17:37:44.621773+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:37:44.628228+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:37:45.017106+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"42a9ee"},"request_uri":"http://localhost:8000/_wdt/42a9ee","method":"GET"} []
[2020-04-21T17:37:49.177637+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:37:49.182555+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:37:49.463077+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9895e0"},"request_uri":"http://localhost:8000/_wdt/9895e0","method":"GET"} []
[2020-04-21T17:37:53.469100+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:37:53.472591+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:37:53.752626+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cdb968"},"request_uri":"http://localhost:8000/_wdt/cdb968","method":"GET"} []
[2020-04-21T17:38:00.735035+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:38:00.738939+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:38:01.036048+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1f766a"},"request_uri":"http://localhost:8000/_wdt/1f766a","method":"GET"} []
[2020-04-21T17:38:06.076390+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:38:06.081528+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:38:06.369148+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"902549"},"request_uri":"http://localhost:8000/_wdt/902549","method":"GET"} []
[2020-04-21T17:38:13.041277+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:38:13.046391+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:38:13.374597+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"47d222"},"request_uri":"http://localhost:8000/_wdt/47d222","method":"GET"} []
[2020-04-21T17:38:18.040415+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:38:18.045480+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:38:18.314989+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"021e69"},"request_uri":"http://localhost:8000/_wdt/021e69","method":"GET"} []
[2020-04-21T17:38:23.880556+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:38:23.885205+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:38:24.167180+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f9e49c"},"request_uri":"http://localhost:8000/_wdt/f9e49c","method":"GET"} []
[2020-04-21T17:38:43.216600+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:38:43.220335+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:38:43.500711+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"896c05"},"request_uri":"http://localhost:8000/_wdt/896c05","method":"GET"} []
[2020-04-21T17:38:46.511948+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:38:46.518701+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:38:46.832958+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e7989b"},"request_uri":"http://localhost:8000/_wdt/e7989b","method":"GET"} []
[2020-04-21T17:38:56.147280+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:38:56.151434+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:38:56.455901+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ade891"},"request_uri":"http://localhost:8000/_wdt/ade891","method":"GET"} []
[2020-04-21T17:39:04.212798+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:39:04.216878+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:39:04.528089+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"43d582"},"request_uri":"http://localhost:8000/_wdt/43d582","method":"GET"} []
[2020-04-21T17:39:07.927817+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:39:07.932734+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:39:08.227706+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a80e1b"},"request_uri":"http://localhost:8000/_wdt/a80e1b","method":"GET"} []
[2020-04-21T17:39:20.047132+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:39:20.051127+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:39:20.349263+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"df686a"},"request_uri":"http://localhost:8000/_wdt/df686a","method":"GET"} []
[2020-04-21T17:39:23.424770+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:39:23.431977+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:39:23.761007+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"249e9c"},"request_uri":"http://localhost:8000/_wdt/249e9c","method":"GET"} []
[2020-04-21T17:39:27.421917+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:39:27.427640+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:39:27.732568+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2383c0"},"request_uri":"http://localhost:8000/_wdt/2383c0","method":"GET"} []
[2020-04-21T17:39:31.926431+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:39:31.931202+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:39:32.250061+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8bd20b"},"request_uri":"http://localhost:8000/_wdt/8bd20b","method":"GET"} []
[2020-04-21T17:39:36.871358+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:39:36.875961+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:39:37.183181+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"519b43"},"request_uri":"http://localhost:8000/_wdt/519b43","method":"GET"} []
[2020-04-21T17:39:47.561769+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:39:47.565335+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:39:47.918338+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b8645b"},"request_uri":"http://localhost:8000/_wdt/b8645b","method":"GET"} []
[2020-04-21T17:39:51.589048+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:39:51.593078+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:39:51.924663+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a2c80a"},"request_uri":"http://localhost:8000/_wdt/a2c80a","method":"GET"} []
[2020-04-21T17:39:52.973318+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:39:52.978515+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:39:53.285670+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4415de"},"request_uri":"http://localhost:8000/_wdt/4415de","method":"GET"} []
[2020-04-21T17:40:03.746600+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:40:03.750211+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:40:04.077673+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"192354"},"request_uri":"http://localhost:8000/_wdt/192354","method":"GET"} []
[2020-04-21T17:40:15.822494+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:40:15.827810+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:40:16.133672+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1faf71"},"request_uri":"http://localhost:8000/_wdt/1faf71","method":"GET"} []
[2020-04-21T17:40:36.967172+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T17:40:36.971835+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:40:37.180623+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-21T17:40:38.320794+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:40:38.324164+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:40:38.324229+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:40:38.324276+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:40:38.324935+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:40:38.325678+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:40:38.327214+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:40:38.327507+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:40:38.327559+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:40:38.330989+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:40:38.332061+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:40:41.832186+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:40:41.832925+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:40:41.832971+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:40:41.833009+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:40:41.833487+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:40:41.836872+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:40:41.838523+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:40:41.838795+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:40:41.838834+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:40:41.842470+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:40:41.843538+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:48:24.496605+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T17:48:24.514682+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T17:48:24.515103+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T17:48:24.515313+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T17:48:24.515575+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T17:48:24.515754+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T17:48:24.516090+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T17:48:24.516295+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T17:48:24.747913+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-04-21T17:48:24.753726+02:00] console.ERROR: Error thrown while running command "'doctrine:fixture:load' --no-interaction". Message: "Warning: A non-numeric value encountered" {"exception":"[object] (ErrorException(code: 0): Warning: A non-numeric value encountered at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:38)","command":"'doctrine:fixture:load' --no-interaction","message":"Warning: A non-numeric value encountered"} []
[2020-04-21T17:48:24.753952+02:00] console.DEBUG: Command "'doctrine:fixture:load' --no-interaction" exited with code "1" {"command":"'doctrine:fixture:load' --no-interaction","code":1} []
[2020-04-21T17:48:37.863129+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T17:48:37.886509+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T17:48:37.886990+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T17:48:37.887215+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T17:48:37.887450+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T17:48:37.887608+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T17:48:37.888005+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T17:48:37.888170+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T17:48:38.115129+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-04-21T17:48:38.121039+02:00] console.ERROR: Error thrown while running command "'doctrine:fixture:load' --no-interaction". Message: "Class 'App\DataFixtures\Date' not found" {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\Date' not found at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:39)","command":"'doctrine:fixture:load' --no-interaction","message":"Class 'App\\DataFixtures\\Date' not found"} []
[2020-04-21T17:48:38.121261+02:00] console.DEBUG: Command "'doctrine:fixture:load' --no-interaction" exited with code "1" {"command":"'doctrine:fixture:load' --no-interaction","code":1} []
[2020-04-21T17:48:38.121432+02:00] php.CRITICAL: Uncaught Error: Class 'App\DataFixtures\Date' not found {"exception":"[object] (Error(code: 0): Class 'App\\DataFixtures\\Date' not found at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:39)"} []
[2020-04-21T17:48:51.244235+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T17:48:51.260968+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T17:48:51.261419+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T17:48:51.261612+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T17:48:51.261809+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T17:48:51.261976+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T17:48:51.262312+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T17:48:51.262466+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T17:48:51.493185+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-04-21T17:48:51.498892+02:00] console.ERROR: Error thrown while running command "'doctrine:fixture:load' --no-interaction". Message: "Argument 1 passed to App\Entity\Conference::setHourStart() must implement interface DateTimeInterface, string given, called in /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 39" {"exception":"[object] (TypeError(code: 0): Argument 1 passed to App\\Entity\\Conference::setHourStart() must implement interface DateTimeInterface, string given, called in /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 39 at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/Entity/Conference.php:102)","command":"'doctrine:fixture:load' --no-interaction","message":"Argument 1 passed to App\\Entity\\Conference::setHourStart() must implement interface DateTimeInterface, string given, called in /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 39"} []
[2020-04-21T17:48:51.499074+02:00] console.DEBUG: Command "'doctrine:fixture:load' --no-interaction" exited with code "1" {"command":"'doctrine:fixture:load' --no-interaction","code":1} []
[2020-04-21T17:48:51.499198+02:00] php.CRITICAL: Uncaught Error: Argument 1 passed to App\Entity\Conference::setHourStart() must implement interface DateTimeInterface, string given, called in /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 39 {"exception":"[object] (TypeError(code: 0): Argument 1 passed to App\\Entity\\Conference::setHourStart() must implement interface DateTimeInterface, string given, called in /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 39 at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/Entity/Conference.php:102)"} []
[2020-04-21T17:49:01.191938+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T17:49:01.210560+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T17:49:01.210925+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T17:49:01.211130+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T17:49:01.211309+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T17:49:01.211444+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T17:49:01.211806+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T17:49:01.211968+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T17:49:01.438174+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:01+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:01.438617+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:01+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:01.438822+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:01+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:01.439170+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:01+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:01.439421+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:01+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:01.439633+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:01+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:01.439795+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:01+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:01.440067+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:01+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:01.440286+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:01+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:01.440483+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:01+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:01.440905+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.com","2":[],"3":"$argon2i$v=19$m=65536,t=4, [...]","4":null,"5":null,"6":null,"7":null,"8":null} []
[2020-04-21T17:49:01.441693+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-04-21T17:49:01.449200+02:00] console.ERROR: Error thrown while running command "'doctrine:fixture:load' --no-interaction". Message: "An exception occurred while executing 'INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?)' with params ["simon.mohimont@hotmail.com", "[]", "$argon2i$v=19$m=65536,t=4,p=1$bUtjZ2F5Sy5sWWtGVFo3Yw$Zey+w\/50jzSQkQvKDIIYj9hDPN7wLg\/ImWAUk3kS\/fw", null, null, null, null, null]:  SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'last_name' cannot be null" {"exception":"[object] (Doctrine\\DBAL\\Exception\\NotNullConstraintViolationException(code: 0): An exception occurred while executing 'INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?)' with params [\"simon.mohimont@hotmail.com\", \"[]\", \"$argon2i$v=19$m=65536,t=4,p=1$bUtjZ2F5Sy5sWWtGVFo3Yw$Zey+w\\/50jzSQkQvKDIIYj9hDPN7wLg\\/ImWAUk3kS\\/fw\", null, null, null, null, null]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1048 Column 'last_name' cannot be null at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:103)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'last_name' cannot be null at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:123)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'last_name' cannot be null at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:121)","command":"'doctrine:fixture:load' --no-interaction","message":"An exception occurred while executing 'INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?)' with params [\"simon.mohimont@hotmail.com\", \"[]\", \"$argon2i$v=19$m=65536,t=4,p=1$bUtjZ2F5Sy5sWWtGVFo3Yw$Zey+w\\/50jzSQkQvKDIIYj9hDPN7wLg\\/ImWAUk3kS\\/fw\", null, null, null, null, null]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1048 Column 'last_name' cannot be null"} []
[2020-04-21T17:49:01.449392+02:00] console.DEBUG: Command "'doctrine:fixture:load' --no-interaction" exited with code "1" {"command":"'doctrine:fixture:load' --no-interaction","code":1} []
[2020-04-21T17:49:40.922991+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T17:49:40.939887+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T17:49:40.940281+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T17:49:40.940530+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T17:49:40.940763+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T17:49:40.940948+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T17:49:40.941214+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T17:49:40.941425+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T17:49:41.169719+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:41+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:41.170164+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:41+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:41.170489+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:41+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:41.170912+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:41+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:41.171270+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:41+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:41.171557+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:41+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:41.171780+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:41+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:41.172031+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:41+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:41.172297+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:41+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:41.172579+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:41+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:41.173122+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.com","2":[],"3":"$argon2i$v=19$m=65536,t=4, [...]","4":"robin","5":"robin","6":null,"7":null,"8":null} []
[2020-04-21T17:49:41.174015+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-04-21T17:49:41.181948+02:00] console.ERROR: Error thrown while running command "'doctrine:fixture:load' --no-interaction". Message: "An exception occurred while executing 'INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?)' with params ["simon.mohimont@hotmail.com", "[]", "$argon2i$v=19$m=65536,t=4,p=1$UFlUS3djcGViNTRYT2NLRQ$i2ix8JXZ5dvvvrMehfcpmeV\/tB+aaQL4HxFeIe\/h5Qw", "robin", "robin", null, null, null]:  SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'is_accepted' cannot be null" {"exception":"[object] (Doctrine\\DBAL\\Exception\\NotNullConstraintViolationException(code: 0): An exception occurred while executing 'INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?)' with params [\"simon.mohimont@hotmail.com\", \"[]\", \"$argon2i$v=19$m=65536,t=4,p=1$UFlUS3djcGViNTRYT2NLRQ$i2ix8JXZ5dvvvrMehfcpmeV\\/tB+aaQL4HxFeIe\\/h5Qw\", \"robin\", \"robin\", null, null, null]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1048 Column 'is_accepted' cannot be null at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractMySQLDriver.php:103)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'is_accepted' cannot be null at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:123)\n[previous exception] [object] (PDOException(code: 23000): SQLSTATE[23000]: Integrity constraint violation: 1048 Column 'is_accepted' cannot be null at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOStatement.php:121)","command":"'doctrine:fixture:load' --no-interaction","message":"An exception occurred while executing 'INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?)' with params [\"simon.mohimont@hotmail.com\", \"[]\", \"$argon2i$v=19$m=65536,t=4,p=1$UFlUS3djcGViNTRYT2NLRQ$i2ix8JXZ5dvvvrMehfcpmeV\\/tB+aaQL4HxFeIe\\/h5Qw\", \"robin\", \"robin\", null, null, null]:\n\nSQLSTATE[23000]: Integrity constraint violation: 1048 Column 'is_accepted' cannot be null"} []
[2020-04-21T17:49:41.182570+02:00] console.DEBUG: Command "'doctrine:fixture:load' --no-interaction" exited with code "1" {"command":"'doctrine:fixture:load' --no-interaction","code":1} []
[2020-04-21T17:49:55.689856+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T17:49:55.706569+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T17:49:55.706987+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T17:49:55.707179+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T17:49:55.707445+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T17:49:55.707605+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T17:49:55.707899+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T17:49:55.708089+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T17:49:55.934816+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:55.935198+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:55.935419+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:55.935634+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:55.935830+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:55.936014+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:55.936217+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:55.936417+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:55.936670+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:55.936881+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference","2":null,"3":"2020-04-21T17:49:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:49:55.937415+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.com","2":[],"3":"$argon2i$v=19$m=65536,t=4, [...]","4":"robin","5":"robin","6":null,"7":null,"8":true} []
[2020-04-21T17:49:55.937686+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-21T17:49:58.892326+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:49:58.897111+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:49:59.109813+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2da3b5"},"request_uri":"http://localhost:8000/_wdt/2da3b5","method":"GET"} []
[2020-04-21T17:49:59.193670+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:49:59.197727+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:49:59.197824+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:49:59.197881+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:49:59.198876+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:49:59.207347+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:49:59.212066+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:49:59.212839+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:49:59.212907+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:49:59.285437+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:49:59.302441+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [21] []
[2020-04-21T17:49:59.304594+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [22] []
[2020-04-21T17:49:59.305790+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [23] []
[2020-04-21T17:49:59.306307+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [24] []
[2020-04-21T17:49:59.306829+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [25] []
[2020-04-21T17:49:59.307779+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [26] []
[2020-04-21T17:49:59.309482+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [27] []
[2020-04-21T17:49:59.310120+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [28] []
[2020-04-21T17:49:59.310536+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [29] []
[2020-04-21T17:49:59.310888+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [30] []
[2020-04-21T17:49:59.311416+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:50:13.644781+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T17:50:13.661378+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T17:50:13.661711+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T17:50:13.661915+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T17:50:13.662115+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T17:50:13.662350+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T17:50:13.662686+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T17:50:13.662960+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T17:50:13.882669+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-04-21T17:50:13.890376+02:00] console.ERROR: Error thrown while running command "'doctrine:fixture:load' --no-interaction". Message: "Warning: A non-numeric value encountered" {"exception":"[object] (ErrorException(code: 0): Warning: A non-numeric value encountered at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:42)","command":"'doctrine:fixture:load' --no-interaction","message":"Warning: A non-numeric value encountered"} []
[2020-04-21T17:50:13.890808+02:00] console.DEBUG: Command "'doctrine:fixture:load' --no-interaction" exited with code "1" {"command":"'doctrine:fixture:load' --no-interaction","code":1} []
[2020-04-21T17:50:37.342793+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T17:50:37.359084+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T17:50:37.359618+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T17:50:37.359923+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T17:50:37.360244+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T17:50:37.360501+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T17:50:37.360896+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T17:50:37.361201+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T17:50:37.591037+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference `0`","2":null,"3":"2020-04-21T17:50:37+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:37.591537+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference `1`","2":null,"3":"2020-04-21T17:50:37+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:37.591920+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference `2`","2":null,"3":"2020-04-21T17:50:37+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:37.592178+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference `3`","2":null,"3":"2020-04-21T17:50:37+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:37.592472+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference `4`","2":null,"3":"2020-04-21T17:50:37+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:37.592764+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference `5`","2":null,"3":"2020-04-21T17:50:37+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:37.593096+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference `6`","2":null,"3":"2020-04-21T17:50:37+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:37.593402+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference `7`","2":null,"3":"2020-04-21T17:50:37+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:37.593708+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference `8`","2":null,"3":"2020-04-21T17:50:37+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:37.594018+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference `9`","2":null,"3":"2020-04-21T17:50:37+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:37.594572+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.com","2":[],"3":"$argon2i$v=19$m=65536,t=4, [...]","4":"robin","5":"robin","6":null,"7":null,"8":true} []
[2020-04-21T17:50:37.594908+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-21T17:50:39.347016+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:50:39.352341+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:50:39.638858+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f97e11"},"request_uri":"http://localhost:8000/_wdt/f97e11","method":"GET"} []
[2020-04-21T17:50:39.755704+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:50:39.756877+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:50:39.756983+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:50:39.757053+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:50:39.758405+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:50:39.764428+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:50:39.768213+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:50:39.769399+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:50:39.769782+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:50:39.779059+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:50:39.781364+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [31] []
[2020-04-21T17:50:39.782165+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [32] []
[2020-04-21T17:50:39.782692+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [33] []
[2020-04-21T17:50:39.783837+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [34] []
[2020-04-21T17:50:39.785529+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [35] []
[2020-04-21T17:50:39.787025+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [36] []
[2020-04-21T17:50:39.788096+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [37] []
[2020-04-21T17:50:39.789079+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [38] []
[2020-04-21T17:50:39.790084+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [39] []
[2020-04-21T17:50:39.791186+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [40] []
[2020-04-21T17:50:39.793121+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:50:49.120377+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T17:50:49.136811+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T17:50:49.137238+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T17:50:49.137408+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T17:50:49.137650+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T17:50:49.137892+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T17:50:49.138211+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T17:50:49.138522+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T17:50:49.361725+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 0","2":null,"3":"2020-04-21T17:50:49+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:49.362112+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 1","2":null,"3":"2020-04-21T17:50:49+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:49.362367+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 2","2":null,"3":"2020-04-21T17:50:49+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:49.362609+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 3","2":null,"3":"2020-04-21T17:50:49+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:49.362842+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 4","2":null,"3":"2020-04-21T17:50:49+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:49.363051+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 5","2":null,"3":"2020-04-21T17:50:49+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:49.363240+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 6","2":null,"3":"2020-04-21T17:50:49+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:49.363375+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 7","2":null,"3":"2020-04-21T17:50:49+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:49.363522+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 8","2":null,"3":"2020-04-21T17:50:49+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:49.363641+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 9","2":null,"3":"2020-04-21T17:50:49+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:50:49.364047+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.com","2":[],"3":"$argon2i$v=19$m=65536,t=4, [...]","4":"robin","5":"robin","6":null,"7":null,"8":true} []
[2020-04-21T17:50:49.364303+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-21T17:50:50.716868+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:50:50.722150+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:50:50.919497+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e9ffb8"},"request_uri":"http://localhost:8000/_wdt/e9ffb8","method":"GET"} []
[2020-04-21T17:50:51.028027+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:50:51.029459+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:50:51.029581+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:50:51.029656+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:50:51.030585+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:50:51.035219+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:50:51.038277+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:50:51.039209+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:50:51.039383+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:50:51.049520+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:50:51.060951+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [41] []
[2020-04-21T17:50:51.063937+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [42] []
[2020-04-21T17:50:51.066431+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [43] []
[2020-04-21T17:50:51.069148+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [44] []
[2020-04-21T17:50:51.071502+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [45] []
[2020-04-21T17:50:51.072565+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [46] []
[2020-04-21T17:50:51.074659+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [47] []
[2020-04-21T17:50:51.076812+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [48] []
[2020-04-21T17:50:51.077607+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [49] []
[2020-04-21T17:50:51.078090+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [50] []
[2020-04-21T17:50:51.078898+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:51:58.902228+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T17:51:58.919828+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T17:51:58.920345+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T17:51:58.920634+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T17:51:58.920901+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T17:51:58.921129+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T17:51:58.921465+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T17:51:58.922009+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T17:51:59.149699+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 0","2":"Suscipit vitae sunt earum  [...]","3":"2020-04-21T17:51:59+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:51:59.150104+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 1","2":"Molestias perferendis ulla [...]","3":"2020-04-21T17:51:59+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:51:59.150346+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 2","2":"Aut sed iusto quia facilis [...]","3":"2020-04-21T17:51:59+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:51:59.150602+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 3","2":"Velit ad blanditiis labori [...]","3":"2020-04-21T17:51:59+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:51:59.150805+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 4","2":"Voluptate architecto vel o [...]","3":"2020-04-21T17:51:59+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:51:59.151034+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 5","2":"Et dignissimos nisi ducimu [...]","3":"2020-04-21T17:51:59+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:51:59.151237+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 6","2":"Eveniet neque ducimus illu [...]","3":"2020-04-21T17:51:59+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:51:59.151414+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 7","2":"Maiores laborum ipsa eum q [...]","3":"2020-04-21T17:51:59+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:51:59.151535+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 8","2":"Consequatur dolor fuga ut  [...]","3":"2020-04-21T17:51:59+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:51:59.151658+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference 9","2":"Illo tenetur quod quas et  [...]","3":"2020-04-21T17:51:59+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:51:59.152267+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.com","2":[],"3":"$argon2i$v=19$m=65536,t=4, [...]","4":"robin","5":"robin","6":null,"7":null,"8":true} []
[2020-04-21T17:51:59.152589+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-21T17:52:00.964931+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:52:00.970459+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:52:01.189727+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3a1f09"},"request_uri":"http://localhost:8000/_wdt/3a1f09","method":"GET"} []
[2020-04-21T17:52:01.312070+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:52:01.312869+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:52:01.312918+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:52:01.312957+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:52:01.313434+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:52:01.316706+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:52:01.318732+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:52:01.318995+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:52:01.319057+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:52:01.322591+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:52:01.326670+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [51] []
[2020-04-21T17:52:01.328434+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [52] []
[2020-04-21T17:52:01.329836+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [53] []
[2020-04-21T17:52:01.333146+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [54] []
[2020-04-21T17:52:01.335717+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [55] []
[2020-04-21T17:52:01.337897+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [56] []
[2020-04-21T17:52:01.339290+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [57] []
[2020-04-21T17:52:01.340522+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [58] []
[2020-04-21T17:52:01.341912+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [59] []
[2020-04-21T17:52:01.343270+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [60] []
[2020-04-21T17:52:01.344966+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:52:38.780545+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T17:52:38.799700+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T17:52:38.800140+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T17:52:38.800466+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T17:52:38.800658+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T17:52:38.800806+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T17:52:38.801146+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T17:52:38.801596+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T17:52:39.025934+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-04-21T17:52:39.032026+02:00] console.ERROR: Error thrown while running command "'doctrine:fixture:load' --no-interaction". Message: "Warning: A non-numeric value encountered" {"exception":"[object] (ErrorException(code: 0): Warning: A non-numeric value encountered at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:43)","command":"'doctrine:fixture:load' --no-interaction","message":"Warning: A non-numeric value encountered"} []
[2020-04-21T17:52:39.032395+02:00] console.DEBUG: Command "'doctrine:fixture:load' --no-interaction" exited with code "1" {"command":"'doctrine:fixture:load' --no-interaction","code":1} []
[2020-04-21T17:52:54.884897+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T17:52:54.901071+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T17:52:54.901507+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T17:52:54.901758+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T17:52:54.902000+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T17:52:54.902197+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T17:52:54.902515+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T17:52:54.902903+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T17:52:55.130376+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Noémie Gérard()","2":"Atque a voluptatibus nisi  [...]","3":"2020-04-21T17:52:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:52:55.130839+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Yanis De Ridder()","2":"Inventore dignissimos assu [...]","3":"2020-04-21T17:52:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:52:55.131132+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Yanis Claeys()","2":"Assumenda asperiores magna [...]","3":"2020-04-21T17:52:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:52:55.131424+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Alexandre Simon()","2":"A magnam beatae veritatis  [...]","3":"2020-04-21T17:52:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:52:55.131672+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Martin Yilmaz()","2":"Blanditiis nostrum et temp [...]","3":"2020-04-21T17:52:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:52:55.131866+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Finn Vandenberghe()","2":"Assumenda cumque quas quis [...]","3":"2020-04-21T17:52:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:52:55.132066+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Antoine Dupont()","2":"Dicta est nam aspernatur s [...]","3":"2020-04-21T17:52:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:52:55.132319+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Romain Jacobs()","2":"Atque ratione natus sit ma [...]","3":"2020-04-21T17:52:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:52:55.132577+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Théo Moens()","2":"Necessitatibus repellat no [...]","3":"2020-04-21T17:52:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:52:55.132841+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Julien Piette()","2":"Temporibus quos corporis r [...]","3":"2020-04-21T17:52:55+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:52:55.133641+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.com","2":[],"3":"$argon2i$v=19$m=65536,t=4, [...]","4":"robin","5":"robin","6":null,"7":null,"8":true} []
[2020-04-21T17:52:55.133949+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-21T17:52:56.689334+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:52:56.697812+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:52:56.888711+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a55227"},"request_uri":"http://localhost:8000/_wdt/a55227","method":"GET"} []
[2020-04-21T17:52:57.039271+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:52:57.039955+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:52:57.039997+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:52:57.040033+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:52:57.040554+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:52:57.044879+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:52:57.047064+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:52:57.047352+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:52:57.047400+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:52:57.058692+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:52:57.063230+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [61] []
[2020-04-21T17:52:57.065358+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [62] []
[2020-04-21T17:52:57.066503+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [63] []
[2020-04-21T17:52:57.067760+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [64] []
[2020-04-21T17:52:57.068637+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [65] []
[2020-04-21T17:52:57.069575+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [66] []
[2020-04-21T17:52:57.070502+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [67] []
[2020-04-21T17:52:57.071411+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [68] []
[2020-04-21T17:52:57.072460+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [69] []
[2020-04-21T17:52:57.073220+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [70] []
[2020-04-21T17:52:57.074313+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:53:12.198731+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T17:53:12.217057+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T17:53:12.217450+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T17:53:12.217672+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T17:53:12.217871+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T17:53:12.217994+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T17:53:12.218229+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T17:53:12.218553+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T17:53:12.446775+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Femke","2":"Et quidem et sequi deserun [...]","3":"2020-04-21T17:53:12+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:53:12.447150+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Nathan","2":"Aliquam ut molestias rerum [...]","3":"2020-04-21T17:53:12+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:53:12.447408+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Warre","2":"Non praesentium aliquid de [...]","3":"2020-04-21T17:53:12+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:53:12.447687+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Romain","2":"Error fugit ut nihil qui a [...]","3":"2020-04-21T17:53:12+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:53:12.447914+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Jana","2":"Quae aut esse eos facilis  [...]","3":"2020-04-21T17:53:12+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:53:12.448077+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Vic","2":"Est inventore qui similiqu [...]","3":"2020-04-21T17:53:12+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:53:12.448250+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Diego","2":"Omnis saepe et ipsum nihil [...]","3":"2020-04-21T17:53:12+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:53:12.448392+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Margaux","2":"Et est cupiditate architec [...]","3":"2020-04-21T17:53:12+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:53:12.448530+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Manon","2":"Sapiente ipsa eos ut recus [...]","3":"2020-04-21T17:53:12+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:53:12.448675+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Juliette","2":"Minus quisquam rerum sapie [...]","3":"2020-04-21T17:53:12+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T17:53:12.449111+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.com","2":[],"3":"$argon2i$v=19$m=65536,t=4, [...]","4":"robin","5":"robin","6":null,"7":null,"8":true} []
[2020-04-21T17:53:12.449322+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-21T17:53:13.905408+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:53:13.912086+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:53:14.091982+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4ce4c4"},"request_uri":"http://localhost:8000/_wdt/4ce4c4","method":"GET"} []
[2020-04-21T17:53:14.199383+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:53:14.200630+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:53:14.200731+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:14.200792+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:14.201531+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:14.208385+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:53:14.210730+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:14.211064+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:14.211119+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:14.218139+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:53:14.221990+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:53:14.223029+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:53:14.223975+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:53:14.224959+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:53:14.225836+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:53:14.226547+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:53:14.227106+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:53:14.227605+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:53:14.228351+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:53:14.228994+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:53:14.229826+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:53:18.836240+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:53:18.840538+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:53:18.840626+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:18.840685+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:18.841333+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:18.842364+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:53:18.844569+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:18.844918+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:18.844968+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:18.856410+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:53:18.857609+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:53:20.560513+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:53:20.561128+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:53:20.561194+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:20.561241+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:20.561797+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:20.564525+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:53:20.566179+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:20.566435+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:20.566483+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:20.569920+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:53:20.572085+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:53:20.572710+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:53:20.573106+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:53:20.573492+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:53:20.573847+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:53:20.574228+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:53:20.574588+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:53:20.574938+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:53:20.575224+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:53:20.575463+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:53:20.575930+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:53:45.655943+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:53:45.659760+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:53:45.824320+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"52114c"},"request_uri":"http://localhost:8000/_wdt/52114c","method":"GET"} []
[2020-04-21T17:53:45.926159+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:53:45.927209+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:53:45.927270+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:45.927325+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:45.928329+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:45.932852+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:53:45.934455+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:45.934669+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:45.934703+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:45.940386+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:53:45.942668+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:53:45.944401+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:53:45.945965+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:53:45.947107+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:53:45.948548+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:53:45.949932+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:53:45.951538+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:53:45.952819+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:53:45.954006+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:53:45.954952+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:53:45.956220+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:53:52.671957+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:53:52.675481+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:53:52.801717+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"df0d36"},"request_uri":"http://localhost:8000/_wdt/df0d36","method":"GET"} []
[2020-04-21T17:53:52.833332+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:53:52.834005+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:53:52.834049+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:52.834100+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:52.834670+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:52.837467+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:53:52.838904+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:52.839150+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:52.839186+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:53:52.842977+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:53:52.848633+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:53:52.850563+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:53:52.852611+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:53:52.855447+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:53:52.858572+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:53:52.861324+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:53:52.863497+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:53:52.865540+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:53:52.867200+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:53:52.868816+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:53:52.871185+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:55:28.373958+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:55:28.377584+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:55:28.537330+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"68d386"},"request_uri":"http://localhost:8000/_wdt/68d386","method":"GET"} []
[2020-04-21T17:55:29.423755+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:55:29.425363+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:55:29.425526+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:55:29.425654+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:55:29.426695+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:55:29.430584+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:55:29.431913+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:55:29.432094+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:55:29.432136+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:55:29.435504+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:55:29.437159+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:55:29.437584+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:55:29.437916+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:55:29.438275+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:55:29.438649+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:55:29.439080+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:55:29.439453+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:55:29.439783+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:55:29.440080+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:55:29.440360+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:55:29.440773+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:55:48.400546+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:55:48.406806+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:55:48.601451+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"525e33"},"request_uri":"http://localhost:8000/_wdt/525e33","method":"GET"} []
[2020-04-21T17:55:48.705956+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:55:48.707201+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:55:48.707335+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:55:48.707415+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:55:48.708883+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:55:48.718125+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:55:48.721451+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:55:48.721977+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:55:48.722101+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:55:48.727065+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:55:48.729163+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:55:48.729929+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:55:48.730508+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:55:48.731128+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:55:48.731759+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:55:48.732400+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:55:48.733135+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:55:48.733804+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:55:48.734374+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:55:48.734957+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:55:48.736247+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:55:56.506988+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:55:56.510495+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:55:56.638857+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f42777"},"request_uri":"http://localhost:8000/_wdt/f42777","method":"GET"} []
[2020-04-21T17:55:56.669673+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:55:56.670252+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:55:56.670298+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:55:56.670334+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:55:56.670769+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:55:56.673440+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:55:56.674884+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:55:56.675191+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:55:56.675239+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:55:56.681278+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:55:56.682894+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:55:56.683319+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:55:56.683606+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:55:56.683867+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:55:56.684156+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:55:56.684514+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:55:56.685190+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:55:56.686864+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:55:56.687900+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:55:56.688328+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:55:56.690026+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:56:09.395179+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:56:09.401868+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:56:09.589697+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fccf99"},"request_uri":"http://localhost:8000/_wdt/fccf99","method":"GET"} []
[2020-04-21T17:56:10.137293+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:56:10.139426+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:56:10.139482+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:10.139521+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:10.140003+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:10.143179+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:56:10.145499+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:10.146005+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:10.146068+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:10.149990+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:56:10.151869+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:56:10.153031+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:56:10.153810+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:56:10.154272+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:56:10.154771+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:56:10.155321+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:56:10.155928+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:56:10.156608+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:56:10.157090+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:56:10.157411+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:56:10.157866+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:56:20.037919+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:56:20.042197+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:56:20.212298+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c5775e"},"request_uri":"http://localhost:8000/_wdt/c5775e","method":"GET"} []
[2020-04-21T17:56:20.244982+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:56:20.245552+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:56:20.245593+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:20.245628+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:20.246125+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:20.248644+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:56:20.249963+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:20.250140+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:20.250171+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:20.253159+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:56:20.254656+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:56:20.256400+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:56:20.258146+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:56:20.260737+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:56:20.263059+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:56:20.264856+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:56:20.266671+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:56:20.268167+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:56:20.269480+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:56:20.270207+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:56:20.271095+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:56:27.751267+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T17:56:27.754486+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:56:27.754570+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:27.754621+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:27.755294+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:27.756264+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:56:27.757955+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:27.758200+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:27.758233+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:27.761334+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T17:56:27.762452+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T17:56:28.978957+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:56:28.979869+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:56:28.979954+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:28.980024+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:28.980905+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:28.983440+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:56:28.984581+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:28.984767+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:28.984797+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:56:28.987478+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:56:28.989206+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:56:28.989954+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:56:28.990648+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:56:28.991291+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:56:28.991936+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:56:28.992538+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:56:28.993198+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:56:28.993823+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:56:28.994445+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:56:28.995075+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:56:28.995854+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:57:00.938090+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:57:00.942132+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:57:01.126287+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bb5378"},"request_uri":"http://localhost:8000/_wdt/bb5378","method":"GET"} []
[2020-04-21T17:57:01.156974+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:57:01.158476+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:57:01.158608+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:01.158695+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:01.159638+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:01.167045+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:57:01.172566+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:01.173435+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:01.173706+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:01.182407+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:57:01.184944+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:57:01.186186+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:57:01.188433+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:57:01.190381+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:57:01.191829+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:57:01.193575+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:57:01.195402+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:57:01.197408+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:57:01.199058+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:57:01.200825+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:57:01.202481+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:57:08.492200+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:57:08.496975+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:57:08.599892+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2b3ceb"},"request_uri":"http://localhost:8000/_wdt/2b3ceb","method":"GET"} []
[2020-04-21T17:57:08.671820+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:57:08.673221+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:57:08.673356+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:08.673457+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:08.674402+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:08.678970+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:57:08.680695+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:08.681162+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:08.681233+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:08.687016+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:57:08.689682+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:57:08.690751+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:57:08.691725+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:57:08.692498+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:57:08.693493+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:57:08.695007+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:57:08.696654+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:57:08.698460+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:57:08.699951+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:57:08.701726+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:57:08.704247+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:57:16.695328+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:57:16.699689+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:57:16.788843+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4f245c"},"request_uri":"http://localhost:8000/_wdt/4f245c","method":"GET"} []
[2020-04-21T17:57:16.838720+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:57:16.840320+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:57:16.840430+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:16.840519+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:16.841468+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:16.850505+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:57:16.855547+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:16.855867+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:16.855915+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:16.859753+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:57:16.861313+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:57:16.861899+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:57:16.862332+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:57:16.862729+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:57:16.863102+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:57:16.863485+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:57:16.863851+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:57:16.864168+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:57:16.864475+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:57:16.864789+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:57:16.865297+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:57:25.813638+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:57:25.816958+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:57:25.990946+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9188df"},"request_uri":"http://localhost:8000/_wdt/9188df","method":"GET"} []
[2020-04-21T17:57:26.027941+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:57:26.029937+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:57:26.030079+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:26.030151+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:26.031309+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:26.036424+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:57:26.038369+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:26.038608+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:26.038652+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:26.041827+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:57:26.043582+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:57:26.044239+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:57:26.044784+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:57:26.045340+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:57:26.045957+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:57:26.046650+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:57:26.047454+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:57:26.048191+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:57:26.048676+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:57:26.049032+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:57:26.049565+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:57:41.152206+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:57:41.158315+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:57:41.333682+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"13feb4"},"request_uri":"http://localhost:8000/_wdt/13feb4","method":"GET"} []
[2020-04-21T17:57:41.363666+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:57:41.364635+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:57:41.364702+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:41.364757+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:41.365425+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:41.370277+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:57:41.372796+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:41.373171+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:41.373251+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:41.381556+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:57:41.383839+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:57:41.384745+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:57:41.385895+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:57:41.387170+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:57:41.388230+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:57:41.389219+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:57:41.389994+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:57:41.390596+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:57:41.391185+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:57:41.391718+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:57:41.392704+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:57:47.588177+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:57:47.591702+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:57:47.723772+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4e428e"},"request_uri":"http://localhost:8000/_wdt/4e428e","method":"GET"} []
[2020-04-21T17:57:47.758963+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:57:47.759594+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:57:47.759639+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:47.759678+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:47.760148+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:47.762898+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:57:47.764239+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:47.764433+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:47.764462+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:47.770730+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:57:47.776620+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:57:47.779809+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:57:47.781762+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:57:47.783224+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:57:47.785545+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:57:47.787369+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:57:47.788703+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:57:47.790734+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:57:47.792800+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:57:47.795332+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:57:47.796383+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:57:52.447621+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:57:52.452583+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:57:52.573454+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8836cc"},"request_uri":"http://localhost:8000/_wdt/8836cc","method":"GET"} []
[2020-04-21T17:57:52.632869+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:57:52.633821+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:57:52.633896+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:52.633951+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:52.635230+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:52.642010+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:57:52.644636+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:52.645008+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:52.645068+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:52.653696+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:57:52.657375+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:57:52.659418+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:57:52.661734+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:57:52.664289+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:57:52.666136+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:57:52.666964+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:57:52.668410+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:57:52.670942+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:57:52.673825+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:57:52.676619+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:57:52.679988+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:57:57.160534+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:57:57.164945+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:57:57.253710+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ca422d"},"request_uri":"http://localhost:8000/_wdt/ca422d","method":"GET"} []
[2020-04-21T17:57:57.323068+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:57:57.324047+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:57:57.324132+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:57.324199+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:57.325017+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:57.329247+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:57:57.331337+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:57.331666+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:57.331721+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:57:57.337068+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:57:57.340788+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:57:57.342381+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:57:57.342931+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:57:57.343528+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:57:57.345555+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:57:57.346604+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:57:57.347207+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:57:57.347692+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:57:57.348087+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:57:57.348558+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:57:57.349230+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:58:00.666493+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:58:00.669781+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:58:00.808410+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"57bca3"},"request_uri":"http://localhost:8000/_wdt/57bca3","method":"GET"} []
[2020-04-21T17:58:00.837464+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:58:00.838100+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:58:00.838147+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:58:00.838184+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:58:00.838620+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:58:00.843187+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:58:00.844889+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:58:00.845091+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:58:00.845123+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:58:00.848202+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:58:00.849648+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:58:00.850076+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:58:00.850448+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:58:00.850808+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:58:00.851184+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:58:00.851775+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:58:00.852421+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:58:00.853027+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:58:00.853697+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:58:00.854531+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:58:00.855942+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:58:20.363400+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:58:20.366933+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:58:20.558194+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7189b3"},"request_uri":"http://localhost:8000/_wdt/7189b3","method":"GET"} []
[2020-04-21T17:58:20.596378+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:58:20.598402+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:58:20.598546+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:58:20.598643+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:58:20.599796+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:58:20.607275+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:58:20.612500+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:58:20.613060+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:58:20.613170+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:58:20.622931+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:58:20.624748+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:58:20.625385+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:58:20.625820+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:58:20.626209+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:58:20.626659+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:58:20.627320+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:58:20.627920+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:58:20.628365+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:58:20.628789+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:58:20.629431+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:58:20.630316+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:58:54.520199+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:58:54.523746+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:58:54.717501+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"77cc86"},"request_uri":"http://localhost:8000/_wdt/77cc86","method":"GET"} []
[2020-04-21T17:58:54.753031+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:58:54.754502+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:58:54.754653+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:58:54.754765+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:58:54.755954+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:58:54.761146+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:58:54.768800+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:58:54.769945+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:58:54.770183+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:58:54.780520+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:58:54.784457+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:58:54.785575+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:58:54.787184+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:58:54.789169+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:58:54.790848+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:58:54.792361+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:58:54.794261+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:58:54.795843+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:58:54.796351+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:58:54.796661+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:58:54.797191+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:59:04.404554+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:59:04.410395+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:59:04.583769+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9a842b"},"request_uri":"http://localhost:8000/_wdt/9a842b","method":"GET"} []
[2020-04-21T17:59:04.617753+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:59:04.618812+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:59:04.618877+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:04.618917+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:04.619426+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:04.624725+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:59:04.626633+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:04.626855+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:04.626889+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:04.631371+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:59:04.635958+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:59:04.638072+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:59:04.640074+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:59:04.641685+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:59:04.643212+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:59:04.644612+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:59:04.645694+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:59:04.646414+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:59:04.646791+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:59:04.647136+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:59:04.647605+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:59:10.220292+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:59:10.225756+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:59:10.321985+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"188e75"},"request_uri":"http://localhost:8000/_wdt/188e75","method":"GET"} []
[2020-04-21T17:59:10.393618+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:59:10.394343+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:59:10.394402+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:10.394444+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:10.394933+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:10.397607+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:59:10.399211+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:10.399494+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:10.399548+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:10.405367+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:59:10.407177+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:59:10.408797+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:59:10.410506+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:59:10.411080+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:59:10.411455+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:59:10.411786+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:59:10.412094+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:59:10.412499+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:59:10.412869+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:59:10.413194+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:59:10.413667+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:59:28.673533+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:59:28.677114+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:59:28.848299+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"937d25"},"request_uri":"http://localhost:8000/_wdt/937d25","method":"GET"} []
[2020-04-21T17:59:28.887408+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:59:28.888879+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:59:28.888972+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:28.889046+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:28.889864+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:28.898502+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:59:28.905441+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:28.906182+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:28.906302+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:28.918900+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:59:28.923848+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:59:28.926350+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:59:28.928397+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:59:28.930300+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:59:28.932367+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:59:28.933866+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:59:28.934623+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:59:28.935031+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:59:28.935439+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:59:28.935801+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:59:28.936320+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:59:40.265299+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:59:40.269848+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:59:40.450478+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cea79d"},"request_uri":"http://localhost:8000/_wdt/cea79d","method":"GET"} []
[2020-04-21T17:59:40.488110+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:59:40.489273+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:59:40.489357+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:40.489434+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:40.490241+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:40.495719+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:59:40.499965+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:40.500625+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:40.500764+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:40.508715+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:59:40.512517+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:59:40.513807+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:59:40.514998+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:59:40.517397+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:59:40.519471+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:59:40.521696+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:59:40.523800+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:59:40.524632+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:59:40.525090+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:59:40.525601+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:59:40.526392+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:59:44.396092+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:59:44.399783+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:59:44.538341+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a87dad"},"request_uri":"http://localhost:8000/_wdt/a87dad","method":"GET"} []
[2020-04-21T17:59:44.562426+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:59:44.563014+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:59:44.563057+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:44.563093+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:44.563535+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:44.566557+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:59:44.568300+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:44.568701+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:44.568756+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:44.573128+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:59:44.574979+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:59:44.575486+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:59:44.575990+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:59:44.576346+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:59:44.576730+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:59:44.577176+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:59:44.577683+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:59:44.578079+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:59:44.578507+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:59:44.578996+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:59:44.579531+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:59:48.453412+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:59:48.457236+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:59:48.573718+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ebe776"},"request_uri":"http://localhost:8000/_wdt/ebe776","method":"GET"} []
[2020-04-21T17:59:48.619543+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:59:48.622372+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:59:48.622724+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:48.623088+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:48.626312+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:48.631555+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:59:48.633907+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:48.634205+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:48.634243+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:48.638038+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:59:48.640025+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:59:48.640890+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:59:48.642268+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:59:48.643444+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:59:48.644463+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:59:48.645438+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:59:48.646064+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:59:48.646439+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:59:48.646875+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:59:48.647602+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:59:48.648952+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:59:55.002982+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:59:55.007479+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:59:55.115088+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7969fb"},"request_uri":"http://localhost:8000/_wdt/7969fb","method":"GET"} []
[2020-04-21T17:59:55.173047+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:59:55.173974+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:59:55.174036+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:55.174092+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:55.174869+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:55.181736+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:59:55.193077+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:55.193986+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:55.194178+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:55.204436+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:59:55.208357+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:59:55.210015+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:59:55.210672+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:59:55.211192+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:59:55.211680+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:59:55.212216+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:59:55.212683+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:59:55.213151+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:59:55.213443+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:59:55.213858+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:59:55.215789+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T17:59:58.590089+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T17:59:58.593839+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T17:59:58.703380+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8bc6d9"},"request_uri":"http://localhost:8000/_wdt/8bc6d9","method":"GET"} []
[2020-04-21T17:59:58.764223+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T17:59:58.765783+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T17:59:58.765873+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:58.765948+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:58.767103+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:58.776033+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T17:59:58.779541+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:58.780092+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:58.780217+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T17:59:58.785664+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T17:59:58.787863+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T17:59:58.788354+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T17:59:58.788729+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T17:59:58.789089+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T17:59:58.789751+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T17:59:58.790624+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T17:59:58.791379+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T17:59:58.792172+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T17:59:58.793048+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T17:59:58.794397+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T17:59:58.795218+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:00:03.141408+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:00:03.145001+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:00:03.234689+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"35d7d3"},"request_uri":"http://localhost:8000/_wdt/35d7d3","method":"GET"} []
[2020-04-21T18:00:03.283428+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:00:03.284879+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:00:03.284977+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:03.285072+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:03.286281+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:03.295279+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:00:03.299200+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:03.299597+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:03.299639+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:03.303348+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:00:03.305004+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:00:03.305539+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:00:03.305999+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:00:03.306752+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:00:03.307695+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:00:03.308438+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:00:03.309749+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:00:03.311187+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:00:03.311777+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:00:03.312210+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:00:03.314821+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:00:06.545757+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:00:06.549616+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:00:06.694714+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c813f6"},"request_uri":"http://localhost:8000/_wdt/c813f6","method":"GET"} []
[2020-04-21T18:00:06.721519+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:00:06.722149+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:00:06.722205+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:06.722254+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:06.722861+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:06.729884+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:00:06.736330+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:06.737225+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:06.737480+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:06.750387+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:00:06.752332+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:00:06.752925+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:00:06.753364+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:00:06.753818+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:00:06.754347+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:00:06.754913+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:00:06.755454+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:00:06.756015+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:00:06.756627+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:00:06.757274+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:00:06.758288+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:00:28.787032+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:00:28.790298+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:00:28.952287+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c32bf2"},"request_uri":"http://localhost:8000/_wdt/c32bf2","method":"GET"} []
[2020-04-21T18:00:28.982038+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:00:28.983537+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:00:28.983642+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:28.983709+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:28.984441+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:28.988335+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:00:28.992032+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:28.993127+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:28.993333+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:28.999156+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:00:29.001474+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:00:29.002415+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:00:29.003235+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:00:29.004165+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:00:29.005042+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:00:29.005872+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:00:29.006675+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:00:29.007416+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:00:29.008099+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:00:29.008727+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:00:29.009437+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:00:34.724019+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:00:34.727507+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:00:34.867407+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fe9b82"},"request_uri":"http://localhost:8000/_wdt/fe9b82","method":"GET"} []
[2020-04-21T18:00:34.895533+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:00:34.896335+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:00:34.896394+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:34.896447+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:34.897054+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:34.900034+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:00:34.902247+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:34.903510+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:34.903770+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:34.907864+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:00:34.909667+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:00:34.910205+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:00:34.910570+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:00:34.910858+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:00:34.911164+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:00:34.911460+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:00:34.911743+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:00:34.912025+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:00:34.912346+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:00:34.912968+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:00:34.913980+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:00:42.036636+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:00:42.041878+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:00:42.135974+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f3b0d7"},"request_uri":"http://localhost:8000/_wdt/f3b0d7","method":"GET"} []
[2020-04-21T18:00:42.201777+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:00:42.202312+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:00:42.202350+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:42.202384+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:42.202809+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:42.205893+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:00:42.207812+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:42.208173+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:42.208227+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:42.212059+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:00:42.214404+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:00:42.215629+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:00:42.217525+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:00:42.219192+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:00:42.221046+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:00:42.222389+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:00:42.223908+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:00:42.225418+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:00:42.226574+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:00:42.227527+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:00:42.228410+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:00:50.958864+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:00:50.965131+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:00:51.099869+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"326286"},"request_uri":"http://localhost:8000/_wdt/326286","method":"GET"} []
[2020-04-21T18:00:51.125871+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:00:51.126586+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:00:51.126636+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:51.126675+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:51.127343+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:51.135682+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:00:51.140696+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:51.141240+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:51.141346+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:00:51.149429+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:00:51.151316+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:00:51.151941+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:00:51.152749+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:00:51.154157+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:00:51.155767+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:00:51.156318+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:00:51.156612+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:00:51.156884+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:00:51.157162+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:00:51.157437+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:00:51.157878+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:01:14.579323+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:01:14.583927+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:01:14.583999+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:01:14.584050+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:01:14.584667+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:01:14.585527+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:01:14.587330+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:01:14.587690+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:01:14.587742+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:01:14.591470+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:01:14.592456+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:01:57.705004+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:01:57.708926+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:01:57.789689+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d87786"},"request_uri":"http://localhost:8000/_wdt/d87786","method":"GET"} []
[2020-04-21T18:01:57.870490+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:01:57.877232+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:01:57.877364+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:01:57.877462+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:01:57.878580+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:01:57.880589+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:01:57.883335+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:01:57.883768+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:01:57.883844+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:01:57.889916+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:01:57.891306+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:01:59.348651+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:01:59.349434+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:01:59.349497+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:01:59.349540+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:01:59.350027+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:01:59.352592+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:01:59.354337+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:01:59.354659+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:01:59.354710+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:01:59.357585+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:01:59.359319+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:01:59.359997+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:01:59.360955+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:01:59.361737+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:01:59.362600+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:01:59.363542+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:01:59.364344+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:01:59.365070+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:01:59.365908+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:01:59.366846+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:01:59.367766+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:02:00.795846+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:02:00.799315+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:02:00.799383+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:00.799425+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:00.799966+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:00.800754+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:02:00.802471+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:00.802731+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:00.802767+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:00.806136+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:02:00.806817+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:02:45.303774+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:02:45.311326+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:02:45.513944+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"784af4"},"request_uri":"http://localhost:8000/_wdt/784af4","method":"GET"} []
[2020-04-21T18:02:45.569833+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=true","method":"GET"} []
[2020-04-21T18:02:45.573189+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:02:45.573271+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:45.573323+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:45.573970+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:45.574915+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:02:45.579090+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:45.579543+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:45.579621+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:45.584163+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["true"] []
[2020-04-21T18:02:45.586032+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["true"] []
[2020-04-21T18:02:47.322789+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:02:47.327005+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:02:47.404313+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d0a80f"},"request_uri":"http://localhost:8000/_wdt/d0a80f","method":"GET"} []
[2020-04-21T18:02:47.458714+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=true","method":"GET"} []
[2020-04-21T18:02:47.463677+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:02:47.463840+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:47.463963+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:47.465095+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:47.467260+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:02:47.470952+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:47.471336+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:47.471398+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:47.475927+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["true"] []
[2020-04-21T18:02:47.476700+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["true"] []
[2020-04-21T18:02:54.011315+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:02:54.015118+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:02:54.123365+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d314a1"},"request_uri":"http://localhost:8000/_wdt/d314a1","method":"GET"} []
[2020-04-21T18:02:54.184189+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:02:54.188557+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:02:54.188614+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:54.188652+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:54.189098+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:54.189708+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:02:54.191062+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:54.191241+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:54.191271+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:02:54.195178+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:02:54.196310+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:03:50.279925+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:03:50.285887+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:03:50.458283+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"af2801"},"request_uri":"http://localhost:8000/_wdt/af2801","method":"GET"} []
[2020-04-21T18:03:50.492368+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:03:50.498263+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:03:50.498420+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:03:50.498572+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:03:50.499829+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:03:50.501098+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:03:50.504699+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:03:50.505337+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:03:50.505431+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:03:50.509534+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:03:50.510717+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:04:15.373111+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:04:15.377379+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:04:15.560795+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"abb815"},"request_uri":"http://localhost:8000/_wdt/abb815","method":"GET"} []
[2020-04-21T18:04:15.589363+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:04:15.597009+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:04:15.597133+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:15.597214+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:15.598103+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:15.599162+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:04:15.603817+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:15.604246+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:15.604306+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:15.609105+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:04:15.610212+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:04:31.147263+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:04:31.152735+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:04:31.339049+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6e9c01"},"request_uri":"http://localhost:8000/_wdt/6e9c01","method":"GET"} []
[2020-04-21T18:04:31.375449+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:04:31.381889+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:04:31.382035+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:31.382192+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:31.383382+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:31.385568+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:04:31.389524+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:31.390295+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:31.390431+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:31.399504+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:04:31.401544+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:04:39.684784+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:04:39.691557+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:04:39.772630+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"070bc9"},"request_uri":"http://localhost:8000/_wdt/070bc9","method":"GET"} []
[2020-04-21T18:04:39.847191+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:04:39.850224+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:04:39.850284+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:39.850326+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:39.850801+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:39.851472+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:04:39.852916+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:39.853108+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:39.853142+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:39.855905+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:04:39.856657+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:04:43.404990+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:04:43.408722+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:04:43.481610+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"349c57"},"request_uri":"http://localhost:8000/_wdt/349c57","method":"GET"} []
[2020-04-21T18:04:43.546583+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:04:43.551855+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:04:43.551911+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:43.551950+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:43.552411+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:43.553020+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:04:43.554507+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:43.554709+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:43.554745+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:43.557894+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:04:43.560374+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:04:49.642675+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:04:49.647468+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:04:49.735038+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"af24f5"},"request_uri":"http://localhost:8000/_wdt/af24f5","method":"GET"} []
[2020-04-21T18:04:49.803526+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:04:49.806759+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:04:49.806821+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:49.806862+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:49.807364+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:49.808059+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:04:49.810046+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:49.810379+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:49.810430+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:49.813576+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:04:49.814673+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:04:54.161944+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:04:54.166118+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:04:54.252606+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"43778f"},"request_uri":"http://localhost:8000/_wdt/43778f","method":"GET"} []
[2020-04-21T18:04:54.317121+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:04:54.319800+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:04:54.319854+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:54.319891+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:54.320412+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:54.321512+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:04:54.323773+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:54.324277+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:54.324376+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:54.327686+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:04:54.328839+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:04:56.051116+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:04:56.065023+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:04:56.157767+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c7926e"},"request_uri":"http://localhost:8000/_wdt/c7926e","method":"GET"} []
[2020-04-21T18:04:56.221065+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:04:56.223464+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:04:56.223514+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:56.223550+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:56.223925+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:56.224469+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:04:56.226580+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:56.227529+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:56.227723+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:56.231474+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:04:56.233742+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:04:56.690225+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:04:56.701602+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:04:56.797270+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a53a86"},"request_uri":"http://localhost:8000/_wdt/a53a86","method":"GET"} []
[2020-04-21T18:04:56.852992+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:04:56.858565+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:04:56.884694+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:04:56.888868+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:04:56.888960+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:56.889021+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:56.890317+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:56.892911+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:04:56.898033+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:56.898811+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:56.898974+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:56.905401+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:04:56.908201+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:04:56.947828+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"084e30"},"request_uri":"http://localhost:8000/_wdt/084e30","method":"GET"} []
[2020-04-21T18:04:56.993148+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:04:57.002733+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:04:57.018872+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:04:57.022580+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:04:57.022654+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.022710+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.023438+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.024634+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:04:57.026610+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.027093+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.027160+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.032334+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:04:57.033888+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:04:57.079999+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"506440"},"request_uri":"http://localhost:8000/_wdt/506440","method":"GET"} []
[2020-04-21T18:04:57.135538+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:04:57.143066+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:04:57.164863+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:04:57.173674+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:04:57.173891+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.174047+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.175547+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.177769+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:04:57.182648+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.183373+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.183526+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.189206+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:04:57.190028+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:04:57.231289+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c15aac"},"request_uri":"http://localhost:8000/_wdt/c15aac","method":"GET"} []
[2020-04-21T18:04:57.296897+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:04:57.300653+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:04:57.300729+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.300783+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.301899+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.303576+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:04:57.307666+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.308472+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.308635+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.315603+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:04:57.317743+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:04:57.393117+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:04:57.396191+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:04:57.459441+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"30fa34"},"request_uri":"http://localhost:8000/_wdt/30fa34","method":"GET"} []
[2020-04-21T18:04:57.515469+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:04:57.524045+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:04:57.544723+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:04:57.551323+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:04:57.551379+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.551421+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.551887+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.552474+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:04:57.554032+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.554323+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.554374+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.559377+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:04:57.560596+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:04:57.607320+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0699a5"},"request_uri":"http://localhost:8000/_wdt/0699a5","method":"GET"} []
[2020-04-21T18:04:57.673472+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:04:57.678992+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:04:57.701969+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:04:57.711322+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:04:57.711581+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.711818+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.713526+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.715337+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:04:57.719693+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.720587+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.720753+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.723642+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:04:57.724616+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:04:57.788954+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"62038d"},"request_uri":"http://localhost:8000/_wdt/62038d","method":"GET"} []
[2020-04-21T18:04:57.867209+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:04:57.869576+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:04:57.869627+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.869663+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.870046+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.870561+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:04:57.872494+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.872776+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.872835+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:04:57.875979+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:04:57.877070+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:05:00.221281+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:05:00.224794+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:05:00.548494+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"77b0c1"},"request_uri":"http://localhost:8000/_wdt/77b0c1","method":"GET"} []
[2020-04-21T18:05:00.571147+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:05:00.576231+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:05:00.576286+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:00.576333+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:00.576786+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:00.577528+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:05:00.578920+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:00.579106+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:00.579137+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:00.581543+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:05:00.582193+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:05:02.283348+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:05:02.287035+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:05:02.385453+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6202bd"},"request_uri":"http://localhost:8000/_wdt/6202bd","method":"GET"} []
[2020-04-21T18:05:02.445666+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:05:02.448259+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:05:02.448322+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:02.448361+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:02.448783+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:02.449347+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:05:02.450542+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:02.450731+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:02.450769+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:02.453070+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:05:02.454010+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:05:04.030909+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:05:04.034563+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:05:04.162968+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b79f9a"},"request_uri":"http://localhost:8000/_wdt/b79f9a","method":"GET"} []
[2020-04-21T18:05:04.195109+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:05:04.199986+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:05:04.200049+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:04.200093+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:04.200609+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:04.202130+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:05:04.206347+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:04.207248+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:04.207448+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:04.218755+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:05:04.222178+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:05:08.966187+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:05:08.969506+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:05:09.056362+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4caca7"},"request_uri":"http://localhost:8000/_wdt/4caca7","method":"GET"} []
[2020-04-21T18:05:09.118529+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:05:09.128897+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:05:09.129212+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:09.129391+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:09.131186+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:09.133374+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:05:09.139118+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:09.139894+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:09.139996+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:09.142521+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:05:09.143241+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:05:14.206094+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:05:14.209701+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:05:14.322044+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0bd67b"},"request_uri":"http://localhost:8000/_wdt/0bd67b","method":"GET"} []
[2020-04-21T18:05:14.389015+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:05:14.395104+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:05:14.395198+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:14.395266+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:14.396094+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:14.397440+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:05:14.399903+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:14.400313+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:14.400372+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:14.404585+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:05:14.405692+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:05:25.647082+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:05:25.651202+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:05:25.775232+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"27d442"},"request_uri":"http://localhost:8000/_wdt/27d442","method":"GET"} []
[2020-04-21T18:05:25.822104+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:05:25.829196+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:05:25.829351+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:25.829457+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:25.830622+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:25.833784+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:05:25.838266+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:25.839079+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:25.839225+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:05:25.843615+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:05:25.844330+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:06:40.330683+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:06:40.334912+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:06:40.482433+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d0943e"},"request_uri":"http://localhost:8000/_wdt/d0943e","method":"GET"} []
[2020-04-21T18:06:40.537670+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:06:40.543827+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:06:40.543972+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:06:40.544059+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:06:40.544960+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:06:40.546382+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:06:40.549129+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:06:40.549478+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:06:40.549534+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:06:40.553365+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:06:40.554564+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:06:44.203134+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:06:44.206756+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:06:44.288213+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5cd3de"},"request_uri":"http://localhost:8000/_wdt/5cd3de","method":"GET"} []
[2020-04-21T18:06:44.363038+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:06:44.366768+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:06:44.366848+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:06:44.366897+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:06:44.367743+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:06:44.369686+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:06:44.374549+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:06:44.375310+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:06:44.375444+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:06:44.380548+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:06:44.383174+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:12:17.644206+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:12:17.645161+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:12:17.645224+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:17.645265+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:17.645919+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:17.650131+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:12:17.652985+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:17.653347+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:17.653397+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:17.659286+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:12:17.661870+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:12:17.663136+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:12:17.664402+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:12:17.665674+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:12:17.666989+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:12:17.669069+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:12:17.669677+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:12:17.670064+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:12:17.670412+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:12:17.670750+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:12:17.671251+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:12:19.913404+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:12:19.914320+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:12:19.914400+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:19.914462+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:19.915069+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:19.918654+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:12:19.920501+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:19.920766+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:19.920812+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:19.925189+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:12:19.927277+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:12:19.927962+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:12:19.928596+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:12:19.929286+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:12:19.929994+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:12:19.930709+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:12:19.931379+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:12:19.932063+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:12:19.932764+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:12:19.933447+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:12:19.934301+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:12:21.260251+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:12:21.263485+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:12:21.263554+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:21.263605+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:21.264291+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:21.265091+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:12:21.266917+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:21.267260+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:21.267315+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:21.271237+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:12:21.272289+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:12:23.084614+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:12:23.085251+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:12:23.085304+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:23.085343+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:23.085769+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:23.088355+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:12:23.089952+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:23.090305+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:23.090409+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:23.093954+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:12:23.096029+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:12:23.096806+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:12:23.097479+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:12:23.098145+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:12:23.098815+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:12:23.099425+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:12:23.100105+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:12:23.100893+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:12:23.101617+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:12:23.102294+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:12:23.103157+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:12:24.334213+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:12:24.337616+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:12:24.337676+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:24.337715+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:24.338179+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:24.338815+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:12:24.340805+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:24.341257+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:24.341331+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:24.344902+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:12:24.345949+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:12:36.779524+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T18:12:36.787395+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:12:37.019876+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-21T18:12:38.739284+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:12:38.739988+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:12:38.740044+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:38.740094+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:38.740653+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:38.743946+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:12:38.745622+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:38.745964+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:38.746027+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:38.750214+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:12:38.752648+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:12:38.753338+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:12:38.753783+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:12:38.754205+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:12:38.754602+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:12:38.755018+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:12:38.755340+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:12:38.755851+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:12:38.756795+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:12:38.757630+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:12:38.758623+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:12:39.669538+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:12:39.673311+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:12:39.673402+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:39.673480+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:39.674298+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:39.675406+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:12:39.677778+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:39.678117+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:39.678179+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:12:39.681457+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:12:39.682479+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:16:46.431664+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:16:46.440142+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:16:46.836701+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b867e5"},"request_uri":"http://localhost:8000/_wdt/b867e5","method":"GET"} []
[2020-04-21T18:17:07.068417+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:17:07.073776+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:17:07.526050+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f6fe1b"},"request_uri":"http://localhost:8000/_wdt/f6fe1b","method":"GET"} []
[2020-04-21T18:17:07.626414+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:17:07.627537+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:17:07.627624+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:17:07.627689+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:17:07.628612+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:17:07.636306+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:17:07.642911+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:17:07.644030+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:17:07.644264+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:17:07.658919+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:17:07.662208+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:17:07.663411+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:17:07.665606+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:17:07.667742+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:17:07.669819+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:17:07.672473+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:17:07.673862+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:17:07.674790+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:17:07.675682+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:17:07.676649+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:17:07.678317+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:17:20.524403+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:17:20.528493+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:17:20.830784+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"17bd85"},"request_uri":"http://localhost:8000/_wdt/17bd85","method":"GET"} []
[2020-04-21T18:17:20.866187+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:17:20.867022+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:17:20.867109+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:17:20.867153+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:17:20.867719+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:17:20.871331+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:17:20.875596+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:17:20.875987+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:17:20.876031+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:17:20.886837+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:17:20.892661+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:17:20.894973+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:17:20.896648+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:17:20.897652+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:17:20.898260+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:17:20.898715+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:17:20.899047+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:17:20.899389+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:17:20.899738+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:17:20.900110+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:17:20.900641+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:17:22.830903+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:17:22.838656+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:17:23.167744+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0c729b"},"request_uri":"http://localhost:8000/_wdt/0c729b","method":"GET"} []
[2020-04-21T18:17:23.254694+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:17:23.256047+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:17:23.256143+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:17:23.256218+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:17:23.257042+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:17:23.263800+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:17:23.268959+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:17:23.269444+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:17:23.269524+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:17:23.277650+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:17:23.284950+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:17:23.288779+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:17:23.291084+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:17:23.293781+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:17:23.296748+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:17:23.299514+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:17:23.302110+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:17:23.304950+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:17:23.307850+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:17:23.309233+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:17:23.311029+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:18:11.146263+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:18:11.151049+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:18:11.496717+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d19017"},"request_uri":"http://localhost:8000/_wdt/d19017","method":"GET"} []
[2020-04-21T18:18:11.518597+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:18:11.519856+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:18:11.519996+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:18:11.520137+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:18:11.521479+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:18:11.527753+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:18:11.530409+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:18:11.530687+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:18:11.530733+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:18:11.539931+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:18:11.542168+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:18:11.544003+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:18:11.546168+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:18:11.547989+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:18:11.549339+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:18:11.551342+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:18:11.554150+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:18:11.556335+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:18:11.558235+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:18:11.560041+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:18:11.562507+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:18:26.544594+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:18:26.550889+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:18:26.985084+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bc842e"},"request_uri":"http://localhost:8000/_wdt/bc842e","method":"GET"} []
[2020-04-21T18:18:27.037503+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:18:27.038566+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:18:27.038646+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:18:27.038712+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:18:27.039520+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:18:27.045962+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:18:27.050088+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:18:27.050641+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:18:27.050735+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:18:27.065222+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:18:27.067961+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:18:27.068720+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:18:27.069393+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:18:27.070119+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:18:27.071450+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:18:27.072178+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:18:27.072665+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:18:27.073229+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:18:27.074170+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:18:27.076932+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:18:27.078655+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:19:28.468595+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:19:28.472478+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:19:28.812714+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c66bfc"},"request_uri":"http://localhost:8000/_wdt/c66bfc","method":"GET"} []
[2020-04-21T18:19:28.891304+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:19:28.892410+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:19:28.892517+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:19:28.892584+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:19:28.893568+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:19:28.901720+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:19:28.909672+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:19:28.910656+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:19:28.910827+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:19:28.919895+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:19:28.922946+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:19:28.924233+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:19:28.925092+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:19:28.925791+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:19:28.926430+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:19:28.926902+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:19:28.927266+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:19:28.927677+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:19:28.928313+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:19:28.929199+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:19:28.930823+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:19:43.397249+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:19:43.400592+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:19:43.696423+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7f3f35"},"request_uri":"http://localhost:8000/_wdt/7f3f35","method":"GET"} []
[2020-04-21T18:19:43.784361+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:19:43.785856+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:19:43.785945+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:19:43.786021+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:19:43.786936+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:19:43.793464+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:19:43.797659+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:19:43.798010+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:19:43.798071+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:19:43.810715+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:19:43.816332+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:19:43.818468+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:19:43.820716+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:19:43.823357+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:19:43.826208+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:19:43.828875+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:19:43.832306+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:19:43.835390+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:19:43.836352+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:19:43.838816+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:19:43.841118+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:20:10.264205+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:20:10.267734+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:20:10.552808+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a0a8f1"},"request_uri":"http://localhost:8000/_wdt/a0a8f1","method":"GET"} []
[2020-04-21T18:20:10.576551+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:20:10.577719+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:20:10.577809+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:20:10.577884+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:20:10.578806+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:20:10.582920+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:20:10.584482+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:20:10.584721+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:20:10.584770+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:20:10.588718+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:20:10.590666+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:20:10.591355+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:20:10.593575+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:20:10.595866+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:20:10.598457+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:20:10.600602+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:20:10.602817+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:20:10.605403+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:20:10.607279+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:20:10.607979+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:20:10.608854+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:20:25.727193+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:20:25.732054+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:20:26.044699+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3496c5"},"request_uri":"http://localhost:8000/_wdt/3496c5","method":"GET"} []
[2020-04-21T18:20:26.111430+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:20:26.113142+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:20:26.113258+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:20:26.113359+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:20:26.114217+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:20:26.118718+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:20:26.121505+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:20:26.122058+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:20:26.122126+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:20:26.131248+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:20:26.135461+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:20:26.137980+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:20:26.139881+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:20:26.141854+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:20:26.144670+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:20:26.148060+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:20:26.152231+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:20:26.153508+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:20:26.155339+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:20:26.158710+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:20:26.163535+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:21:01.715115+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:21:01.723067+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:21:02.075248+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c6a8cb"},"request_uri":"http://localhost:8000/_wdt/c6a8cb","method":"GET"} []
[2020-04-21T18:21:02.123072+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:21:02.124575+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:21:02.124657+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:02.124717+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:02.125502+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:02.132709+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:21:02.139131+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:02.140018+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:02.140222+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:02.159610+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:21:02.170414+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:21:02.173181+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:21:02.175878+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:21:02.178407+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:21:02.180001+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:21:02.181066+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:21:02.182031+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:21:02.182848+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:21:02.183850+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:21:02.184670+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:21:02.185437+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:21:05.275228+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:21:05.276282+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:21:05.276353+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:05.276418+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:05.277192+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:05.280502+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:21:05.282170+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:05.282567+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:05.282631+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:05.286384+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:21:05.287823+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:21:05.288218+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:21:05.288590+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:21:05.288954+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:21:05.289272+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:21:05.289571+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:21:05.289897+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:21:05.290289+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:21:05.290844+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:21:05.291444+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:21:05.292251+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:21:06.380762+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:21:06.381371+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:21:06.381429+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:06.381472+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:06.381970+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:06.384480+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:21:06.386590+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:06.386815+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:06.386853+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:06.390736+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:21:06.393410+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:21:06.394150+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:21:06.394894+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:21:06.395553+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:21:06.396179+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:21:06.396777+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:21:06.397377+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:21:06.397961+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:21:06.398502+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:21:06.399205+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:21:06.400337+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:21:20.489660+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:21:20.495275+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:21:20.813763+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4d97fd"},"request_uri":"http://localhost:8000/_wdt/4d97fd","method":"GET"} []
[2020-04-21T18:21:20.897644+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:21:20.898314+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:21:20.898356+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:20.898393+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:20.899026+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:20.902111+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:21:20.903688+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:20.903989+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:20.904027+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:20.909577+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:21:20.912603+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:21:20.913743+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:21:20.914626+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:21:20.915796+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:21:20.917239+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:21:20.918509+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:21:20.919082+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:21:20.919459+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:21:20.920083+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:21:20.920969+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:21:20.922098+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:21:32.449575+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:21:32.453922+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:21:32.735278+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d2069a"},"request_uri":"http://localhost:8000/_wdt/d2069a","method":"GET"} []
[2020-04-21T18:21:32.755298+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:21:32.756168+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:21:32.756244+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:32.756286+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:32.756967+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:32.763448+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:21:32.765872+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:32.766175+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:32.766225+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:32.771811+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:21:32.776162+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:21:32.777708+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:21:32.780437+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:21:32.783033+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:21:32.785004+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:21:32.787121+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:21:32.789063+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:21:32.790350+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:21:32.791037+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:21:32.791733+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:21:32.792677+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:21:47.975130+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:21:47.981378+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:21:48.309021+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"490e13"},"request_uri":"http://localhost:8000/_wdt/490e13","method":"GET"} []
[2020-04-21T18:21:48.468149+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:21:48.469859+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:21:48.469975+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:48.470052+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:48.471084+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:48.485459+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:21:48.493244+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:48.495165+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:48.495456+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:48.501973+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:21:48.505380+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:21:48.506754+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:21:48.508232+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:21:48.509635+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:21:48.510797+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:21:48.511821+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:21:48.512549+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:21:48.513125+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:21:48.513763+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:21:48.514515+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:21:48.515486+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:21:52.699899+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:21:52.703900+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:21:53.029622+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e857ae"},"request_uri":"http://localhost:8000/_wdt/e857ae","method":"GET"} []
[2020-04-21T18:21:53.101756+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:21:53.102961+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:21:53.103047+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:53.103119+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:53.103945+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:53.112095+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:21:53.115941+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:53.116819+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:53.117014+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:21:53.129231+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:21:53.136750+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:21:53.139898+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:21:53.141927+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:21:53.143198+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:21:53.145632+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:21:53.148555+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:21:53.151718+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:21:53.154093+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:21:53.158892+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:21:53.162193+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:21:53.167038+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:22:00.865168+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:22:00.869450+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:22:01.157295+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0e4ac3"},"request_uri":"http://localhost:8000/_wdt/0e4ac3","method":"GET"} []
[2020-04-21T18:22:01.197848+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:22:01.201384+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:22:01.201734+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:22:01.201980+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:22:01.203731+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:22:01.210168+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:22:01.213835+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:22:01.214156+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:22:01.214211+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:22:01.221587+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:22:01.228384+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:22:01.230792+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:22:01.233027+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:22:01.235370+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:22:01.237222+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:22:01.238749+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:22:01.239493+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:22:01.239932+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:22:01.240505+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:22:01.242342+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:22:01.244261+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:22:08.298185+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:22:08.302289+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:22:08.632407+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a90230"},"request_uri":"http://localhost:8000/_wdt/a90230","method":"GET"} []
[2020-04-21T18:22:12.791441+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:22:12.794724+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:22:13.076402+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f9a82d"},"request_uri":"http://localhost:8000/_wdt/f9a82d","method":"GET"} []
[2020-04-21T18:22:13.133677+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:22:13.134613+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:22:13.134674+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:22:13.134729+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:22:13.135417+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:22:13.140563+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:22:13.142967+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:22:13.143464+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:22:13.143649+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:22:13.157749+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:22:13.165286+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:22:13.168983+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:22:13.171145+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:22:13.171994+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:22:13.172713+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:22:13.173334+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:22:13.174222+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:22:13.176789+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:22:13.179063+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:22:13.181251+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:22:13.184547+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:22:37.823522+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:22:37.828179+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:22:38.106126+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e7076b"},"request_uri":"http://localhost:8000/_wdt/e7076b","method":"GET"} []
[2020-04-21T18:22:38.133280+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:22:38.133814+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:22:38.133862+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:22:38.133896+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:22:38.134319+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:22:38.136892+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:22:38.138331+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:22:38.138523+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:22:38.138555+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:22:38.142598+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:22:38.147244+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:22:38.149352+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:22:38.150964+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:22:38.152781+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:22:38.154989+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:22:38.157814+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:22:38.160907+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:22:38.164212+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:22:38.167147+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:22:38.169951+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:22:38.172101+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:23:22.146453+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:23:22.219461+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:23:22.608599+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2c8f60"},"request_uri":"http://localhost:8000/_wdt/2c8f60","method":"GET"} []
[2020-04-21T18:23:33.364410+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:23:33.368522+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:23:33.543158+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6b4f1a"},"request_uri":"http://localhost:8000/_wdt/6b4f1a","method":"GET"} []
[2020-04-21T18:23:34.023990+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:23:34.034942+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:23:34.195958+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:23:34.198809+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:23:34.253957+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"709232"},"request_uri":"http://localhost:8000/_wdt/709232","method":"GET"} []
[2020-04-21T18:23:34.438063+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5d53a9"},"request_uri":"http://localhost:8000/_wdt/5d53a9","method":"GET"} []
[2020-04-21T18:24:04.624537+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:24:04.631098+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:24:05.166598+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"687a53"},"request_uri":"http://localhost:8000/_wdt/687a53","method":"GET"} []
[2020-04-21T18:24:05.267627+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:24:05.277060+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:24:05.277146+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:05.277218+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:05.281312+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:05.337657+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:24:05.364980+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:05.365325+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:05.365363+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:05.399073+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:24:05.406175+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:24:05.407089+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:24:05.407891+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:24:05.408955+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:24:05.410283+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:24:05.412046+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:24:05.413785+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:24:05.414810+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:24:05.415706+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:24:05.416611+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:24:05.420717+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:24:07.180885+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:24:07.186686+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:24:07.186763+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:07.186813+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:07.187364+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:07.188279+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:24:07.189809+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:07.190068+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:07.190105+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:07.194136+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:24:07.195315+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:24:08.048507+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:24:08.049907+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:24:08.050028+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:08.050117+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:08.051230+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:08.056700+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:24:08.059448+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:08.059792+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:08.059853+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:08.065341+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:24:08.067671+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:24:08.068401+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:24:08.068980+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:24:08.069467+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:24:08.069926+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:24:08.070401+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:24:08.070880+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:24:08.071291+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:24:08.071721+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:24:08.072189+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:24:08.072934+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:24:08.917182+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:24:08.917951+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:24:08.918023+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:08.918084+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:08.918711+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:08.922308+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:24:08.924287+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:08.924546+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:08.924590+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:08.928407+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:24:08.929968+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:24:08.930397+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:24:08.930796+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:24:08.931181+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:24:08.931562+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:24:08.931890+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:24:08.932262+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:24:08.932702+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:24:08.933108+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:24:08.933406+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:24:08.933881+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:24:45.359425+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:24:45.363914+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:24:45.907176+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"97f10c"},"request_uri":"http://localhost:8000/_wdt/97f10c","method":"GET"} []
[2020-04-21T18:24:55.972222+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:24:55.978558+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:24:56.421596+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"55be81"},"request_uri":"http://localhost:8000/_wdt/55be81","method":"GET"} []
[2020-04-21T18:24:56.455902+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:24:56.456947+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:24:56.457026+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:56.457092+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:56.457896+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:56.462428+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:24:56.465366+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:56.465827+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:56.465926+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:24:56.483930+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:24:56.490457+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:24:56.492926+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:24:56.495730+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:24:56.498302+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:24:56.499764+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:24:56.500533+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:24:56.501240+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:24:56.502115+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:24:56.504423+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:24:56.506221+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:24:56.507098+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:25:37.267972+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:25:37.274420+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:25:37.579140+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"db6579"},"request_uri":"http://localhost:8000/_wdt/db6579","method":"GET"} []
[2020-04-21T18:25:37.654753+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:25:37.655768+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:25:37.655844+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:37.655903+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:37.656800+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:37.660787+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:25:37.662218+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:37.662416+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:37.662448+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:37.666115+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:25:37.668475+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:25:37.669889+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:25:37.670762+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:25:37.671504+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:25:37.672607+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:25:37.673737+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:25:37.674781+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:25:37.675771+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:25:37.676817+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:25:37.677332+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:25:37.677907+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:25:42.238600+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:25:42.246237+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:25:42.530580+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0e1aa7"},"request_uri":"http://localhost:8000/_wdt/0e1aa7","method":"GET"} []
[2020-04-21T18:25:42.594643+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:25:42.595759+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:25:42.595816+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:42.595856+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:42.596491+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:42.601032+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:25:42.603425+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:42.603894+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:42.603974+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:42.614463+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:25:42.618004+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:25:42.619494+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:25:42.621315+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:25:42.623244+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:25:42.624444+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:25:42.625107+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:25:42.625655+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:25:42.626133+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:25:42.626614+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:25:42.627208+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:25:42.628098+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:25:49.089199+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:25:49.095058+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:25:49.366828+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"39b133"},"request_uri":"http://localhost:8000/_wdt/39b133","method":"GET"} []
[2020-04-21T18:25:49.443418+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:25:49.444584+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:25:49.444671+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:49.444740+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:49.445573+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:49.451139+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:25:49.453957+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:49.454240+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:49.454296+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:49.460261+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:25:49.465857+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:25:49.468398+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:25:49.470393+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:25:49.472509+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:25:49.475367+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:25:49.477907+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:25:49.480258+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:25:49.482057+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:25:49.483740+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:25:49.485175+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:25:49.486498+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:25:52.589820+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:25:52.594861+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:25:52.871919+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"472f4e"},"request_uri":"http://localhost:8000/_wdt/472f4e","method":"GET"} []
[2020-04-21T18:25:52.935372+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:25:52.936610+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:25:52.936723+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:52.936819+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:52.937678+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:52.943271+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:25:52.948602+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:52.949640+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:52.949843+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:25:52.959083+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:25:52.961664+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:25:52.962552+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:25:52.965010+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:25:52.967351+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:25:52.969705+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:25:52.971500+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:25:52.973498+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:25:52.975110+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:25:52.976598+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:25:52.978113+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:25:52.979560+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:26:03.214294+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:26:03.222878+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:26:03.525700+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"212dd0"},"request_uri":"http://localhost:8000/_wdt/212dd0","method":"GET"} []
[2020-04-21T18:26:03.603780+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:26:03.604975+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:26:03.605070+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:03.605167+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:03.606031+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:03.610230+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:26:03.612712+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:03.613025+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:03.613078+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:03.617466+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:26:03.621222+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:26:03.622731+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:26:03.623454+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:26:03.623918+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:26:03.624505+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:26:03.625085+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:26:03.625659+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:26:03.626215+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:26:03.626756+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:26:03.627281+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:26:03.627990+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:26:12.056454+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:26:12.060655+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:26:12.338917+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2cb1cd"},"request_uri":"http://localhost:8000/_wdt/2cb1cd","method":"GET"} []
[2020-04-21T18:26:12.397182+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:26:12.399561+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:26:12.399732+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:12.399824+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:12.400952+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:12.408780+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:26:12.411974+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:12.412508+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:12.412644+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:12.422280+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:26:12.427208+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:26:12.427936+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:26:12.428396+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:26:12.428843+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:26:12.429362+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:26:12.429970+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:26:12.431777+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:26:12.433481+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:26:12.435227+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:26:12.437400+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:26:12.441020+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:26:20.926104+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:26:20.932751+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:26:21.245943+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"466e16"},"request_uri":"http://localhost:8000/_wdt/466e16","method":"GET"} []
[2020-04-21T18:26:21.323002+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:26:21.323763+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:26:21.323824+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:21.323869+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:21.324448+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:21.328417+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:26:21.331744+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:21.332406+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:21.332531+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:21.342520+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:26:21.346016+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:26:21.347878+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:26:21.350351+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:26:21.352755+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:26:21.355024+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:26:21.357627+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:26:21.359691+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:26:21.362093+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:26:21.364081+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:26:21.365499+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:26:21.367957+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:26:25.027151+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:26:25.032922+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:26:25.350142+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ee31a5"},"request_uri":"http://localhost:8000/_wdt/ee31a5","method":"GET"} []
[2020-04-21T18:26:25.411137+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:26:25.412000+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:26:25.412075+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:25.412152+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:25.413105+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:25.419164+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:26:25.422330+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:25.422847+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:25.422938+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:25.435672+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:26:25.441863+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:26:25.444314+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:26:25.446387+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:26:25.448178+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:26:25.448910+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:26:25.449474+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:26:25.451458+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:26:25.453708+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:26:25.455673+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:26:25.457722+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:26:25.460111+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:26:28.115122+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:26:28.121472+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:26:28.420077+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9f6542"},"request_uri":"http://localhost:8000/_wdt/9f6542","method":"GET"} []
[2020-04-21T18:26:28.495086+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:26:28.496780+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:26:28.496905+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:28.497005+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:28.498063+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:28.502377+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:26:28.505421+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:28.505815+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:28.505875+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:26:28.509977+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:26:28.512765+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:26:28.514818+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:26:28.517442+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:26:28.519161+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:26:28.521490+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:26:28.524172+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:26:28.526873+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:26:28.529395+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:26:28.532352+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:26:28.535002+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:26:28.537247+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:27:00.605478+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:27:00.609297+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:27:00.890168+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0996f5"},"request_uri":"http://localhost:8000/_wdt/0996f5","method":"GET"} []
[2020-04-21T18:27:00.973803+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:27:00.975426+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:27:00.975553+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:27:00.975636+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:27:00.976703+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:27:00.983793+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:27:00.987221+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:27:00.987708+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:27:00.987782+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:27:00.994803+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:27:01.001776+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:27:01.004472+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:27:01.006731+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:27:01.008850+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:27:01.010854+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:27:01.012478+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:27:01.014277+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:27:01.015981+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:27:01.017241+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:27:01.019215+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:27:01.021444+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:27:26.598125+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:27:26.606891+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:27:26.897745+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"84cb15"},"request_uri":"http://localhost:8000/_wdt/84cb15","method":"GET"} []
[2020-04-21T18:27:26.959905+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:27:26.960821+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:27:26.960902+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:27:26.960956+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:27:26.961911+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:27:26.967433+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:27:26.970450+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:27:26.971126+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:27:26.971269+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:27:26.979409+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:27:26.981719+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:27:26.982817+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:27:26.984083+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:27:26.985284+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:27:26.986323+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:27:26.987357+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:27:26.987958+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:27:26.988338+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:27:26.988657+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:27:26.988962+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:27:26.989442+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:27:38.510027+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:27:38.515674+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:27:38.857329+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a267e1"},"request_uri":"http://localhost:8000/_wdt/a267e1","method":"GET"} []
[2020-04-21T18:27:38.918003+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:27:38.922144+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:27:38.922323+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:27:38.922448+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:27:38.924469+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:27:38.936254+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:27:38.945382+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:27:38.946313+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:27:38.946526+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:27:38.962104+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:27:38.965282+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [71] []
[2020-04-21T18:27:38.966394+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [72] []
[2020-04-21T18:27:38.967106+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [73] []
[2020-04-21T18:27:38.967673+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [74] []
[2020-04-21T18:27:38.968211+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [75] []
[2020-04-21T18:27:38.968721+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [76] []
[2020-04-21T18:27:38.969414+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [77] []
[2020-04-21T18:27:38.970094+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [78] []
[2020-04-21T18:27:38.970761+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [79] []
[2020-04-21T18:27:38.971492+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [80] []
[2020-04-21T18:27:38.972361+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:28:12.844578+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T18:28:12.860514+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T18:28:12.860934+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T18:28:12.861160+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T18:28:12.861397+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T18:28:12.861600+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T18:28:12.861901+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T18:28:12.862278+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T18:28:13.072929+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-04-21T18:28:13.080788+02:00] console.ERROR: Error thrown while running command "'doctrine:fixture:load' --no-interaction". Message: "Warning: A non-numeric value encountered" {"exception":"[object] (ErrorException(code: 0): Warning: A non-numeric value encountered at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php:45)","command":"'doctrine:fixture:load' --no-interaction","message":"Warning: A non-numeric value encountered"} []
[2020-04-21T18:28:13.081224+02:00] console.DEBUG: Command "'doctrine:fixture:load' --no-interaction" exited with code "1" {"command":"'doctrine:fixture:load' --no-interaction","code":1} []
[2020-04-21T18:29:47.453558+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T18:29:47.470670+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T18:29:47.471017+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T18:29:47.471221+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T18:29:47.471398+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T18:29:47.471597+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T18:29:47.471858+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T18:29:47.472130+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T18:29:47.682846+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-04-21T18:29:47.692090+02:00] console.ERROR: Error thrown while running command "'doctrine:fixture:load' --no-interaction". Message: "Argument 1 passed to App\Entity\Conference::setDescription() must be of the type string, array given, called in /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 45" {"exception":"[object] (TypeError(code: 0): Argument 1 passed to App\\Entity\\Conference::setDescription() must be of the type string, array given, called in /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 45 at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/Entity/Conference.php:90)","command":"'doctrine:fixture:load' --no-interaction","message":"Argument 1 passed to App\\Entity\\Conference::setDescription() must be of the type string, array given, called in /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 45"} []
[2020-04-21T18:29:47.692610+02:00] console.DEBUG: Command "'doctrine:fixture:load' --no-interaction" exited with code "1" {"command":"'doctrine:fixture:load' --no-interaction","code":1} []
[2020-04-21T18:29:47.692918+02:00] php.CRITICAL: Uncaught Error: Argument 1 passed to App\Entity\Conference::setDescription() must be of the type string, array given, called in /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 45 {"exception":"[object] (TypeError(code: 0): Argument 1 passed to App\\Entity\\Conference::setDescription() must be of the type string, array given, called in /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 45 at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/Entity/Conference.php:90)"} []
[2020-04-21T18:30:03.294324+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T18:30:03.310732+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T18:30:03.311189+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T18:30:03.311460+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T18:30:03.311735+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T18:30:03.311869+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T18:30:03.312142+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T18:30:03.312569+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T18:30:03.527887+02:00] doctrine.DEBUG: "ROLLBACK" [] []
[2020-04-21T18:30:03.535035+02:00] console.ERROR: Error thrown while running command "'doctrine:fixture:load' --no-interaction". Message: "Argument 1 passed to App\Entity\Conference::setDescription() must be of the type string, array given, called in /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 45" {"exception":"[object] (TypeError(code: 0): Argument 1 passed to App\\Entity\\Conference::setDescription() must be of the type string, array given, called in /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 45 at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/Entity/Conference.php:90)","command":"'doctrine:fixture:load' --no-interaction","message":"Argument 1 passed to App\\Entity\\Conference::setDescription() must be of the type string, array given, called in /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 45"} []
[2020-04-21T18:30:03.535215+02:00] console.DEBUG: Command "'doctrine:fixture:load' --no-interaction" exited with code "1" {"command":"'doctrine:fixture:load' --no-interaction","code":1} []
[2020-04-21T18:30:03.535340+02:00] php.CRITICAL: Uncaught Error: Argument 1 passed to App\Entity\Conference::setDescription() must be of the type string, array given, called in /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 45 {"exception":"[object] (TypeError(code: 0): Argument 1 passed to App\\Entity\\Conference::setDescription() must be of the type string, array given, called in /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/DataFixtures/AppFixtures.php on line 45 at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/src/Entity/Conference.php:90)"} []
[2020-04-21T18:30:28.618930+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T18:30:28.635563+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T18:30:28.635958+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T18:30:28.636086+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T18:30:28.636288+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T18:30:28.636457+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T18:30:28.636787+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T18:30:28.637105+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T18:30:28.854205+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Warre","2":"Praesentium labore quibusd [...]","3":"2020-04-21T18:30:28+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:28.854580+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Gabriel","2":"Ut ipsam nemo quia esse. S [...]","3":"2020-04-21T18:30:28+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:28.854769+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Anna","2":"Aperiam aut cumque omnis u [...]","3":"2020-04-21T18:30:28+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:28.854922+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Zoé","2":"Fugiat vel aut harum est i [...]","3":"2020-04-21T18:30:28+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:28.855080+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Eline","2":"Est doloribus fuga quibusd [...]","3":"2020-04-21T18:30:28+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:28.855275+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Kaat","2":"Aut assumenda quia ea ea r [...]","3":"2020-04-21T18:30:28+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:28.855505+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Hajar","2":"Nesciunt porro non asperio [...]","3":"2020-04-21T18:30:28+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:28.855740+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Elias","2":"Unde facere sed aliquid qu [...]","3":"2020-04-21T18:30:28+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:28.855909+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Amber","2":"Dolor veritatis illo ab no [...]","3":"2020-04-21T18:30:28+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:28.856102+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Enzo","2":"Autem cum blanditiis est.  [...]","3":"2020-04-21T18:30:28+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:28.856552+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.com","2":[],"3":"$argon2i$v=19$m=65536,t=4, [...]","4":"robin","5":"robin","6":null,"7":null,"8":true} []
[2020-04-21T18:30:28.856763+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-21T18:30:32.526078+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:30:32.531438+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:30:32.963478+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fefff1"},"request_uri":"http://localhost:8000/_wdt/fefff1","method":"GET"} []
[2020-04-21T18:30:33.079818+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:30:33.082999+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:30:33.083231+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:30:33.083330+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:30:33.083928+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:30:33.089513+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:30:33.097429+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:30:33.098484+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:30:33.098613+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:30:33.109103+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:30:33.116923+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [81] []
[2020-04-21T18:30:33.118729+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [82] []
[2020-04-21T18:30:33.120653+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [83] []
[2020-04-21T18:30:33.122808+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [84] []
[2020-04-21T18:30:33.123593+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [85] []
[2020-04-21T18:30:33.124207+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [86] []
[2020-04-21T18:30:33.124947+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [87] []
[2020-04-21T18:30:33.125668+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [88] []
[2020-04-21T18:30:33.126339+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [89] []
[2020-04-21T18:30:33.127068+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [90] []
[2020-04-21T18:30:33.128246+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:30:54.135050+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T18:30:54.153899+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T18:30:54.154265+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T18:30:54.154497+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T18:30:54.154666+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T18:30:54.154829+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T18:30:54.155097+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T18:30:54.155477+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T18:30:54.372271+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Laura","2":"Doloribus quam aperiam ut  [...]","3":"2020-04-21T18:30:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:54.372707+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference David","2":"Mollitia quibusdam digniss [...]","3":"2020-04-21T18:30:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:54.372943+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Loïc","2":"Ab mollitia voluptates aut [...]","3":"2020-04-21T18:30:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:54.373148+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Helena","2":"Perspiciatis incidunt haru [...]","3":"2020-04-21T18:30:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:54.373401+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Hajar","2":"Veritatis maiores omnis vo [...]","3":"2020-04-21T18:30:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:54.373667+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Dylan","2":"Minima architecto architec [...]","3":"2020-04-21T18:30:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:54.373866+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Tess","2":"Unde ratione enim voluptat [...]","3":"2020-04-21T18:30:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:54.374035+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Linde","2":"Quisquam cumque labore ut  [...]","3":"2020-04-21T18:30:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:54.374178+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Rania","2":"Odio sit molestiae ipsum i [...]","3":"2020-04-21T18:30:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:54.374315+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Emilie","2":"Et id nam est. In adipisci [...]","3":"2020-04-21T18:30:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T18:30:54.374719+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.com","2":[],"3":"$argon2i$v=19$m=65536,t=4, [...]","4":"robin","5":"robin","6":null,"7":null,"8":true} []
[2020-04-21T18:30:54.374910+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-21T18:30:56.703181+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:30:56.708198+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:30:57.064459+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"25717b"},"request_uri":"http://localhost:8000/_wdt/25717b","method":"GET"} []
[2020-04-21T18:30:57.178591+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:30:57.181279+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:30:57.181425+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:30:57.181571+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:30:57.182737+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:30:57.190349+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:30:57.195892+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:30:57.197249+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:30:57.197428+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:30:57.215100+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:30:57.222563+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:30:57.225859+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:30:57.227910+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:30:57.230291+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:30:57.233212+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:30:57.236659+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:30:57.238114+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:30:57.240956+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:30:57.242265+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:30:57.244008+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:30:57.246511+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:31:21.620827+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:31:21.627945+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:31:22.050773+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1d9281"},"request_uri":"http://localhost:8000/_wdt/1d9281","method":"GET"} []
[2020-04-21T18:31:22.125421+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:31:22.129647+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:31:22.130035+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:31:22.130396+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:31:22.132966+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:31:22.143218+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:31:22.145541+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:31:22.145827+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:31:22.145876+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:31:22.150523+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:31:22.152937+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:31:22.153878+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:31:22.154871+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:31:22.156759+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:31:22.158902+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:31:22.160614+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:31:22.162222+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:31:22.163655+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:31:22.165886+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:31:22.168425+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:31:22.170564+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:31:40.981083+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:31:40.984324+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:31:40.984379+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:31:40.984426+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:31:40.984855+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:31:40.985458+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:31:40.986942+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:31:40.987327+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:31:40.987393+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:31:40.991175+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:31:40.992223+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:31:42.074941+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:31:42.075556+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:31:42.075613+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:31:42.075655+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:31:42.076094+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:31:42.078732+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:31:42.080283+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:31:42.080524+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:31:42.080561+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:31:42.083818+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:31:42.085802+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:31:42.086587+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:31:42.087244+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:31:42.087904+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:31:42.088467+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:31:42.088982+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:31:42.089483+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:31:42.090000+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:31:42.090479+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:31:42.090911+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:31:42.091465+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:34:54.523471+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:34:54.528634+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:34:54.913401+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"548efd"},"request_uri":"http://localhost:8000/_wdt/548efd","method":"GET"} []
[2020-04-21T18:34:54.993614+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:34:54.995420+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:34:54.995572+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:34:54.995679+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:34:54.996933+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:34:55.005476+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:34:55.011270+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:34:55.011712+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:34:55.011768+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:34:55.019884+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:34:55.025423+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:34:55.027808+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:34:55.029592+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:34:55.031998+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:34:55.034762+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:34:55.037347+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:34:55.039814+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:34:55.042162+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:34:55.043919+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:34:55.045674+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:34:55.048017+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:35:00.596575+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:35:00.603115+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:35:00.958730+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"77c8fc"},"request_uri":"http://localhost:8000/_wdt/77c8fc","method":"GET"} []
[2020-04-21T18:35:00.996577+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:35:00.998880+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:35:00.998960+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:00.999021+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:00.999789+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:01.004837+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:35:01.008109+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:01.008514+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:01.008607+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:01.021070+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:35:01.026915+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:35:01.029256+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:35:01.030939+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:35:01.031748+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:35:01.032519+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:35:01.033418+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:35:01.034292+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:35:01.034950+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:35:01.035561+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:35:01.036403+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:35:01.037403+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:35:03.104725+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:35:03.108518+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:35:03.478300+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e69e42"},"request_uri":"http://localhost:8000/_wdt/e69e42","method":"GET"} []
[2020-04-21T18:35:03.516522+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:35:03.517462+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:35:03.517538+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:03.517593+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:03.518153+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:03.521366+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:35:03.523428+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:03.523826+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:03.523929+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:03.537883+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:35:03.545085+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:35:03.547118+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:35:03.549119+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:35:03.551987+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:35:03.555072+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:35:03.558802+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:35:03.559702+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:35:03.560827+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:35:03.562324+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:35:03.564110+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:35:03.566614+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:35:38.385767+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:35:38.389618+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:35:38.736750+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"04577a"},"request_uri":"http://localhost:8000/_wdt/04577a","method":"GET"} []
[2020-04-21T18:35:38.772498+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:35:38.773353+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:35:38.773404+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:38.773458+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:38.774023+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:38.776767+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:35:38.778334+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:38.778605+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:38.778657+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:38.788585+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:35:38.794772+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:35:38.797116+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:35:38.799885+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:35:38.802564+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:35:38.805282+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:35:38.806878+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:35:38.807618+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:35:38.808508+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:35:38.809660+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:35:38.810859+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:35:38.812303+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:35:42.085860+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:35:42.094913+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:35:42.475624+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5d1b71"},"request_uri":"http://localhost:8000/_wdt/5d1b71","method":"GET"} []
[2020-04-21T18:35:42.525199+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:35:42.527326+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:35:42.527481+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:42.527593+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:42.528717+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:42.532352+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:35:42.534279+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:42.534782+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:42.534886+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:35:42.543373+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:35:42.550871+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:35:42.555051+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:35:42.558021+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:35:42.560858+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:35:42.563477+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:35:42.565332+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:35:42.566310+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:35:42.567136+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:35:42.567702+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:35:42.568295+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:35:42.570840+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:36:02.151756+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:36:02.155960+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:36:02.512905+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6669a6"},"request_uri":"http://localhost:8000/_wdt/6669a6","method":"GET"} []
[2020-04-21T18:36:02.549808+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:36:02.550754+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:36:02.550828+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:02.550893+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:02.551648+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:02.556015+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:36:02.562482+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:02.563271+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:02.563452+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:02.577196+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:36:02.582335+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:36:02.585296+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:36:02.588237+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:36:02.591279+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:36:02.592338+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:36:02.593010+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:36:02.593561+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:36:02.594137+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:36:02.594688+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:36:02.595143+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:36:02.596868+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:36:07.088707+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:36:07.092604+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:36:07.418183+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b661e3"},"request_uri":"http://localhost:8000/_wdt/b661e3","method":"GET"} []
[2020-04-21T18:36:07.445997+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:36:07.447017+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:36:07.447140+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:07.447234+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:07.448453+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:07.454427+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:36:07.457278+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:07.457531+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:07.457570+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:07.461757+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:36:07.464766+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:36:07.466380+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:36:07.469347+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:36:07.472642+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:36:07.475223+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:36:07.477566+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:36:07.479918+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:36:07.481430+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:36:07.482158+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:36:07.482839+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:36:07.484255+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:36:18.018245+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:36:18.022012+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:36:18.381964+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b92bc2"},"request_uri":"http://localhost:8000/_wdt/b92bc2","method":"GET"} []
[2020-04-21T18:36:18.420519+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:36:18.422044+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:36:18.422167+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:18.422249+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:18.424242+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:18.430662+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:36:18.435490+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:18.435946+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:18.436029+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:18.443806+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:36:18.448621+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:36:18.450923+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:36:18.452711+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:36:18.456776+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:36:18.457973+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:36:18.459026+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:36:18.459995+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:36:18.462131+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:36:18.465471+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:36:18.468489+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:36:18.471646+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:36:35.284566+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:36:35.291153+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:36:35.606557+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fc0d94"},"request_uri":"http://localhost:8000/_wdt/fc0d94","method":"GET"} []
[2020-04-21T18:36:35.673820+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:36:35.674611+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:36:35.674667+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:35.674728+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:35.675380+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:35.683680+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:36:35.690336+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:35.691370+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:35.691530+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:35.696963+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:36:35.698951+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:36:35.699814+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:36:35.700563+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:36:35.701133+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:36:35.701559+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:36:35.701914+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:36:35.702243+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:36:35.702586+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:36:35.702996+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:36:35.703436+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:36:35.704361+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:36:39.439352+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:36:39.443967+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:36:39.761232+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"30a582"},"request_uri":"http://localhost:8000/_wdt/30a582","method":"GET"} []
[2020-04-21T18:36:39.879576+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:36:39.880882+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:36:39.881127+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:39.881264+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:39.882614+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:39.891022+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:36:39.893423+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:39.893822+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:39.893891+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:39.912270+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:36:39.917910+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:36:39.920467+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:36:39.923126+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:36:39.925523+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:36:39.926271+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:36:39.927367+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:36:39.930460+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:36:39.933713+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:36:39.936546+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:36:39.939303+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:36:39.942213+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:36:49.416265+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:36:49.421787+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:36:49.730820+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f562c5"},"request_uri":"http://localhost:8000/_wdt/f562c5","method":"GET"} []
[2020-04-21T18:36:49.794460+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:36:49.796113+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:36:49.796271+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:49.796379+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:49.797273+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:49.801536+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:36:49.803451+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:49.803776+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:49.803835+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:49.807823+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:36:49.809675+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:36:49.810370+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:36:49.810986+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:36:49.812059+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:36:49.812932+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:36:49.813824+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:36:49.814657+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:36:49.815798+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:36:49.817179+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:36:49.819749+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:36:49.821510+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:36:58.754151+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:36:58.759092+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:36:59.065385+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"723a9b"},"request_uri":"http://localhost:8000/_wdt/723a9b","method":"GET"} []
[2020-04-21T18:36:59.158546+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:36:59.161311+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:36:59.161572+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:59.161737+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:59.163313+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:59.167895+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:36:59.169709+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:59.169969+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:59.170015+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:36:59.175130+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:36:59.177151+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:36:59.177816+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:36:59.178365+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:36:59.178842+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:36:59.179292+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:36:59.179894+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:36:59.180883+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:36:59.182138+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:36:59.184665+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:36:59.185573+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:36:59.186539+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:37:15.903266+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:37:15.908468+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:37:16.207226+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"de91c5"},"request_uri":"http://localhost:8000/_wdt/de91c5","method":"GET"} []
[2020-04-21T18:37:16.263180+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:37:16.264967+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:37:16.265106+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:16.265214+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:16.266279+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:16.271038+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:37:16.275602+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:16.276085+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:16.276248+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:16.285397+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:37:16.288610+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:37:16.289318+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:37:16.289812+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:37:16.290320+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:37:16.290835+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:37:16.291312+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:37:16.291750+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:37:16.292193+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:37:16.292669+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:37:16.294092+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:37:16.296820+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:37:19.460583+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:37:19.463670+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:37:19.463732+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:19.463771+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:19.464277+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:19.464975+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:37:19.466576+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:19.466852+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:19.466890+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:19.469848+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:37:19.470976+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:37:21.756692+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:37:21.757258+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:37:21.757304+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:21.757341+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:21.757800+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:21.760713+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:37:21.763070+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:21.763303+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:21.763344+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:21.766709+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:37:21.768608+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:37:21.769384+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:37:21.770041+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:37:21.770748+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:37:21.771424+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:37:21.772077+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:37:21.772752+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:37:21.773268+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:37:21.773705+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:37:21.774151+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:37:21.774810+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:37:23.418580+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:37:23.419304+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:37:23.419357+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:23.419395+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:23.419889+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:23.422709+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:37:23.424632+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:23.424871+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:23.424903+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:23.429239+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:37:23.430826+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:37:23.431626+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:37:23.432286+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:37:23.432917+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:37:23.433563+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:37:23.434272+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:37:23.434870+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:37:23.435401+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:37:23.435888+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:37:23.436455+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:37:23.437162+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:37:24.551887+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:37:24.552650+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:37:24.552728+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:24.552784+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:24.553332+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:24.556319+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:37:24.558264+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:24.558483+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:24.558520+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:24.562414+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:37:24.564407+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:37:24.565202+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:37:24.565861+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:37:24.566492+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:37:24.567091+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:37:24.567771+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:37:24.568344+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:37:24.568816+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:37:24.569252+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:37:24.569684+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:37:24.570243+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:37:25.130304+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:37:25.133797+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:37:25.133874+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:25.133940+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:25.134462+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:25.135187+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:37:25.136844+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:25.137112+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:25.137162+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:25.140349+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:37:25.141399+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:37:29.486223+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T18:37:29.491285+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:37:29.723015+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-21T18:37:29.764284+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:37:29.765217+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:37:29.765285+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:29.765358+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:29.765952+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:29.769244+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:37:29.770908+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:29.771115+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:29.771148+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:37:29.775014+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:37:29.777508+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:37:29.778549+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:37:29.779277+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:37:29.779954+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:37:29.780671+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:37:29.781310+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:37:29.782097+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:37:29.782926+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:37:29.783641+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:37:29.784315+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:37:29.785143+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:40:02.453487+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:40:02.458768+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:40:02.458855+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:02.458916+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:02.459703+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:02.460863+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:40:02.463049+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:02.463417+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:02.463465+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:02.467484+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:40:02.468518+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:40:03.961485+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:40:03.962014+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:40:03.962061+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:03.962108+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:03.962507+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:03.964732+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:40:03.966286+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:03.966523+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:03.966563+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:03.969315+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:40:03.971055+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:40:03.971829+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:40:03.972614+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:40:03.973354+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:40:03.974690+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:40:03.975716+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:40:03.976466+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:40:03.977218+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:40:03.977983+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:40:03.978673+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:40:03.979468+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:40:05.821536+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:40:05.822471+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:40:05.822532+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:05.822586+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:05.823276+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:05.827093+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:40:05.828847+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:05.829332+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:05.829420+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:05.834680+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:40:05.836442+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:40:05.837668+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:40:05.838588+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:40:05.839155+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:40:05.839631+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:40:05.840266+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:40:05.840856+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:40:05.841418+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:40:05.842099+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:40:05.842786+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:40:05.843627+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:40:06.744465+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:40:06.745027+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:40:06.745080+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:06.745124+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:06.745551+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:06.748022+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:40:06.749674+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:06.749941+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:06.749981+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:40:06.753277+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:40:06.755307+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:40:06.756005+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:40:06.756540+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:40:06.757004+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:40:06.757467+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:40:06.757971+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:40:06.758451+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:40:06.758879+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:40:06.759248+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:40:06.759627+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:40:06.760117+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:41:13.836391+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:41:13.840876+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:41:13.840939+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:13.840977+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:13.841541+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:13.842475+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:41:13.844358+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:13.844688+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:13.844733+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:13.847759+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:41:13.849094+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:41:16.587293+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:41:16.588075+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:41:16.588193+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:16.588287+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:16.588797+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:16.591771+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:41:16.593543+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:16.593828+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:16.593870+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:16.597577+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:41:16.599497+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:41:16.600412+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:41:16.600991+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:41:16.601642+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:41:16.602341+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:41:16.603256+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:41:16.603952+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:41:16.604566+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:41:16.605091+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:41:16.605619+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:41:16.606324+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:41:27.457974+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:41:27.461657+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:41:27.827319+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1ca013"},"request_uri":"http://localhost:8000/_wdt/1ca013","method":"GET"} []
[2020-04-21T18:41:27.988908+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:41:27.989773+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:41:27.989846+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:27.989916+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:27.990551+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:27.995001+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:41:27.996677+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:27.996919+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:27.996959+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:28.000428+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:41:28.003290+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:41:28.005070+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:41:28.006352+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:41:28.007729+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:41:28.009046+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:41:28.009742+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:41:28.010584+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:41:28.011593+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:41:28.012331+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:41:28.013117+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:41:28.014320+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:41:30.949257+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:41:30.953029+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:41:30.953100+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:30.953146+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:30.953709+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:30.954601+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:41:30.956429+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:30.956692+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:30.956732+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:30.960066+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:41:30.961000+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:41:32.000681+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:41:32.001357+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:41:32.001421+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:32.001497+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:32.001969+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:32.005263+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:41:32.006911+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:32.007148+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:32.007192+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:32.010515+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:41:32.012442+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:41:32.013431+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [92] []
[2020-04-21T18:41:32.014106+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:41:32.014669+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:41:32.015213+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:41:32.015688+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:41:32.016148+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:41:32.016615+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:41:32.017135+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:41:32.017717+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:41:32.018552+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:41:45.470004+02:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"92"},"request_uri":"http://localhost:8000/api/conferences/92","method":"DELETE"} []
[2020-04-21T18:41:45.470718+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:41:45.470773+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:45.470830+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:45.471459+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:45.474868+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:41:45.476281+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:45.476503+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:45.476535+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:45.480987+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ WHERE c0_.id = ? [92] []
[2020-04-21T18:41:45.483419+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T18:41:45.483722+02:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [92] []
[2020-04-21T18:41:45.484065+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-21T18:41:48.563408+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:41:48.566647+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:41:48.566719+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:48.566759+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:48.567250+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:48.568284+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:41:48.570371+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:48.570633+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:48.570668+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:48.573422+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:41:48.574342+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:41:58.966414+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:41:58.968636+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:41:58.968877+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:58.969075+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:58.970701+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:58.978454+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:41:58.981527+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:58.981983+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:58.982049+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:58.988462+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:41:58.990730+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:41:58.991569+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:41:58.992340+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:41:58.993161+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:41:58.993937+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:41:58.994492+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:41:58.994992+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:41:58.995420+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:41:58.995825+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:41:58.996452+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:41:59.942839+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:41:59.943518+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:41:59.943562+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:59.943607+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:59.944219+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:59.946554+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:41:59.947905+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:59.948242+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:59.948323+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:41:59.952769+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:41:59.955185+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:41:59.956081+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:41:59.956882+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:41:59.957649+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:41:59.958381+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:41:59.959077+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:41:59.959763+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:41:59.960492+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:41:59.961260+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:41:59.962089+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:42:29.339269+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:42:29.342812+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:42:29.630892+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3a8f63"},"request_uri":"http://localhost:8000/_wdt/3a8f63","method":"GET"} []
[2020-04-21T18:42:29.684804+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:42:29.687101+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:42:29.687262+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:42:29.687404+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:42:29.688715+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:42:29.696460+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:42:29.701603+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:42:29.702272+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:42:29.702389+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:42:29.713330+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:42:29.717613+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:42:29.719550+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:42:29.722047+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:42:29.724265+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:42:29.726393+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:42:29.728609+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:42:29.730669+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:42:29.731941+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:42:29.732991+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:42:29.735593+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:43:01.323476+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:43:01.326971+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:43:01.651739+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a14f31"},"request_uri":"http://localhost:8000/_wdt/a14f31","method":"GET"} []
[2020-04-21T18:43:01.723525+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:43:01.724257+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:43:01.724305+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:43:01.724343+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:43:01.724831+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:43:01.727485+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:43:01.729025+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:43:01.729355+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:43:01.729405+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:43:01.734230+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:43:01.742016+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:43:01.744978+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:43:01.747300+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:43:01.749425+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:43:01.751656+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:43:01.753918+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:43:01.756426+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:43:01.759174+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:43:01.761870+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:43:01.763069+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:43:03.582590+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:43:03.588259+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:43:03.882983+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d64e28"},"request_uri":"http://localhost:8000/_wdt/d64e28","method":"GET"} []
[2020-04-21T18:43:03.946827+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:43:03.947592+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:43:03.947649+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:43:03.947704+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:43:03.948346+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:43:03.954146+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:43:03.958068+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:43:03.958716+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:43:03.958858+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:43:03.969424+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:43:03.975865+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:43:03.979022+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:43:03.981936+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:43:03.984313+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:43:03.986837+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:43:03.988771+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:43:03.990858+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:43:03.993336+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:43:03.995511+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:43:03.999338+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:43:22.141531+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:43:22.145090+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:43:22.453072+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"13cb89"},"request_uri":"http://localhost:8000/_wdt/13cb89","method":"GET"} []
[2020-04-21T18:43:22.522441+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:43:22.523090+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:43:22.523141+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:43:22.523181+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:43:22.523684+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:43:22.527521+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:43:22.530006+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:43:22.530389+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:43:22.530455+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:43:22.537899+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:43:22.541538+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:43:22.543106+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:43:22.544460+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:43:22.545575+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:43:22.546196+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:43:22.546702+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:43:22.547696+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:43:22.551147+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:43:22.554233+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:43:22.558640+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:44:35.390666+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:44:35.403858+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:44:35.888078+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5b6d17"},"request_uri":"http://localhost:8000/_wdt/5b6d17","method":"GET"} []
[2020-04-21T18:44:36.409944+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:44:36.410910+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:44:36.410986+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:44:36.411032+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:44:36.411729+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:44:36.422777+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:44:36.426932+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:44:36.427268+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:44:36.427317+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:44:36.431593+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:44:36.433534+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:44:36.434275+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:44:36.434800+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:44:36.435238+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:44:36.435644+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:44:36.436030+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:44:36.436399+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:44:36.436800+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:44:36.437211+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:44:36.437794+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:44:59.382360+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:44:59.392147+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:44:59.866542+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f3d713"},"request_uri":"http://localhost:8000/_wdt/f3d713","method":"GET"} []
[2020-04-21T18:44:59.983162+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:44:59.985645+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:44:59.985868+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:44:59.986034+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:44:59.987696+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:44:59.995405+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:45:00.000988+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:45:00.002065+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:45:00.002248+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:45:00.009895+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:45:00.019279+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:45:00.022774+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:45:00.026326+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:45:00.029740+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:45:00.033269+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:45:00.036072+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:45:00.037214+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:45:00.038024+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:45:00.038668+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:45:00.039773+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:45:09.674420+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:45:09.681151+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:45:10.034790+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"609127"},"request_uri":"http://localhost:8000/_wdt/609127","method":"GET"} []
[2020-04-21T18:45:10.072848+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:45:10.073731+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:45:10.073796+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:45:10.073857+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:45:10.074573+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:45:10.084179+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:45:10.094239+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:45:10.095591+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:45:10.095878+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:45:10.110472+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:45:10.114994+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:45:10.117466+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:45:10.120167+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:45:10.122695+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:45:10.125050+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:45:10.126498+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:45:10.127201+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:45:10.127882+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:45:10.129163+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:45:10.130868+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:45:24.989925+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:45:24.994318+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:45:25.314984+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"aa985b"},"request_uri":"http://localhost:8000/_wdt/aa985b","method":"GET"} []
[2020-04-21T18:45:25.382470+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:45:25.385079+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:45:25.385226+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:45:25.385321+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:45:25.386164+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:45:25.390228+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:45:25.392140+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:45:25.392421+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:45:25.392470+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:45:25.397799+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:45:25.401018+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:45:25.402384+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:45:25.403460+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:45:25.404598+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:45:25.405748+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:45:25.406690+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:45:25.409265+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:45:25.411818+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:45:25.414239+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:45:25.417418+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:46:11.755800+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:46:11.760919+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:46:12.135181+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"dfaafc"},"request_uri":"http://localhost:8000/_wdt/dfaafc","method":"GET"} []
[2020-04-21T18:46:12.174260+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:46:12.175234+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:46:12.175332+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:46:12.175401+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:46:12.176553+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:46:12.187029+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:46:12.194740+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:46:12.195337+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:46:12.195424+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:46:12.204146+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:46:12.206947+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:46:12.208110+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:46:12.209912+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:46:12.211151+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:46:12.212927+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:46:12.214196+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:46:12.215530+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:46:12.217650+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:46:12.220292+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:46:12.224280+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:46:22.854107+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:46:22.859974+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:46:23.195662+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0c306e"},"request_uri":"http://localhost:8000/_wdt/0c306e","method":"GET"} []
[2020-04-21T18:46:23.241562+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:46:23.242569+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:46:23.242656+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:46:23.242723+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:46:23.243514+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:46:23.250610+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:46:23.257653+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:46:23.258778+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:46:23.259019+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:46:23.270551+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:46:23.272609+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:46:23.273359+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:46:23.273864+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:46:23.274310+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:46:23.275042+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:46:23.276194+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:46:23.278797+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:46:23.281598+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:46:23.284499+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:46:23.287931+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:47:10.390238+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:47:10.396230+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:47:10.740546+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e97110"},"request_uri":"http://localhost:8000/_wdt/e97110","method":"GET"} []
[2020-04-21T18:47:11.255445+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:47:11.258252+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:47:11.258636+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:47:11.258973+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:47:11.261157+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:47:11.268273+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:47:11.271234+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:47:11.271587+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:47:11.271644+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:47:11.277365+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:47:11.280020+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:47:11.280571+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:47:11.281001+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:47:11.281413+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:47:11.281818+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:47:11.282240+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:47:11.282664+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:47:11.283091+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:47:11.283530+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:47:11.284210+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:47:27.464586+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:47:27.470240+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:47:27.771346+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"df550a"},"request_uri":"http://localhost:8000/_wdt/df550a","method":"GET"} []
[2020-04-21T18:47:27.827374+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:47:27.828300+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:47:27.828371+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:47:27.828431+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:47:27.829233+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:47:27.833706+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:47:27.838322+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:47:27.838667+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:47:27.838718+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:47:27.851991+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:47:27.858443+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:47:27.861883+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:47:27.865564+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:47:27.868923+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:47:27.871349+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:47:27.873961+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:47:27.875891+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:47:27.878637+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:47:27.881566+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:47:27.885323+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:48:00.047696+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:48:00.057016+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:48:00.382564+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"58a9cb"},"request_uri":"http://localhost:8000/_wdt/58a9cb","method":"GET"} []
[2020-04-21T18:48:00.453357+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:48:00.454582+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:48:00.454868+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:00.455089+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:00.457450+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:00.467096+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:48:00.471342+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:00.471680+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:00.471744+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:00.479374+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:48:00.483629+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:48:00.484369+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:48:00.484761+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:48:00.485194+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:48:00.485599+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:48:00.485953+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:48:00.486264+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:48:00.486563+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:48:00.486861+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:48:00.487314+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:48:07.164463+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:48:07.168732+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:48:07.478568+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"82573b"},"request_uri":"http://localhost:8000/_wdt/82573b","method":"GET"} []
[2020-04-21T18:48:07.628426+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:48:07.631156+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:48:07.631385+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:07.631567+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:07.633243+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:07.641005+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:48:07.647568+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:07.648641+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:07.648819+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:07.657650+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:48:07.663317+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:48:07.666005+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:48:07.667940+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:48:07.669864+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:48:07.671515+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:48:07.673176+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:48:07.675481+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:48:07.678105+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:48:07.680406+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:48:07.683789+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:48:43.931701+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:48:43.935122+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:48:44.218343+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6a54c1"},"request_uri":"http://localhost:8000/_wdt/6a54c1","method":"GET"} []
[2020-04-21T18:48:44.267841+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:48:44.268465+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:48:44.268519+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:44.268560+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:44.269041+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:44.274917+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:48:44.277371+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:44.277716+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:44.277767+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:44.281580+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:48:44.284211+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:48:44.285698+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:48:44.286655+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:48:44.287202+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:48:44.288049+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:48:44.289072+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:48:44.290169+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:48:44.291628+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:48:44.294601+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:48:44.298787+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:48:58.159105+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:48:58.166249+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:48:58.482296+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2a4ffc"},"request_uri":"http://localhost:8000/_wdt/2a4ffc","method":"GET"} []
[2020-04-21T18:48:58.574603+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:48:58.575603+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:48:58.575682+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:58.575742+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:58.576479+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:58.580447+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:48:58.582460+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:58.582730+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:58.582780+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:48:58.588460+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:48:58.595387+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:48:58.598036+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:48:58.600044+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:48:58.601683+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:48:58.603497+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:48:58.605770+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:48:58.607975+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:48:58.611245+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:48:58.614265+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:48:58.617683+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:49:01.928403+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:49:01.933620+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:49:02.292463+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"64fe82"},"request_uri":"http://localhost:8000/_wdt/64fe82","method":"GET"} []
[2020-04-21T18:49:02.376980+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:49:02.381323+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:49:02.381610+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:02.381838+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:02.384253+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:02.394448+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:49:02.396567+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:02.396943+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:02.396990+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:02.401605+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:49:02.405993+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:49:02.408928+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:49:02.411879+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:49:02.415428+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:49:02.418098+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:49:02.420788+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:49:02.423457+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:49:02.425809+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:49:02.427816+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:49:02.431108+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:49:16.827907+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:49:16.833629+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:49:17.135305+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"984ad4"},"request_uri":"http://localhost:8000/_wdt/984ad4","method":"GET"} []
[2020-04-21T18:49:17.211578+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:49:17.213296+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:49:17.213507+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:17.213678+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:17.214766+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:17.219190+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:49:17.222159+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:17.222460+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:17.222523+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:17.232555+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:49:17.238358+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:49:17.240424+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:49:17.242663+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:49:17.244427+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:49:17.246807+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:49:17.248003+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:49:17.248849+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:49:17.249688+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:49:17.250213+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:49:17.250746+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:49:32.854993+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:49:32.861842+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:49:33.203911+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3961c1"},"request_uri":"http://localhost:8000/_wdt/3961c1","method":"GET"} []
[2020-04-21T18:49:33.278567+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:49:33.280421+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:49:33.280575+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:33.280665+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:33.281889+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:33.286593+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:49:33.290635+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:33.291167+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:33.291274+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:33.300592+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:49:33.306825+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:49:33.308481+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:49:33.311122+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:49:33.313618+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:49:33.316307+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:49:33.318860+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:49:33.319810+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:49:33.320368+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:49:33.320862+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:49:33.321525+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:49:42.817259+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:49:42.822780+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:49:43.137777+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"752f86"},"request_uri":"http://localhost:8000/_wdt/752f86","method":"GET"} []
[2020-04-21T18:49:43.207036+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:49:43.210152+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:49:43.210307+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:43.210450+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:43.211367+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:43.215875+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:49:43.218489+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:43.218821+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:43.218875+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:43.224490+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:49:43.227055+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:49:43.228336+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:49:43.229421+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:49:43.231678+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:49:43.233521+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:49:43.234330+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:49:43.234975+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:49:43.235444+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:49:43.236013+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:49:43.239269+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:49:48.699986+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:49:48.706823+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:49:49.049516+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"98bb66"},"request_uri":"http://localhost:8000/_wdt/98bb66","method":"GET"} []
[2020-04-21T18:49:49.132834+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:49:49.133705+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:49:49.133793+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:49.133856+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:49.134704+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:49.144321+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:49:49.151388+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:49.152502+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:49.152748+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:49.160102+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:49:49.162321+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:49:49.163112+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:49:49.163846+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:49:49.164509+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:49:49.165170+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:49:49.165855+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:49:49.166406+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:49:49.166917+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:49:49.167357+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:49:49.167974+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:49:52.093987+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:49:52.099699+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:49:52.412390+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fd865f"},"request_uri":"http://localhost:8000/_wdt/fd865f","method":"GET"} []
[2020-04-21T18:49:52.476659+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:49:52.478553+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:49:52.478713+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:52.478835+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:52.480283+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:52.488469+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:49:52.495633+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:52.496590+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:52.496801+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:52.504468+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:49:52.511512+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:49:52.513889+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:49:52.516387+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:49:52.519369+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:49:52.521371+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:49:52.524098+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:49:52.526795+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:49:52.529747+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:49:52.531639+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:49:52.533172+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:49:59.284035+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:49:59.288230+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:49:59.655952+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a9fad9"},"request_uri":"http://localhost:8000/_wdt/a9fad9","method":"GET"} []
[2020-04-21T18:49:59.702980+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:49:59.705711+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:49:59.705811+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:59.705891+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:59.706729+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:59.710312+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:49:59.715149+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:59.715926+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:59.716034+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:49:59.728748+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:49:59.737718+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:49:59.739791+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:49:59.740640+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:49:59.741409+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:49:59.742012+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:49:59.742553+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:49:59.743014+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:49:59.743438+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:49:59.743874+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:49:59.744555+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:50:05.091320+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:50:05.096056+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:50:05.413352+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"94bc55"},"request_uri":"http://localhost:8000/_wdt/94bc55","method":"GET"} []
[2020-04-21T18:50:05.494126+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:50:05.494901+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:50:05.494955+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:05.494995+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:05.495629+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:05.498785+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:50:05.500230+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:05.500622+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:05.500674+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:05.504657+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:50:05.507555+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:50:05.508856+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:50:05.509868+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:50:05.511203+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:50:05.513263+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:50:05.515575+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:50:05.517626+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:50:05.520600+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:50:05.523495+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:50:05.527580+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:50:12.251031+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:50:12.256305+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:50:12.532682+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a6546b"},"request_uri":"http://localhost:8000/_wdt/a6546b","method":"GET"} []
[2020-04-21T18:50:12.597663+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:50:12.598355+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:50:12.598408+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:12.598450+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:12.598963+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:12.603308+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:50:12.606511+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:12.607009+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:12.607118+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:12.615715+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:50:12.618573+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:50:12.620432+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:50:12.622278+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:50:12.624082+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:50:12.625780+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:50:12.626711+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:50:12.628169+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:50:12.630857+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:50:12.632508+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:50:12.633613+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:50:34.529620+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:50:34.533275+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:50:34.857342+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c4ec64"},"request_uri":"http://localhost:8000/_wdt/c4ec64","method":"GET"} []
[2020-04-21T18:50:34.923683+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:50:34.924838+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:50:34.924907+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:34.924973+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:34.925497+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:34.929090+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:50:34.930799+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:34.931077+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:34.931144+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:34.935978+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:50:34.937923+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:50:34.939215+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:50:34.940457+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:50:34.941584+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:50:34.942834+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:50:34.943989+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:50:34.945573+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:50:34.947919+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:50:34.949903+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:50:34.952865+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:50:43.968799+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:50:43.976590+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:50:44.319540+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"318ef0"},"request_uri":"http://localhost:8000/_wdt/318ef0","method":"GET"} []
[2020-04-21T18:50:44.417482+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:50:44.419653+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:50:44.419848+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:44.420013+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:44.421545+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:44.432828+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:50:44.441174+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:44.442679+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:44.442950+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:50:44.451833+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:50:44.456292+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:50:44.458596+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:50:44.460753+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:50:44.463079+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:50:44.465176+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:50:44.466130+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:50:44.466677+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:50:44.467458+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:50:44.468497+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:50:44.471779+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:51:00.054933+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:51:00.062460+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:51:00.402012+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f2e16e"},"request_uri":"http://localhost:8000/_wdt/f2e16e","method":"GET"} []
[2020-04-21T18:51:00.532326+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:51:00.533132+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:51:00.533186+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:00.533241+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:00.534063+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:00.542874+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:51:00.544716+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:00.544968+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:00.545011+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:00.548958+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:51:00.550643+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:51:00.551601+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:51:00.552620+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:51:00.553657+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:51:00.554619+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:51:00.555437+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:51:00.556223+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:51:00.556989+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:51:00.557834+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:51:00.559497+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:51:17.264073+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:51:17.268978+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:51:17.599453+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e3d360"},"request_uri":"http://localhost:8000/_wdt/e3d360","method":"GET"} []
[2020-04-21T18:51:17.678944+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:51:17.679608+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:51:17.679660+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:17.679698+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:17.680204+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:17.683987+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:51:17.688979+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:17.689387+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:17.689458+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:17.696174+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:51:17.698252+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:51:17.698986+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:51:17.699774+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:51:17.701953+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:51:17.703852+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:51:17.706122+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:51:17.708555+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:51:17.710492+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:51:17.712565+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:51:17.715312+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:51:20.797903+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:51:20.802214+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:51:20.802284+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:20.802334+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:20.803032+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:20.803985+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:51:20.806152+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:20.806463+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:20.806509+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:20.809842+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:51:20.811006+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:51:28.823790+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:51:28.824541+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:51:28.824595+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:28.824638+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:28.825125+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:28.827783+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:51:28.829522+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:28.829828+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:28.829873+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:28.833905+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:51:28.836542+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:51:28.837341+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:51:28.838205+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:51:28.838920+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:51:28.839627+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:51:28.840308+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:51:28.840988+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:51:28.841739+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:51:28.842491+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:51:28.843278+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:51:30.497129+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:51:30.497736+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:51:30.497781+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:30.497827+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:30.498372+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:30.500714+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:51:30.501967+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:30.502185+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:30.502223+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:51:30.505563+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:51:30.507164+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:51:30.507841+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:51:30.508389+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:51:30.508848+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:51:30.509298+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:51:30.509867+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:51:30.510457+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:51:30.511159+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:51:30.511960+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:51:30.512724+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:52:30.241020+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:52:30.244536+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:52:30.637563+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"48e3ce"},"request_uri":"http://localhost:8000/_wdt/48e3ce","method":"GET"} []
[2020-04-21T18:52:30.678858+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:52:30.679580+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:52:30.679627+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:52:30.679665+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:52:30.680159+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:52:30.683605+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:52:30.691237+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:52:30.692530+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:52:30.692774+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:52:30.710135+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:52:30.716896+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:52:30.718022+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:52:30.719362+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:52:30.721556+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:52:30.723222+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:52:30.724435+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:52:30.725341+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:52:30.726178+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:52:30.727124+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:52:30.728167+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:52:52.549996+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:52:52.555673+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:52:52.852572+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4ff57d"},"request_uri":"http://localhost:8000/_wdt/4ff57d","method":"GET"} []
[2020-04-21T18:52:52.908166+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:52:52.909085+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:52:52.909158+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:52:52.909218+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:52:52.909929+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:52:52.914740+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:52:52.916454+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:52:52.916705+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:52:52.916741+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:52:52.921006+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:52:52.925565+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:52:52.926519+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:52:52.927083+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:52:52.927529+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:52:52.927873+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:52:52.928331+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:52:52.929814+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:52:52.932043+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:52:52.934655+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:52:52.938916+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:52:55.704113+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:52:55.708456+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:52:56.044714+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"17ccd4"},"request_uri":"http://localhost:8000/_wdt/17ccd4","method":"GET"} []
[2020-04-21T18:52:56.079502+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:52:56.082245+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:52:56.082437+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:52:56.082602+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:52:56.083750+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:52:56.087124+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:52:56.091625+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:52:56.092000+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:52:56.092070+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:52:56.106754+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:52:56.113198+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:52:56.115113+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:52:56.115941+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:52:56.116575+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:52:56.117083+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:52:56.117521+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:52:56.117931+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:52:56.118327+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:52:56.118810+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:52:56.119548+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:53:01.194939+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:53:01.200961+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:53:01.540195+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cff0ae"},"request_uri":"http://localhost:8000/_wdt/cff0ae","method":"GET"} []
[2020-04-21T18:53:01.616874+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:53:01.618053+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:53:01.618125+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:53:01.618184+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:53:01.618880+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:53:01.622495+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:53:01.624465+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:53:01.624936+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:53:01.625020+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:53:01.635429+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:53:01.642465+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:53:01.645181+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:53:01.647015+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:53:01.648392+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:53:01.650903+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:53:01.653825+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:53:01.657032+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:53:01.659344+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:53:01.662522+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:53:01.664661+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:53:08.996744+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:53:09.000286+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:53:09.286836+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c23ed9"},"request_uri":"http://localhost:8000/_wdt/c23ed9","method":"GET"} []
[2020-04-21T18:53:09.354033+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:53:09.357208+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:53:09.357459+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:53:09.357643+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:53:09.359245+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:53:09.368083+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:53:09.369504+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:53:09.369706+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:53:09.369747+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:53:09.373194+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:53:09.376593+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:53:09.379062+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:53:09.382455+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:53:09.386332+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:53:09.390134+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:53:09.392751+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:53:09.395662+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:53:09.397160+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:53:09.397691+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:53:09.399138+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:54:30.081503+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:54:30.082427+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:54:30.082506+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:54:30.082560+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:54:30.083168+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:54:30.086896+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:54:30.089003+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:54:30.089422+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:54:30.089492+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:54:30.094001+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:54:30.096165+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:54:30.096848+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:54:30.097320+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:54:30.097702+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:54:30.098019+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:54:30.098340+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:54:30.098620+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:54:30.098910+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:54:30.099197+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:54:30.099673+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:54:40.662137+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T18:54:40.666154+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:54:40.666255+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:54:40.666310+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:54:40.666929+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:54:40.667790+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:54:40.669619+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:54:40.669949+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:54:40.670001+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:54:40.673479+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T18:54:40.674639+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T18:54:46.064818+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:54:46.065686+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:54:46.065765+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:54:46.065805+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:54:46.066101+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:54:46.068631+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-21T18:54:46.069078+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-21T18:55:12.498656+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T18:55:12.505565+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:55:12.698148+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-21T18:55:12.747239+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:55:12.747964+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:55:12.748021+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:12.748071+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:12.748777+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:12.751999+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:55:12.753410+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:12.753675+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:12.753725+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:12.757528+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:55:12.759000+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:55:12.759852+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:55:12.760579+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:55:12.761539+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:55:12.762477+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:55:12.763198+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:55:12.763883+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:55:12.764769+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:55:12.765488+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:55:12.766290+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:55:14.726250+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:55:14.727117+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:55:14.727175+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:14.727220+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:14.727720+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:14.730407+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:55:14.732072+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:14.732336+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:14.732380+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:14.735647+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:55:14.737007+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:55:14.737664+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:55:14.738204+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:55:14.738740+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:55:14.739227+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:55:14.739790+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:55:14.740343+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:55:14.740991+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:55:14.741439+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:55:14.742203+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:55:16.254207+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:55:16.254887+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:55:16.254937+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:16.254974+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:16.255440+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:16.258392+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:55:16.260916+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:16.261422+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:16.261515+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:16.265963+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:55:16.267818+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:55:16.268821+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:55:16.269370+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:55:16.269905+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:55:16.270508+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:55:16.271033+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:55:16.271520+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:55:16.271974+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:55:16.272468+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:55:16.273090+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:55:16.953709+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:55:16.954260+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:55:16.954309+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:16.954353+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:16.954817+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:16.957308+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:55:16.958540+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:16.958724+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:16.958760+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:55:16.963301+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:55:16.965112+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:55:16.965858+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:55:16.966459+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:55:16.967038+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:55:16.967637+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:55:16.968315+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:55:16.968835+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:55:16.969314+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:55:16.969817+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:55:16.970588+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:56:12.972584+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:56:13.025985+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:56:13.421618+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"577a66"},"request_uri":"http://localhost:8000/_wdt/577a66","method":"GET"} []
[2020-04-21T18:56:13.644403+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:56:13.651312+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:56:13.651405+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:13.651463+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:13.655441+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:13.696409+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:56:13.729131+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:13.730097+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:13.730226+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:13.791807+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:56:13.798256+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:56:13.799180+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:56:13.799946+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:56:13.800594+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:56:13.801420+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:56:13.802096+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:56:13.802634+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:56:13.803166+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:56:13.803833+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:56:13.806774+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:56:18.238037+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:56:18.244989+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:56:18.679473+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2ee794"},"request_uri":"http://localhost:8000/_wdt/2ee794","method":"GET"} []
[2020-04-21T18:56:18.811719+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:56:18.813730+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:56:18.813883+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:18.813976+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:18.815146+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:18.823659+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:56:18.831158+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:18.832144+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:18.832399+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:18.845143+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:56:18.852531+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:56:18.855338+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:56:18.858480+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:56:18.861069+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:56:18.863599+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:56:18.865878+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:56:18.868895+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:56:18.871064+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:56:18.873016+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:56:18.877014+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:56:30.616559+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:56:30.619975+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:56:30.980351+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1cea78"},"request_uri":"http://localhost:8000/_wdt/1cea78","method":"GET"} []
[2020-04-21T18:56:31.021229+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:56:31.023553+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:56:31.023779+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:31.023928+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:31.025521+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:31.029010+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:56:31.031033+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:31.031356+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:31.031407+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:31.037434+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:56:31.041308+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:56:31.043892+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:56:31.047501+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:56:31.050737+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:56:31.054237+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:56:31.057663+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:56:31.060657+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:56:31.063567+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:56:31.065984+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:56:31.067035+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:56:37.117998+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:56:37.122801+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:56:37.490267+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"133f21"},"request_uri":"http://localhost:8000/_wdt/133f21","method":"GET"} []
[2020-04-21T18:56:37.531299+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:56:37.532916+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:56:37.533036+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:37.533115+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:37.533993+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:37.539333+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:56:37.541606+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:37.541999+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:37.542061+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:37.554342+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:56:37.564251+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:56:37.567653+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:56:37.570832+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:56:37.574697+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:56:37.577630+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:56:37.581231+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:56:37.583682+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:56:37.588042+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:56:37.591285+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:56:37.592891+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:56:51.410244+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:56:51.414136+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:56:51.845736+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d9941b"},"request_uri":"http://localhost:8000/_wdt/d9941b","method":"GET"} []
[2020-04-21T18:56:51.882764+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:56:51.883600+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:56:51.883661+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:51.883716+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:51.884430+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:51.889882+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:56:51.895262+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:51.896837+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:51.897125+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:51.916318+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:56:51.919777+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:56:51.921024+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:56:51.922240+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:56:51.924317+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:56:51.926239+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:56:51.927992+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:56:51.930700+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:56:51.933784+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:56:51.937274+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:56:51.940249+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:56:58.262846+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:56:58.266816+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:56:58.587629+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a4d134"},"request_uri":"http://localhost:8000/_wdt/a4d134","method":"GET"} []
[2020-04-21T18:56:58.613838+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:56:58.614737+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:56:58.614806+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:58.614868+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:58.615592+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:58.620306+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:56:58.627059+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:58.628716+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:58.628999+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:56:58.643497+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:56:58.649630+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:56:58.650521+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:56:58.651107+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:56:58.652102+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:56:58.653060+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:56:58.653665+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:56:58.654688+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:56:58.657822+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:56:58.660850+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:56:58.664662+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:58:26.764017+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:58:26.768099+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:58:27.100716+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7dae7a"},"request_uri":"http://localhost:8000/_wdt/7dae7a","method":"GET"} []
[2020-04-21T18:58:27.129307+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:58:27.129965+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:58:27.130012+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:58:27.130051+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:58:27.130609+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:58:27.134147+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:58:27.136329+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:58:27.136584+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:58:27.136645+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:58:27.146266+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:58:27.150256+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:58:27.151186+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:58:27.151903+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:58:27.152621+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:58:27.153712+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:58:27.154818+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:58:27.156481+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:58:27.158499+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:58:27.160312+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:58:27.165088+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:59:18.087509+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:59:18.093298+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:59:18.456250+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"117b6e"},"request_uri":"http://localhost:8000/_wdt/117b6e","method":"GET"} []
[2020-04-21T18:59:18.490843+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:59:18.494995+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:59:18.495246+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:59:18.495496+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:59:18.497165+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:59:18.506476+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:59:18.508416+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:59:18.508789+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:59:18.508850+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:59:18.517709+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:59:18.521781+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:59:18.525122+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:59:18.529216+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:59:18.532797+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:59:18.535972+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:59:18.538317+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:59:18.541655+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:59:18.544909+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:59:18.547843+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:59:18.552287+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T18:59:52.279023+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T18:59:52.282820+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T18:59:52.663028+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"73db46"},"request_uri":"http://localhost:8000/_wdt/73db46","method":"GET"} []
[2020-04-21T18:59:52.690533+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T18:59:52.692612+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T18:59:52.692734+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:59:52.692830+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:59:52.693835+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:59:52.703105+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T18:59:52.707251+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:59:52.708026+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:59:52.708192+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T18:59:52.717775+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T18:59:52.722890+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T18:59:52.725178+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T18:59:52.727932+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T18:59:52.730844+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T18:59:52.732996+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T18:59:52.735450+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T18:59:52.737723+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T18:59:52.739546+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T18:59:52.741632+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T18:59:52.745876+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:00:24.647909+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:00:24.655979+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:00:25.066565+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e8f33b"},"request_uri":"http://localhost:8000/_wdt/e8f33b","method":"GET"} []
[2020-04-21T19:00:25.103523+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:00:25.104520+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:00:25.104609+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:00:25.104678+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:00:25.105470+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:00:25.111036+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:00:25.117069+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:00:25.118319+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:00:25.118648+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:00:25.139514+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:00:25.148536+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:00:25.150058+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:00:25.150701+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:00:25.151215+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:00:25.151696+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:00:25.152309+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:00:25.154217+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:00:25.155947+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:00:25.157497+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:00:25.161612+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:00:36.291327+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:00:36.297552+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:00:36.662412+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"640f3e"},"request_uri":"http://localhost:8000/_wdt/640f3e","method":"GET"} []
[2020-04-21T19:00:36.704863+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:00:36.710574+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:00:36.710864+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:00:36.711066+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:00:36.713764+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:00:36.723448+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:00:36.727348+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:00:36.727782+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:00:36.727851+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:00:36.734178+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:00:36.738185+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:00:36.740747+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:00:36.743138+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:00:36.746148+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:00:36.748565+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:00:36.750950+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:00:36.753868+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:00:36.757210+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:00:36.760146+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:00:36.764335+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:00:54.440769+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:00:54.451002+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:00:54.857346+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6d43d5"},"request_uri":"http://localhost:8000/_wdt/6d43d5","method":"GET"} []
[2020-04-21T19:00:54.897843+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:00:54.900604+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:00:54.900771+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:00:54.900846+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:00:54.901580+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:00:54.905038+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:00:54.907350+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:00:54.907679+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:00:54.907739+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:00:54.913566+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:00:54.923035+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:00:54.927322+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:00:54.930862+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:00:54.933748+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:00:54.936220+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:00:54.937973+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:00:54.941259+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:00:54.943898+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:00:54.946737+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:00:54.951985+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:01:04.021961+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:01:04.028706+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:01:04.398914+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fa6c44"},"request_uri":"http://localhost:8000/_wdt/fa6c44","method":"GET"} []
[2020-04-21T19:01:04.449834+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:01:04.450682+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:01:04.450772+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:01:04.450826+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:01:04.451716+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:01:04.457099+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:01:04.458890+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:01:04.459232+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:01:04.459293+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:01:04.463744+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:01:04.466475+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:01:04.467769+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:01:04.468938+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:01:04.470487+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:01:04.472332+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:01:04.473798+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:01:04.476198+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:01:04.478326+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:01:04.479870+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:01:04.482550+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:01:20.337365+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:01:20.340911+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:01:20.698099+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bcf0fc"},"request_uri":"http://localhost:8000/_wdt/bcf0fc","method":"GET"} []
[2020-04-21T19:01:20.737646+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:01:20.738665+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:01:20.738736+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:01:20.738793+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:01:20.739541+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:01:20.744242+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:01:20.747898+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:01:20.750004+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:01:20.750353+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:01:20.773231+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:01:20.782172+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:01:20.785342+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:01:20.787848+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:01:20.790405+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:01:20.792907+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:01:20.795198+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:01:20.796732+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:01:20.799803+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:01:20.802131+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:01:20.806384+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:02:10.792943+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:02:10.800201+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:02:11.174365+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"05f8c4"},"request_uri":"http://localhost:8000/_wdt/05f8c4","method":"GET"} []
[2020-04-21T19:02:11.208255+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:02:11.209175+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:02:11.209237+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:11.209282+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:11.209796+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:11.213766+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:02:11.218388+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:11.219418+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:11.219620+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:11.230611+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:02:11.233537+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:02:11.235020+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:02:11.236543+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:02:11.237710+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:02:11.238822+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:02:11.241032+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:02:11.242185+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:02:11.243062+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:02:11.244213+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:02:11.246380+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:02:40.220956+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:02:40.225015+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:02:40.592184+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f7b93f"},"request_uri":"http://localhost:8000/_wdt/f7b93f","method":"GET"} []
[2020-04-21T19:02:40.628738+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:02:40.630569+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:02:40.630685+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:40.630781+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:40.632116+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:40.640715+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:02:40.643458+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:40.643845+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:40.643909+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:40.650162+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:02:40.656950+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:02:40.659318+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:02:40.661893+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:02:40.664042+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:02:40.666064+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:02:40.668041+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:02:40.671972+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:02:40.675504+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:02:40.677543+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:02:40.678800+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:02:53.323677+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:02:53.330684+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:02:53.712056+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"af9c21"},"request_uri":"http://localhost:8000/_wdt/af9c21","method":"GET"} []
[2020-04-21T19:02:53.749839+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:02:53.750804+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:02:53.750862+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:53.750902+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:53.751435+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:53.755839+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:02:53.757658+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:53.757927+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:53.757965+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:53.762229+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:02:53.764940+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:02:53.765860+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:02:53.766690+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:02:53.769198+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:02:53.771401+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:02:53.773621+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:02:53.775539+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:02:53.777084+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:02:53.778478+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:02:53.780005+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:02:59.268490+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:02:59.272430+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:02:59.586372+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"65df03"},"request_uri":"http://localhost:8000/_wdt/65df03","method":"GET"} []
[2020-04-21T19:02:59.625878+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:02:59.627913+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:02:59.628068+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:59.628192+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:59.629425+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:59.632547+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:02:59.634112+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:59.634363+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:59.634397+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:02:59.639386+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:02:59.642023+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:02:59.642732+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:02:59.643289+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:02:59.644313+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:02:59.645608+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:02:59.647577+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:02:59.649674+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:02:59.650625+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:02:59.651563+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:02:59.653851+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:03:05.288846+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:03:05.295096+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:03:05.699832+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"66196b"},"request_uri":"http://localhost:8000/_wdt/66196b","method":"GET"} []
[2020-04-21T19:03:05.730955+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:03:05.732493+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:03:05.732634+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:03:05.732747+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:03:05.733794+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:03:05.741943+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:03:05.746760+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:03:05.747712+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:03:05.747896+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:03:05.757899+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:03:05.760793+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:03:05.763725+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:03:05.766734+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:03:05.769941+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:03:05.773202+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:03:05.775825+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:03:05.778384+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:03:05.780718+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:03:05.783080+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:03:05.787412+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:03:16.030097+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:03:16.034951+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:03:16.400283+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"647289"},"request_uri":"http://localhost:8000/_wdt/647289","method":"GET"} []
[2020-04-21T19:03:16.453870+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:03:16.454959+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:03:16.455054+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:03:16.455136+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:03:16.455954+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:03:16.461456+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:03:16.464261+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:03:16.464634+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:03:16.464703+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:03:16.475516+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:03:16.482367+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:03:16.486457+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:03:16.489229+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:03:16.492442+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:03:16.493409+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:03:16.494810+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:03:16.495688+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:03:16.496452+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:03:16.497155+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:03:16.498406+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:03:52.618433+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:03:52.623217+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:03:53.012737+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"914dbe"},"request_uri":"http://localhost:8000/_wdt/914dbe","method":"GET"} []
[2020-04-21T19:03:53.045583+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:03:53.048080+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:03:53.048279+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:03:53.048438+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:03:53.050549+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:03:53.062931+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:03:53.070172+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:03:53.070614+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:03:53.070685+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:03:53.076078+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:03:53.079361+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:03:53.081427+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:03:53.082367+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:03:53.083391+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:03:53.084816+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:03:53.087115+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:03:53.089789+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:03:53.092317+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:03:53.094527+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:03:53.098203+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:05:16.485720+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:05:16.492162+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:05:16.867162+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"03b003"},"request_uri":"http://localhost:8000/_wdt/03b003","method":"GET"} []
[2020-04-21T19:05:16.902088+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:05:16.906647+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:05:16.906921+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:05:16.907186+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:05:16.908839+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:05:16.914330+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:05:16.916851+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:05:16.917307+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:05:16.917399+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:05:16.934932+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:05:16.942535+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:05:16.945552+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:05:16.948061+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:05:16.951150+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:05:16.954320+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:05:16.956447+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:05:16.957464+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:05:16.958591+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:05:16.961055+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:05:16.965416+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:05:49.539439+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:05:49.546206+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:05:49.905867+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8a635d"},"request_uri":"http://localhost:8000/_wdt/8a635d","method":"GET"} []
[2020-04-21T19:05:49.934305+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:05:49.937510+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:05:49.937707+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:05:49.937805+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:05:49.939843+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:05:49.949587+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:05:49.952188+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:05:49.952624+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:05:49.952709+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:05:49.969120+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:05:49.978992+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:05:49.982906+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:05:49.984276+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:05:49.985532+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:05:49.986649+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:05:49.987834+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:05:49.989007+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:05:49.990308+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:05:49.992616+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:05:49.994714+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:06:05.711014+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:06:05.725107+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:06:06.136715+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"98a851"},"request_uri":"http://localhost:8000/_wdt/98a851","method":"GET"} []
[2020-04-21T19:06:06.174633+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:06:06.175680+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:06:06.175761+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:06:06.175806+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:06:06.176433+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:06:06.180364+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:06:06.183410+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:06:06.183760+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:06:06.183812+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:06:06.189174+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:06:06.192052+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:06:06.193144+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:06:06.194123+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:06:06.195594+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:06:06.198732+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:06:06.201567+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:06:06.203688+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:06:06.206574+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:06:06.208824+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:06:06.212726+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:06:27.164233+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:06:27.167875+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:06:27.535359+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e3f2f0"},"request_uri":"http://localhost:8000/_wdt/e3f2f0","method":"GET"} []
[2020-04-21T19:06:27.564032+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:06:27.565686+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:06:27.565840+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:06:27.565983+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:06:27.567640+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:06:27.577580+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:06:27.582760+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:06:27.583125+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:06:27.583197+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:06:27.598012+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:06:27.605408+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:06:27.607315+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:06:27.608050+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:06:27.608722+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:06:27.609627+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:06:27.610450+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:06:27.611582+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:06:27.612544+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:06:27.613348+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:06:27.615136+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:06:56.485204+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:06:56.494795+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:06:56.924918+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a39634"},"request_uri":"http://localhost:8000/_wdt/a39634","method":"GET"} []
[2020-04-21T19:06:56.960162+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:06:56.961138+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:06:56.961213+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:06:56.961274+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:06:56.961982+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:06:56.966470+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:06:56.969725+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:06:56.970591+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:06:56.970746+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:06:56.978422+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:06:56.980620+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:06:56.981897+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:06:56.982810+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:06:56.984335+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:06:56.987271+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:06:56.991061+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:06:56.994741+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:06:56.998595+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:06:57.001998+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:06:57.006009+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:07:16.333322+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:07:16.340529+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:07:16.711501+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a22228"},"request_uri":"http://localhost:8000/_wdt/a22228","method":"GET"} []
[2020-04-21T19:07:16.749323+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:07:16.750189+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:07:16.750257+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:07:16.750318+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:07:16.751099+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:07:16.755576+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:07:16.758257+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:07:16.758656+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:07:16.758715+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:07:16.767264+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:07:16.777409+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:07:16.781263+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:07:16.783731+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:07:16.786633+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:07:16.789327+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:07:16.791131+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:07:16.792043+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:07:16.793114+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:07:16.794123+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:07:16.795215+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:07:50.294950+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:07:50.299729+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:07:50.681706+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"07d3d4"},"request_uri":"http://localhost:8000/_wdt/07d3d4","method":"GET"} []
[2020-04-21T19:07:50.720701+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:07:50.722784+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:07:50.722934+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:07:50.723043+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:07:50.724074+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:07:50.729881+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:07:50.733377+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:07:50.733782+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:07:50.733849+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:07:50.746836+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:07:50.749474+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:07:50.750355+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:07:50.751000+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:07:50.751568+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:07:50.752186+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:07:50.753511+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:07:50.756007+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:07:50.758433+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:07:50.761565+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:07:50.764984+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:08:05.967382+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:08:05.972357+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:08:06.357486+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"32c3b6"},"request_uri":"http://localhost:8000/_wdt/32c3b6","method":"GET"} []
[2020-04-21T19:08:06.392852+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:08:06.396494+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:08:06.396741+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:08:06.396954+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:08:06.399007+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:08:06.409296+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:08:06.411528+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:08:06.411957+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:08:06.412032+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:08:06.416636+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:08:06.419685+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:08:06.421184+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:08:06.422430+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:08:06.424656+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:08:06.426599+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:08:06.428354+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:08:06.429885+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:08:06.431389+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:08:06.433079+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:08:06.435228+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:08:20.641214+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:08:20.646226+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:08:21.086116+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"29df24"},"request_uri":"http://localhost:8000/_wdt/29df24","method":"GET"} []
[2020-04-21T19:08:21.114302+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:08:21.117280+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:08:21.117574+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:08:21.117724+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:08:21.120644+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:08:21.135023+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:08:21.139117+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:08:21.139531+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:08:21.139597+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:08:21.146825+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:08:21.149344+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:08:21.150545+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:08:21.151525+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:08:21.152982+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:08:21.154847+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:08:21.158338+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:08:21.162551+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:08:21.165231+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:08:21.168251+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:08:21.171594+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:08:40.791455+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:08:40.795920+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:08:41.158544+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1d1fd3"},"request_uri":"http://localhost:8000/_wdt/1d1fd3","method":"GET"} []
[2020-04-21T19:08:41.199428+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:08:41.201868+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:08:41.202050+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:08:41.202171+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:08:41.203102+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:08:41.207997+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:08:41.210641+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:08:41.211025+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:08:41.211097+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:08:41.217875+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:08:41.221841+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:08:41.224990+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:08:41.226959+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:08:41.228932+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:08:41.232351+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:08:41.235416+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:08:41.238116+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:08:41.241575+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:08:41.244464+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:08:41.250043+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:09:09.138598+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:09:09.142321+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:09:09.460507+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"caa915"},"request_uri":"http://localhost:8000/_wdt/caa915","method":"GET"} []
[2020-04-21T19:09:09.526681+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:09:09.529804+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:09:09.530117+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:09:09.530376+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:09:09.532680+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:09:09.539860+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:09:09.542554+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:09:09.542931+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:09:09.542975+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:09:09.547770+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:09:09.549986+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:09:09.551365+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:09:09.553290+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:09:09.555438+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:09:09.557457+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:09:09.559822+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:09:09.562424+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:09:09.565415+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:09:09.568973+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:09:09.574662+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:09:18.840811+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:09:18.843959+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:09:19.201653+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c80c57"},"request_uri":"http://localhost:8000/_wdt/c80c57","method":"GET"} []
[2020-04-21T19:09:19.228450+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:09:19.229256+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:09:19.229316+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:09:19.229356+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:09:19.229914+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:09:19.234716+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:09:19.240184+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:09:19.240810+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:09:19.240887+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:09:19.250989+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:09:19.255601+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:09:19.257669+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:09:19.259483+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:09:19.260262+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:09:19.260908+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:09:19.261954+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:09:19.264403+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:09:19.267448+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:09:19.270770+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:09:19.274720+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:10:09.674137+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:10:09.681409+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:10:10.043325+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c6d0eb"},"request_uri":"http://localhost:8000/_wdt/c6d0eb","method":"GET"} []
[2020-04-21T19:10:10.089187+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:10:10.091868+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:10:10.092161+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:10.092391+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:10.094696+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:10.103465+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:10:10.109502+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:10.110885+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:10.111150+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:10.122782+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:10:10.125552+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:10:10.126432+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:10:10.127504+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:10:10.128819+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:10:10.129619+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:10:10.130486+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:10:10.131274+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:10:10.132205+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:10:10.133175+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:10:10.134348+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:10:27.581557+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:10:27.587118+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:10:27.902701+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7a10e1"},"request_uri":"http://localhost:8000/_wdt/7a10e1","method":"GET"} []
[2020-04-21T19:10:27.963158+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:10:27.964176+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:10:27.964251+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:27.964310+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:27.965045+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:27.969224+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:10:27.972921+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:27.973700+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:27.973871+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:27.991329+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:10:27.996818+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:10:27.997582+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:10:27.998118+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:10:27.998709+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:10:27.999189+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:10:27.999823+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:10:28.001511+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:10:28.004075+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:10:28.006680+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:10:28.010552+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:10:32.834929+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:10:32.838474+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:10:33.274036+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c5cbd2"},"request_uri":"http://localhost:8000/_wdt/c5cbd2","method":"GET"} []
[2020-04-21T19:10:33.329441+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:10:33.333152+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:10:33.333903+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:33.335181+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:33.337983+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:33.345311+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:10:33.351235+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:33.351871+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:33.352022+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:33.359326+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:10:33.363579+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:10:33.364609+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:10:33.365442+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:10:33.366565+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:10:33.367795+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:10:33.369673+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:10:33.372078+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:10:33.375204+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:10:33.377261+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:10:33.380395+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:10:55.818385+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:10:55.823500+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:10:56.204345+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"841fdd"},"request_uri":"http://localhost:8000/_wdt/841fdd","method":"GET"} []
[2020-04-21T19:10:56.241503+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:10:56.242503+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:10:56.242607+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:56.242691+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:56.243637+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:56.253803+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:10:56.263463+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:56.264518+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:56.264805+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:10:56.275645+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:10:56.278806+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:10:56.279859+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:10:56.280652+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:10:56.281738+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:10:56.284219+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:10:56.285994+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:10:56.287553+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:10:56.289235+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:10:56.291262+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:10:56.294355+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:11:06.404294+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:11:06.413631+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:11:06.771517+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"20f0b6"},"request_uri":"http://localhost:8000/_wdt/20f0b6","method":"GET"} []
[2020-04-21T19:11:06.806683+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:11:06.809196+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:11:06.809392+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:11:06.809552+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:11:06.811505+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:11:06.816962+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:11:06.819600+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:11:06.819870+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:11:06.819916+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:11:06.824243+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:11:06.826975+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:11:06.827871+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:11:06.828587+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:11:06.829333+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:11:06.829966+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:11:06.830759+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:11:06.833580+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:11:06.835945+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:11:06.837880+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:11:06.839837+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:13:17.412908+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:13:17.426954+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:13:18.003721+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"61871f"},"request_uri":"http://localhost:8000/_wdt/61871f","method":"GET"} []
[2020-04-21T19:13:18.407449+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:13:18.408342+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:13:18.408409+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:13:18.408465+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:13:18.409190+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:13:18.415310+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:13:18.418198+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:13:18.418430+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:13:18.418466+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:13:18.421991+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:13:18.423905+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:13:18.424946+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:13:18.425822+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:13:18.426638+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:13:18.427527+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:13:18.428429+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:13:18.429365+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:13:18.430389+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:13:18.431625+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:13:18.434639+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:13:39.411419+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:13:39.427434+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:13:39.997656+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e40280"},"request_uri":"http://localhost:8000/_wdt/e40280","method":"GET"} []
[2020-04-21T19:13:40.321230+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:13:40.322268+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:13:40.322340+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:13:40.322400+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:13:40.323255+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:13:40.328597+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:13:40.333397+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:13:40.333841+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:13:40.333902+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:13:40.343077+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:13:40.345263+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:13:40.346407+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:13:40.347164+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:13:40.347862+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:13:40.348531+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:13:40.349120+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:13:40.349605+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:13:40.350048+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:13:40.350498+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:13:40.351055+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:13:52.245147+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:13:52.251941+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:13:52.662077+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"390bf1"},"request_uri":"http://localhost:8000/_wdt/390bf1","method":"GET"} []
[2020-04-21T19:13:52.696348+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:13:52.697091+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:13:52.697168+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:13:52.697211+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:13:52.697728+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:13:52.700981+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:13:52.703309+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:13:52.703579+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:13:52.703621+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:13:52.707603+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:13:52.710238+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:13:52.711973+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:13:52.713791+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:13:52.715455+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:13:52.716812+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:13:52.718630+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:13:52.720339+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:13:52.721671+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:13:52.723082+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:13:52.725750+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:14:15.754297+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:14:15.759678+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:14:16.183084+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"23a162"},"request_uri":"http://localhost:8000/_wdt/23a162","method":"GET"} []
[2020-04-21T19:14:16.232834+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:14:16.234128+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:14:16.234241+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:16.234333+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:16.235286+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:16.239697+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:14:16.244387+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:16.245584+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:16.245769+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:16.257656+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:14:16.264060+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:14:16.266133+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:14:16.267759+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:14:16.268730+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:14:16.269447+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:14:16.270094+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:14:16.270901+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:14:16.271809+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:14:16.272735+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:14:16.273788+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:14:24.395615+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:14:24.400416+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:14:24.818408+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"efbfe1"},"request_uri":"http://localhost:8000/_wdt/efbfe1","method":"GET"} []
[2020-04-21T19:14:24.851874+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:14:24.853091+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:14:24.853165+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:24.853217+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:24.854383+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:24.870649+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:14:24.877674+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:24.878131+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:24.878214+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:24.885255+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:14:24.888547+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:14:24.889450+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:14:24.890182+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:14:24.890979+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:14:24.892154+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:14:24.895047+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:14:24.897525+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:14:24.899490+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:14:24.901175+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:14:24.902597+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:14:30.283342+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:14:30.287070+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:14:30.734187+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a38092"},"request_uri":"http://localhost:8000/_wdt/a38092","method":"GET"} []
[2020-04-21T19:14:30.781329+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:14:30.782168+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:14:30.782249+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:30.782296+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:30.782846+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:30.786250+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:14:30.789478+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:30.790326+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:30.790507+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:30.806505+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:14:30.811018+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:14:30.816919+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:14:30.818767+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:14:30.820190+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:14:30.820803+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:14:30.821361+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:14:30.822247+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:14:30.823919+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:14:30.826270+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:14:30.831366+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:14:46.380985+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:14:46.388373+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:14:47.038020+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"222c17"},"request_uri":"http://localhost:8000/_wdt/222c17","method":"GET"} []
[2020-04-21T19:14:47.417718+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:14:47.418810+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:14:47.418867+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:47.418907+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:47.419363+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:47.427783+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:14:47.435011+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:47.435983+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:47.436187+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:14:47.449083+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:14:47.453051+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:14:47.455506+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:14:47.457727+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:14:47.460254+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:14:47.464147+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:14:47.466454+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:14:47.468008+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:14:47.470311+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:14:47.472772+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:14:47.475155+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:15:18.379255+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:15:18.389076+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:15:18.954785+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b0704c"},"request_uri":"http://localhost:8000/_wdt/b0704c","method":"GET"} []
[2020-04-21T19:15:19.131150+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:15:19.131998+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:15:19.132053+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:15:19.132095+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:15:19.132736+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:15:19.137682+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:15:19.141805+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:15:19.142513+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:15:19.142648+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:15:19.154938+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:15:19.158408+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:15:19.159337+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:15:19.160036+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:15:19.160741+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:15:19.161316+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:15:19.161806+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:15:19.162235+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:15:19.162658+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:15:19.163072+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:15:19.163746+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:15:50.406450+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:15:50.422979+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:15:50.832903+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"37f619"},"request_uri":"http://localhost:8000/_wdt/37f619","method":"GET"} []
[2020-04-21T19:15:50.927761+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:15:50.929318+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:15:50.929509+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:15:50.929629+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:15:50.931225+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:15:50.937020+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:15:50.941470+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:15:50.942143+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:15:50.942246+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:15:50.947755+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:15:50.949459+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:15:50.950280+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:15:50.950814+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:15:50.951426+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:15:50.952393+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:15:50.953213+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:15:50.954194+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:15:50.955403+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:15:50.956481+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:15:50.957407+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:16:01.279109+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:16:01.282930+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:16:01.635542+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9e3a2e"},"request_uri":"http://localhost:8000/_wdt/9e3a2e","method":"GET"} []
[2020-04-21T19:16:01.673445+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:16:01.674509+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:16:01.674608+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:01.674672+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:01.675276+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:01.678980+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:16:01.680762+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:01.681103+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:01.681161+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:01.686014+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:16:01.688882+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:16:01.690023+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:16:01.691178+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:16:01.692788+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:16:01.695369+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:16:01.698230+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:16:01.701217+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:16:01.703179+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:16:01.705725+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:16:01.709534+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:16:12.228881+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:16:12.232865+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:16:12.648746+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3a215c"},"request_uri":"http://localhost:8000/_wdt/3a215c","method":"GET"} []
[2020-04-21T19:16:12.675753+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:16:12.678461+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:16:12.678618+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:12.678841+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:12.680962+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:12.691372+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:16:12.695824+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:12.696317+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:12.696415+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:12.703551+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:16:12.706184+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:16:12.707007+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:16:12.707570+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:16:12.708321+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:16:12.709823+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:16:12.712377+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:16:12.715142+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:16:12.717399+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:16:12.719830+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:16:12.724036+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:16:21.292504+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:16:21.296527+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:16:21.645672+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"098e37"},"request_uri":"http://localhost:8000/_wdt/098e37","method":"GET"} []
[2020-04-21T19:16:21.691557+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:16:21.692502+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:16:21.692599+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:21.692664+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:21.693344+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:21.697268+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:16:21.699429+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:21.699796+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:21.699867+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:21.705791+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:16:21.710380+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:16:21.712761+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:16:21.715052+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:16:21.716306+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:16:21.717569+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:16:21.719031+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:16:21.720312+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:16:21.721286+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:16:21.722133+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:16:21.723465+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:16:29.414443+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:16:29.421822+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:16:29.794388+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5fe4e5"},"request_uri":"http://localhost:8000/_wdt/5fe4e5","method":"GET"} []
[2020-04-21T19:16:29.823344+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:16:29.825477+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:16:29.825697+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:29.825832+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:29.827027+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:29.837101+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:16:29.842378+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:29.843104+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:29.843253+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:29.850542+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:16:29.862380+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:16:29.866710+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:16:29.869916+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:16:29.872991+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:16:29.875896+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:16:29.879393+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:16:29.883112+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:16:29.886376+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:16:29.888789+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:16:29.891837+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:16:33.850641+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:16:33.859821+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:16:34.241839+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"964222"},"request_uri":"http://localhost:8000/_wdt/964222","method":"GET"} []
[2020-04-21T19:16:34.279096+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:16:34.282625+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:16:34.282957+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:34.283282+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:34.286054+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:34.291834+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:16:34.295424+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:34.295756+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:34.295813+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:34.304830+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:16:34.315532+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:16:34.318742+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:16:34.321373+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:16:34.323848+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:16:34.327312+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:16:34.330383+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:16:34.333375+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:16:34.336012+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:16:34.337201+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:16:34.340565+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:16:44.541983+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:16:44.546096+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:16:44.899554+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a51d69"},"request_uri":"http://localhost:8000/_wdt/a51d69","method":"GET"} []
[2020-04-21T19:16:44.923692+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:16:44.925350+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:16:44.925482+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:44.925562+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:44.926600+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:44.935435+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:16:44.941495+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:44.942856+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:44.943087+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:16:44.950009+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:16:44.952580+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:16:44.953911+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:16:44.955757+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:16:44.957538+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:16:44.959286+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:16:44.961256+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:16:44.963523+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:16:44.965506+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:16:44.967907+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:16:44.969796+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:17:04.293556+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:17:04.299331+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:17:04.679887+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"edc6d9"},"request_uri":"http://localhost:8000/_wdt/edc6d9","method":"GET"} []
[2020-04-21T19:17:04.716988+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:17:04.719798+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:17:04.719984+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:04.720109+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:04.721229+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:04.727103+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:17:04.730751+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:04.731173+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:04.731254+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:04.741069+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:17:04.745572+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:17:04.746489+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:17:04.747259+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:17:04.747982+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:17:04.748763+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:17:04.749520+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:17:04.750118+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:17:04.750785+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:17:04.751753+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:17:04.752783+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:17:10.837379+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:17:10.846225+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:17:11.210685+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3ae1dd"},"request_uri":"http://localhost:8000/_wdt/3ae1dd","method":"GET"} []
[2020-04-21T19:17:11.249531+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:17:11.252366+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:17:11.252548+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:11.252625+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:11.253281+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:11.257425+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:17:11.259930+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:11.260287+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:11.260349+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:11.266492+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:17:11.275703+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:17:11.279183+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:17:11.283190+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:17:11.286145+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:17:11.288399+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:17:11.290716+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:17:11.292683+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:17:11.294543+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:17:11.296658+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:17:11.297963+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:17:21.091581+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:17:21.096803+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:17:21.460710+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"52dd1b"},"request_uri":"http://localhost:8000/_wdt/52dd1b","method":"GET"} []
[2020-04-21T19:17:21.502161+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:17:21.503591+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:17:21.503666+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:21.503727+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:21.504642+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:21.510448+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:17:21.513094+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:21.513457+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:21.513518+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:21.520412+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:17:21.526396+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:17:21.528845+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:17:21.531145+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:17:21.534245+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:17:21.536707+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:17:21.538483+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:17:21.541649+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:17:21.544363+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:17:21.548073+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:17:21.552396+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:17:29.349979+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:17:29.355639+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:17:29.849877+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5615f3"},"request_uri":"http://localhost:8000/_wdt/5615f3","method":"GET"} []
[2020-04-21T19:17:29.911355+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:17:29.911997+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:17:29.912064+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:29.912110+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:29.913010+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:29.922260+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:17:29.928721+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:29.929684+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:29.929877+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:29.948075+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:17:29.950986+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:17:29.952272+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:17:29.955029+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:17:29.957466+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:17:29.959135+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:17:29.960987+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:17:29.963069+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:17:29.965099+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:17:29.966882+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:17:29.969041+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:17:37.172386+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:17:37.176029+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:17:37.546088+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ec3973"},"request_uri":"http://localhost:8000/_wdt/ec3973","method":"GET"} []
[2020-04-21T19:17:37.583305+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:17:37.587071+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:17:37.587471+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:37.587782+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:37.590618+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:37.603511+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:17:37.605609+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:37.605982+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:37.606037+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:17:37.612146+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:17:37.614885+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:17:37.615810+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:17:37.616441+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:17:37.617010+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:17:37.617559+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:17:37.618282+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:17:37.618887+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:17:37.621196+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:17:37.623353+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:17:37.624890+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:18:29.726424+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:18:29.731242+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:18:30.130753+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"281f86"},"request_uri":"http://localhost:8000/_wdt/281f86","method":"GET"} []
[2020-04-21T19:18:30.233392+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:18:30.234932+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:18:30.235035+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:30.235108+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:30.235995+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:30.241632+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:18:30.243521+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:30.243756+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:30.243796+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:30.248281+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:18:30.250221+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:18:30.251189+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:18:30.252013+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:18:30.252697+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:18:30.253368+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:18:30.254315+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:18:30.255248+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:18:30.256303+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:18:30.257298+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:18:30.259898+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:18:35.824343+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:18:35.830065+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:18:36.216732+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5f1803"},"request_uri":"http://localhost:8000/_wdt/5f1803","method":"GET"} []
[2020-04-21T19:18:36.246336+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:18:36.247936+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:18:36.248072+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:36.248265+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:36.249673+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:36.258548+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:18:36.263296+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:36.264583+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:36.264871+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:36.275113+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:18:36.277366+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:18:36.278402+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:18:36.279371+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:18:36.280331+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:18:36.281095+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:18:36.281518+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:18:36.281843+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:18:36.282243+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:18:36.282987+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:18:36.285826+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:18:45.634581+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:18:45.640034+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:18:46.026582+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"325189"},"request_uri":"http://localhost:8000/_wdt/325189","method":"GET"} []
[2020-04-21T19:18:46.052598+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:18:46.054411+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:18:46.054624+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:46.054820+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:46.057247+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:46.066626+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:18:46.071365+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:46.072392+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:46.072520+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:46.080180+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:18:46.083176+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:18:46.084171+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:18:46.085639+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:18:46.087179+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:18:46.090134+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:18:46.092794+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:18:46.095508+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:18:46.097190+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:18:46.100665+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:18:46.104875+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:18:48.609223+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:18:48.616074+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:18:49.003997+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5a7957"},"request_uri":"http://localhost:8000/_wdt/5a7957","method":"GET"} []
[2020-04-21T19:18:49.038857+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:18:49.041476+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:18:49.041653+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:49.041750+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:49.043178+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:49.049798+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:18:49.051312+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:49.051553+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:49.051632+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:49.058378+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:18:49.062867+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:18:49.065464+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:18:49.068243+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:18:49.070717+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:18:49.073035+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:18:49.076687+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:18:49.079747+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:18:49.082207+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:18:49.085100+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:18:49.087932+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:18:58.538678+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:18:58.544461+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:18:58.915303+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c72b88"},"request_uri":"http://localhost:8000/_wdt/c72b88","method":"GET"} []
[2020-04-21T19:18:58.948254+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:18:58.950354+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:18:58.950495+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:58.950610+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:58.951757+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:58.958114+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:18:58.961091+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:58.961487+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:58.961556+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:18:58.969851+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:18:58.972483+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:18:58.973306+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:18:58.974566+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:18:58.975711+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:18:58.976736+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:18:58.977734+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:18:58.979927+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:18:58.982700+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:18:58.985310+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:18:58.988102+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:19:03.145963+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T19:19:03.155315+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:19:03.155423+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:03.155493+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:03.156395+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:03.157781+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:19:03.159884+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:03.160200+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:03.160240+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:03.165026+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T19:19:03.166064+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T19:19:04.566132+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:19:04.567431+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:19:04.567609+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:04.567723+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:04.568693+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:04.572541+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:19:04.575070+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:04.575605+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:04.575707+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:04.583335+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:19:04.587029+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:19:04.588507+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:19:04.589567+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:19:04.590308+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:19:04.590936+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:19:04.591742+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:19:04.592389+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:19:04.593003+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:19:04.593746+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:19:04.594865+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:19:05.116710+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:19:05.117722+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:19:05.117798+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:05.117856+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:05.118457+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:05.122202+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:19:05.124287+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:05.124690+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:05.124762+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:05.128925+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:19:05.131745+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:19:05.132932+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:19:05.133898+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:19:05.134763+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:19:05.135808+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:19:05.136924+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:19:05.138375+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:19:05.139278+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:19:05.140932+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:19:05.142965+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:19:06.260804+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T19:19:06.267994+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:19:06.268221+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:06.268384+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:06.269698+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:06.271844+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:19:06.275844+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:06.276302+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:06.276376+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:06.280882+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T19:19:06.282312+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T19:19:07.791117+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:19:07.791731+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:19:07.791795+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:07.791839+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:07.792287+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:07.794720+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:19:07.796222+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:07.796479+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:07.796515+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:07.803456+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:19:07.806341+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:19:07.807486+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:19:07.808675+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:19:07.809709+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:19:07.810758+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:19:07.811919+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:19:07.813160+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:19:07.814308+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:19:07.815218+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:19:07.816540+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:19:24.420854+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:19:24.426080+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:19:24.837399+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1ae583"},"request_uri":"http://localhost:8000/_wdt/1ae583","method":"GET"} []
[2020-04-21T19:19:24.871127+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:19:24.872216+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:19:24.872324+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:24.872417+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:24.873275+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:24.880305+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:19:24.887268+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:24.887610+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:24.887675+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:24.894983+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:19:24.906430+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:19:24.911056+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:19:24.913657+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:19:24.916609+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:19:24.918376+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:19:24.919651+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:19:24.920304+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:19:24.920810+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:19:24.921334+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:19:24.922147+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:19:28.906194+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T19:19:28.909677+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:19:28.909739+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:28.909783+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:28.910470+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:28.912729+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:19:28.917373+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:28.918018+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:28.918111+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:28.923135+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T19:19:28.924785+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T19:19:30.061158+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:19:30.062078+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:19:30.062180+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:30.062259+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:30.063201+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:30.067156+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:19:30.069282+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:30.069588+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:30.069648+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:19:30.075152+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:19:30.078770+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:19:30.079948+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:19:30.080921+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:19:30.082020+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:19:30.082933+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:19:30.083751+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:19:30.084482+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:19:30.085136+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:19:30.085752+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:19:30.086565+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:33:00.601201+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:33:00.637667+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:33:01.124828+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"619a3a"},"request_uri":"http://localhost:8000/_wdt/619a3a","method":"GET"} []
[2020-04-21T19:33:01.205584+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:33:01.211411+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:33:01.211489+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:01.211546+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:01.215141+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:01.216774+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:02.781363+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:33:02.782019+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:33:02.782079+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:02.782128+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:02.782661+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:02.782955+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:07.960836+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T19:33:08.013791+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:33:08.193162+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-21T19:33:08.239332+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:33:08.240879+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:33:08.240960+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:08.241012+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:08.241837+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:08.246484+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:33:08.248946+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:08.249251+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:08.249310+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:08.278074+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:33:08.283576+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:33:08.284168+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:33:08.284567+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:33:08.284929+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:33:08.285301+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:33:08.285670+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:33:08.286054+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:33:08.286404+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:33:08.286712+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:33:08.288034+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:33:10.264078+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:33:10.264666+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:33:10.264706+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:10.264742+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:10.265152+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:10.267865+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:33:10.269657+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:10.269949+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:10.269989+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:33:10.273852+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:33:10.275440+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:33:10.276216+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:33:10.276876+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:33:10.277478+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:33:10.278136+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:33:10.278756+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:33:10.279336+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:33:10.279975+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:33:10.280688+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:33:10.281508+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:35:39.375233+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:35:39.379217+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:35:39.733434+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"785b06"},"request_uri":"http://localhost:8000/_wdt/785b06","method":"GET"} []
[2020-04-21T19:35:40.406020+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:35:40.408622+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:35:40.408825+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:35:40.408957+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:35:40.410475+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:35:40.421323+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:35:40.425921+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:35:40.426271+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:35:40.426329+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:35:40.431554+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:35:40.433556+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:35:40.434257+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:35:40.434974+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:35:40.435899+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:35:40.436774+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:35:40.437565+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:35:40.438724+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:35:40.439677+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:35:40.440611+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:35:40.441487+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:37:50.470302+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:37:50.471459+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:37:50.471517+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:37:50.471575+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:37:50.472383+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:37:50.476680+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:37:50.478782+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:37:50.479214+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:37:50.479287+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:37:50.484216+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:37:50.486379+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:37:50.487157+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:37:50.487808+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:37:50.488527+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:37:50.489154+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:37:50.489711+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:37:50.490252+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:37:50.490743+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:37:50.491221+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:37:50.491848+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:37:52.523831+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:37:52.524364+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:37:52.524405+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:37:52.524441+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:37:52.524838+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:37:52.527502+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:37:52.528779+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:37:52.528947+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:37:52.528976+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:37:52.532100+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:37:52.533616+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:37:52.534502+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:37:52.535192+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:37:52.535763+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:37:52.536377+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:37:52.536970+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:37:52.537564+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:37:52.538218+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:37:52.538788+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:37:52.539550+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:37:53.476097+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:37:53.477132+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:37:53.477213+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:37:53.477259+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:37:53.477858+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:37:53.480840+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:37:53.482471+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:37:53.482768+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:37:53.482813+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:37:53.486463+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:37:53.488373+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:37:53.489204+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:37:53.489705+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:37:53.490096+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:37:53.490467+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:37:53.490851+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:37:53.491178+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:37:53.491568+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:37:53.491886+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:37:53.492352+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:41:32.151837+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T19:41:32.157309+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T19:41:32.873368+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"186f92"},"request_uri":"http://localhost:8000/_wdt/186f92","method":"GET"} []
[2020-04-21T19:41:35.849135+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:41:35.849839+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:41:35.849883+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:41:35.849920+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:41:35.850426+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:41:35.854543+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:41:35.856901+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:41:35.857352+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:41:35.857421+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:41:35.862299+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:41:35.865102+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:41:35.866146+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:41:35.866922+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:41:35.867624+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:41:35.868385+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:41:35.869047+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:41:35.869985+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:41:35.871198+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:41:35.872360+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:41:35.873760+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:41:53.997298+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:41:53.998512+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:41:53.998630+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:41:53.998707+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:41:53.999367+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:41:54.002651+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:41:54.005163+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:41:54.005883+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:41:54.006002+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:41:54.009837+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:41:54.011457+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:41:54.012298+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:41:54.012986+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:41:54.013474+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:41:54.013855+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:41:54.014234+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:41:54.014597+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:41:54.014962+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:41:54.015281+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:41:54.015787+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:41:54.948590+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:41:54.949179+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:41:54.949226+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:41:54.949263+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:41:54.949940+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:41:54.953548+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:41:54.955660+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:41:54.956035+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:41:54.956097+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:41:54.959621+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:41:54.961243+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:41:54.962128+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:41:54.962893+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:41:54.963734+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:41:54.964633+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:41:54.965368+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:41:54.966024+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:41:54.966627+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:41:54.967159+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:41:54.967911+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:42:00.818151+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:42:00.819168+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:42:00.819242+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:00.819295+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:00.820221+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:00.823845+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:42:00.825612+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:00.825882+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:00.825920+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:00.829443+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:42:00.831314+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:42:00.832284+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:42:00.832922+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:42:00.833537+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:42:00.834218+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:42:00.835062+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:42:00.836198+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:42:00.837097+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:42:00.837928+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:42:00.839281+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:42:34.208642+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:42:34.209465+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:42:34.209531+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:34.209579+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:34.210253+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:34.213449+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:42:34.215210+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:34.215479+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:34.215515+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:34.219422+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:42:34.221149+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:42:34.221749+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:42:34.222231+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:42:34.222697+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:42:34.223257+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:42:34.223770+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:42:34.224239+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:42:34.224676+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:42:34.225127+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:42:34.225747+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:42:36.087975+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:42:36.088500+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:42:36.088539+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:36.088574+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:36.088942+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:36.090811+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:42:36.091907+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:36.092102+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:36.092146+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:36.095243+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:42:36.096683+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:42:36.097357+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:42:36.097880+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:42:36.098350+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:42:36.098824+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:42:36.099304+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:42:36.099858+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:42:36.100550+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:42:36.101303+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:42:36.102199+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:42:37.477224+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:42:37.477984+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:42:37.478038+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:37.478087+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:37.478679+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:37.481901+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:42:37.483787+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:37.484190+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:37.484268+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:37.488559+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:42:37.490507+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:42:37.491120+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:42:37.491599+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:42:37.492108+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:42:37.492617+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:42:37.493077+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:42:37.493601+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:42:37.494165+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:42:37.494717+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:42:37.495334+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T19:42:40.783005+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T19:42:40.789330+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:42:40.789394+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:40.789434+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:40.789947+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:40.790677+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:42:40.792351+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:40.792710+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:40.792770+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:42:40.797499+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T19:42:40.798613+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T19:43:43.226883+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T19:43:43.227692+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T19:43:43.227744+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:43:43.227784+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:43:43.228365+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:43:43.232243+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T19:43:43.235061+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:43:43.235460+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:43:43.235532+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T19:43:43.240539+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T19:43:43.242910+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T19:43:43.244160+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T19:43:43.245132+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T19:43:43.245803+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T19:43:43.246474+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T19:43:43.247057+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T19:43:43.247665+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T19:43:43.248247+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T19:43:43.248943+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T19:43:43.250108+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:11:17.444221+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:11:17.488489+02:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Could not find the entrypoints file from Webpack: the file "/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/public/build/entrypoints.json" does not exist.")." at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/templates/app/index.html.twig line 7 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Could not find the entrypoints file from Webpack: the file \"/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/public/build/entrypoints.json\" does not exist.\"). at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/templates/app/index.html.twig:7)\n[previous exception] [object] (InvalidArgumentException(code: 0): Could not find the entrypoints file from Webpack: the file \"/home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/public/build/entrypoints.json\" does not exist. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/webpack-encore-bundle/src/Asset/EntrypointLookup.php:124)"} []
[2020-04-21T21:11:17.548570+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:11:18.019732+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b3938d"},"request_uri":"http://localhost:8000/_wdt/b3938d","method":"GET"} []
[2020-04-21T21:11:23.470712+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:11:23.502617+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:11:24.860246+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"843494"},"request_uri":"http://localhost:8000/_wdt/843494","method":"GET"} []
[2020-04-21T21:11:25.040847+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:11:25.053152+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:11:25.053499+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:11:25.053847+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:11:25.071223+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:11:25.074143+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:11:29.429707+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:11:29.436053+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:11:30.103386+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"225643"},"request_uri":"http://localhost:8000/_wdt/225643","method":"GET"} []
[2020-04-21T21:11:44.449452+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:11:44.452683+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:11:44.452921+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:11:44.453062+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:11:44.454124+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:11:44.462510+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-21T21:11:44.463550+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-21T21:12:18.505018+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:12:18.508437+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:12:18.508628+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:12:18.508719+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:12:18.509318+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:12:18.513045+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-21T21:12:18.513321+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-21T21:12:30.924521+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T21:12:31.119365+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:12:31.414951+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-21T21:12:31.545850+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:12:31.547743+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:12:31.547890+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:12:31.548010+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:12:31.549620+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:12:31.556149+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:12:31.559768+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:12:31.560173+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:12:31.560230+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:12:31.606343+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T21:12:31.613244+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T21:12:31.615855+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T21:12:31.617982+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T21:12:31.619723+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T21:12:31.621255+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T21:12:31.622947+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T21:12:31.624822+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T21:12:31.625945+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T21:12:31.626858+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T21:12:31.632368+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:12:59.174103+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:12:59.176472+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:12:59.176650+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:12:59.176804+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:12:59.178835+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:12:59.193502+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:12:59.203452+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:12:59.204580+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:12:59.204779+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:12:59.222226+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T21:12:59.232251+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T21:12:59.235215+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T21:12:59.237507+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T21:12:59.240150+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T21:12:59.242696+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T21:12:59.246353+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T21:12:59.249908+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T21:12:59.252755+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T21:12:59.255619+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T21:12:59.259229+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:13:00.520867+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:13:00.522188+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:13:00.522305+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:00.522401+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:00.523467+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:00.528043+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:13:00.531325+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:00.531648+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:00.531701+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:00.538822+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T21:13:00.541308+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T21:13:00.542596+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T21:13:00.544371+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T21:13:00.546400+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T21:13:00.548414+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T21:13:00.550123+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T21:13:00.551240+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T21:13:00.552759+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T21:13:00.554114+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T21:13:00.555047+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:13:07.464543+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:13:07.466274+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:13:07.466405+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:07.466494+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:07.467408+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:07.472389+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:13:07.474672+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:07.475035+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:07.475092+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:07.480111+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T21:13:07.482233+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T21:13:07.482956+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T21:13:07.483535+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T21:13:07.484139+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T21:13:07.484803+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T21:13:07.485397+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T21:13:07.485982+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T21:13:07.486537+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T21:13:07.487201+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T21:13:07.488003+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:13:20.960319+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:13:20.962036+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:13:20.962138+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:20.962220+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:20.963211+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:20.970306+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:13:20.975426+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:20.976018+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:20.976107+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:20.984855+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T21:13:20.988279+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T21:13:20.989288+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T21:13:20.990110+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T21:13:20.990876+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T21:13:20.991631+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T21:13:20.992417+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T21:13:20.993382+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T21:13:20.994298+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T21:13:20.995229+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T21:13:20.996432+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:13:23.076910+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:13:23.077997+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:13:23.078080+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:23.078141+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:23.078975+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:23.084274+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:13:23.087250+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:23.088082+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:23.088259+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:23.097188+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T21:13:23.099539+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T21:13:23.100472+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T21:13:23.101157+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T21:13:23.101719+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T21:13:23.102311+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T21:13:23.102936+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T21:13:23.103590+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T21:13:23.104563+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T21:13:23.106353+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [100] []
[2020-04-21T21:13:23.109059+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:13:46.406775+02:00] request.INFO: Matched route "api_conferences_delete_item". {"route":"api_conferences_delete_item","route_parameters":{"_route":"api_conferences_delete_item","_controller":"api_platform.action.delete_item","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_item_operation_name":"delete","id":"100"},"request_uri":"http://localhost:8000/api/conferences/100","method":"DELETE"} []
[2020-04-21T21:13:46.408052+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:13:46.408146+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:46.408233+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:46.409187+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:46.414183+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:13:46.416676+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:46.417491+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:46.417595+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:13:46.433064+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ WHERE c0_.id = ? [100] []
[2020-04-21T21:13:46.439250+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T21:13:46.439913+02:00] doctrine.DEBUG: DELETE FROM conference WHERE id = ? [100] []
[2020-04-21T21:13:46.440762+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-21T21:14:36.813860+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:14:36.826411+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:14:37.443362+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4a2f52"},"request_uri":"http://localhost:8000/_wdt/4a2f52","method":"GET"} []
[2020-04-21T21:14:54.286302+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:14:54.296862+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:14:54.943329+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e76bde"},"request_uri":"http://localhost:8000/_wdt/e76bde","method":"GET"} []
[2020-04-21T21:15:27.770211+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:15:27.782015+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:15:28.495970+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"16ac0a"},"request_uri":"http://localhost:8000/_wdt/16ac0a","method":"GET"} []
[2020-04-21T21:15:31.286052+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:15:31.286795+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:15:31.286843+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:15:31.286884+02:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:15:31.287373+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:15:31.291197+02:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2020-04-21T21:15:31.291580+02:00] security.DEBUG: Calling Authentication entry point. [] []
[2020-04-21T21:15:36.616132+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T21:15:36.632782+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:15:36.932280+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-21T21:15:36.975948+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:15:36.976901+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:15:36.976978+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:15:36.977026+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:15:36.977662+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:15:36.981790+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:15:36.984798+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:15:36.985128+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:15:36.985198+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:15:36.990279+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T21:15:36.992959+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T21:15:36.993878+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T21:15:36.994688+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T21:15:36.995424+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T21:15:36.996212+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T21:15:36.997212+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T21:15:36.998358+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T21:15:36.999297+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T21:15:37.000349+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:15:39.339970+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T21:15:39.350839+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:15:39.350920+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:15:39.350978+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:15:39.351689+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:15:39.352872+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:15:39.356217+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:15:39.357312+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:15:39.357840+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:15:39.364781+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T21:15:39.365968+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T21:17:00.050321+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:17:00.063536+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:17:00.688650+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"43edbc"},"request_uri":"http://localhost:8000/_wdt/43edbc","method":"GET"} []
[2020-04-21T21:17:00.781382+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users?isAccepted=false","method":"GET"} []
[2020-04-21T21:17:00.786968+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:17:00.787136+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:00.787254+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:00.788754+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:00.791564+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:17:00.795923+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:00.796661+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:00.796835+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:00.809601+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ WHERE u0_.is_accepted = ? ORDER BY u0_.id ASC LIMIT 30 ["false"] []
[2020-04-21T21:17:00.813551+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ WHERE u0_.is_accepted = ? ["false"] []
[2020-04-21T21:17:15.101071+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:17:15.103849+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:17:15.104088+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:15.104357+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:15.108381+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:15.123538+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:17:15.133900+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:15.135531+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:15.135708+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:15.154698+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T21:17:15.162842+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T21:17:15.164926+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T21:17:15.167349+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T21:17:15.170143+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T21:17:15.172866+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T21:17:15.175322+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T21:17:15.178358+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T21:17:15.180899+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T21:17:15.184160+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:17:16.441180+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:17:16.442963+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:17:16.443070+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:16.443151+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:16.444066+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:16.448988+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:17:16.451512+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:16.451928+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:16.451999+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:16.462122+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T21:17:16.465769+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T21:17:16.466676+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T21:17:16.467376+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T21:17:16.468024+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T21:17:16.468688+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T21:17:16.469374+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T21:17:16.470193+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T21:17:16.471032+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T21:17:16.472213+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:17:22.321077+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:17:22.322632+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:17:22.322776+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:22.322874+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:22.323818+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:22.328450+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:17:22.330870+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:22.331229+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:22.331282+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:22.336308+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T21:17:22.340649+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T21:17:22.341738+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T21:17:22.343405+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T21:17:22.345075+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T21:17:22.346732+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T21:17:22.349127+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T21:17:22.350315+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T21:17:22.350884+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T21:17:22.351551+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:17:26.635504+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:17:26.636463+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:17:26.636566+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:26.636632+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:26.637387+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:26.641711+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:17:26.643538+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:26.643802+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:26.643842+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:26.651575+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T21:17:26.654683+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T21:17:26.655320+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T21:17:26.655775+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T21:17:26.656151+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T21:17:26.656546+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T21:17:26.656952+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T21:17:26.657373+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T21:17:26.657804+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T21:17:26.658453+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:17:42.551353+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:17:42.552483+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:17:42.552598+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:42.552676+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:42.553637+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:42.559277+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:17:42.562344+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:42.562705+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:42.562762+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:42.568230+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T21:17:42.571054+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T21:17:42.571890+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T21:17:42.572772+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T21:17:42.573427+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T21:17:42.574066+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T21:17:42.574661+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T21:17:42.575223+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T21:17:42.575862+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T21:17:42.576719+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:17:43.592384+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:17:43.595223+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:17:43.595440+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:43.595672+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:43.597696+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:43.607663+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:17:43.612063+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:43.612606+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:43.612718+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:43.623630+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T21:17:43.629401+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T21:17:43.632428+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T21:17:43.634873+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T21:17:43.635735+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T21:17:43.636556+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T21:17:43.637388+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T21:17:43.638263+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T21:17:43.639035+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T21:17:43.639918+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:17:46.502815+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:17:46.505191+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:17:46.505386+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:46.505519+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:46.507015+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:46.514224+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:17:46.518063+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:46.518689+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:46.518777+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:46.525270+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T21:17:46.527592+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T21:17:46.528538+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T21:17:46.529696+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T21:17:46.530698+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T21:17:46.531734+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T21:17:46.532509+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T21:17:46.533253+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T21:17:46.534006+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T21:17:46.534882+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:17:48.075971+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:17:48.078181+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:17:48.078388+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:48.078623+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:48.080315+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:48.091196+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:17:48.098231+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:48.099206+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:48.099431+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:17:48.119023+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T21:17:48.125342+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T21:17:48.127110+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T21:17:48.128869+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T21:17:48.130329+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T21:17:48.131771+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T21:17:48.133342+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T21:17:48.134944+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T21:17:48.137283+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T21:17:48.140947+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:18:18.415104+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:18:18.423557+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:18:18.920241+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"79d227"},"request_uri":"http://localhost:8000/_wdt/79d227","method":"GET"} []
[2020-04-21T21:18:18.962319+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:18:18.963991+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:18:18.964136+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:18:18.964242+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:18:18.965476+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:18:18.974822+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:18:18.981697+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:18:18.982653+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:18:18.982796+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:18:18.996805+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T21:18:19.000995+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T21:18:19.001936+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T21:18:19.002798+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T21:18:19.003779+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T21:18:19.004711+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T21:18:19.005737+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T21:18:19.006661+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T21:18:19.010574+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T21:18:19.013179+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:19:16.037806+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:19:16.039333+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:19:16.039426+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:19:16.039504+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:19:16.040403+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:19:16.044539+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:19:16.046130+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:19:16.046404+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:19:16.046440+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:19:16.050138+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T21:19:16.052056+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T21:19:16.052744+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T21:19:16.053228+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T21:19:16.053674+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T21:19:16.054132+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T21:19:16.054527+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T21:19:16.054920+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T21:19:16.055436+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T21:19:16.057380+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:30:40.284766+02:00] request.INFO: Matched route "api_users_post_collection". {"route":"api_users_post_collection","route_parameters":{"_route":"api_users_post_collection","_controller":"api_platform.action.post_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"post"},"request_uri":"http://localhost:8000/api/users","method":"POST"} []
[2020-04-21T21:30:40.285314+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:30:40.285351+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:30:40.285387+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:30:40.285870+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:30:40.286134+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:35:47.036060+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T21:35:47.036843+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T21:35:47.036890+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:35:47.036928+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:35:47.037501+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:35:47.041299+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T21:35:47.043598+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:35:47.043917+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:35:47.043964+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T21:35:47.049342+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T21:35:47.051530+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T21:35:47.052301+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T21:35:47.052987+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T21:35:47.053801+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T21:35:47.054669+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T21:35:47.055522+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T21:35:47.056353+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T21:35:47.057363+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T21:35:47.058547+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T21:35:51.712053+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:35:51.731686+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:35:52.967103+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"5a4d48"},"request_uri":"http://localhost:8000/_wdt/5a4d48","method":"GET"} []
[2020-04-21T21:38:36.539852+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:38:36.545810+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:38:37.119168+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"49e1fb"},"request_uri":"http://localhost:8000/_wdt/49e1fb","method":"GET"} []
[2020-04-21T21:38:38.935051+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:38:38.949342+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:38:39.541930+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"883221"},"request_uri":"http://localhost:8000/_wdt/883221","method":"GET"} []
[2020-04-21T21:38:41.232654+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:38:41.247004+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:38:42.378613+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c8de64"},"request_uri":"http://localhost:8000/_wdt/c8de64","method":"GET"} []
[2020-04-21T21:39:10.753124+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:39:10.767307+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:39:11.910562+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c97144"},"request_uri":"http://localhost:8000/_wdt/c97144","method":"GET"} []
[2020-04-21T21:39:12.033189+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T21:39:12.046011+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T21:39:12.642137+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e8be4f"},"request_uri":"http://localhost:8000/_wdt/e8be4f","method":"GET"} []
[2020-04-21T23:30:50.422316+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:30:50.460586+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:30:51.193142+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d79326"},"request_uri":"http://localhost:8000/_wdt/d79326","method":"GET"} []
[2020-04-21T23:30:52.236798+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:30:52.243838+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:30:52.243904+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:30:52.243952+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:30:52.248147+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:30:52.249458+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:25.221406+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:31:25.225460+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:31:25.718268+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"001170"},"request_uri":"http://localhost:8000/_wdt/001170","method":"GET"} []
[2020-04-21T23:31:26.266672+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:31:26.267513+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:31:26.267585+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:26.267638+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:26.268330+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:26.268694+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:38.875578+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:31:38.903310+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:31:38.903399+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:38.903445+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:38.904016+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:38.904327+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:41.759781+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:31:41.760343+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:31:41.760378+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:41.760411+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:41.760848+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:41.761131+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:42.602604+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:31:42.603322+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:31:42.603376+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:42.603418+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:42.604009+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:42.604400+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:43.418479+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:31:43.419611+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:31:43.419735+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:43.419847+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:43.421080+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:43.421593+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:44.935803+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:31:44.937248+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:31:44.937362+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:44.937456+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:44.938574+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:31:44.939069+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:32:26.549857+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:32:26.573079+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:32:27.077457+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"43fdb0"},"request_uri":"http://localhost:8000/_wdt/43fdb0","method":"GET"} []
[2020-04-21T23:32:28.427698+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:32:28.431225+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:32:28.431289+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:32:28.431335+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:32:28.431902+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:32:28.432189+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:32:31.066966+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:32:31.067652+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:32:31.067702+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:32:31.067741+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:32:31.068222+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:32:31.068508+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:32:34.253447+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:32:34.257388+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:32:34.257458+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:32:34.257504+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:32:34.258091+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:32:34.258640+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:32:39.197155+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:32:39.204340+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:32:39.585863+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0ce76b"},"request_uri":"http://localhost:8000/_wdt/0ce76b","method":"GET"} []
[2020-04-21T23:32:39.656346+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:32:39.659716+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:32:39.659804+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:32:39.659916+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:32:39.660602+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:32:39.660982+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:03.236172+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:36:03.245382+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:36:04.036057+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b7b8ab"},"request_uri":"http://localhost:8000/_wdt/b7b8ab","method":"GET"} []
[2020-04-21T23:36:04.197037+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:36:04.209554+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:36:04.209781+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:04.210027+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:04.211377+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:04.211846+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:06.121164+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:36:06.121992+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:36:06.122052+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:06.122106+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:06.122755+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\InvalidTokenException(code: 0): Invalid JWT Token at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:120)\n[previous exception] [object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\JWTDecodeFailureException(code: 0): Unable to verify the given JWT through the given configuration. If the \"lexik_jwt_authentication.encoder\" encryption options have been changed since your last authentication, please renew the token. If the problem persists, verify that the configured keys/passphrase are valid. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Encoder/LcobucciJWTEncoder.php:67)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:06.123071+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:11.606872+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T23:36:11.622570+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:36:11.896898+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-21T23:36:11.970852+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:36:11.971456+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:36:11.971500+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:11.971537+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:11.972178+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:11.975605+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:36:11.977967+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:11.978202+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:11.978240+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:12.011086+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:36:12.016278+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T23:36:12.017026+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T23:36:12.017642+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T23:36:12.018282+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T23:36:12.018884+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T23:36:12.019395+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T23:36:12.019800+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T23:36:12.020157+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T23:36:12.021553+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:36:13.785428+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:36:13.786209+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:36:13.786272+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:13.786314+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:13.786795+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:13.789413+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:36:13.790909+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:13.791162+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:13.791204+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:13.794964+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:36:13.796502+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T23:36:13.797174+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T23:36:13.797634+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T23:36:13.798086+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T23:36:13.798476+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T23:36:13.798914+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T23:36:13.799301+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T23:36:13.799716+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T23:36:13.800204+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:36:17.069536+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:36:17.073078+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:36:17.073142+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:17.073183+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:17.073705+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:17.074451+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:36:17.076338+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:17.076626+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:17.076666+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:17.080235+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:36:17.137014+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:36:17.138173+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:36:17.138732+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:36:17.139478+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:36:35.219004+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:36:35.220556+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:36:35.220655+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:35.220729+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:35.221755+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:35.227340+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:36:35.229855+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:35.230349+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:35.230444+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:35.235550+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:36:35.238003+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T23:36:35.238622+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T23:36:35.239017+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T23:36:35.239375+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T23:36:35.239732+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T23:36:35.240084+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T23:36:35.240477+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T23:36:35.240967+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T23:36:35.242004+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:36:52.317439+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:36:52.322566+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:36:53.144802+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"320959"},"request_uri":"http://localhost:8000/_wdt/320959","method":"GET"} []
[2020-04-21T23:36:53.175799+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:36:53.176606+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:36:53.176698+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:53.176783+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:53.177648+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:53.182984+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:36:53.184636+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:53.184863+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:53.184901+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:53.191531+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:36:53.194818+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T23:36:53.196469+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T23:36:53.199431+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T23:36:53.202108+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T23:36:53.204437+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T23:36:53.207142+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T23:36:53.209286+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T23:36:53.211307+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T23:36:53.212468+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:36:55.952688+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:36:55.956262+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:36:56.421321+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4ca1fb"},"request_uri":"http://localhost:8000/_wdt/4ca1fb","method":"GET"} []
[2020-04-21T23:36:56.473416+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:36:56.474169+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:36:56.474227+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:56.474304+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:56.475225+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:56.479617+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:36:56.482380+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:56.482864+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:56.482959+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:56.492218+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:36:56.497349+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T23:36:56.499460+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T23:36:56.501515+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T23:36:56.504103+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T23:36:56.505585+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T23:36:56.506641+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T23:36:56.508237+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T23:36:56.511303+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T23:36:56.515830+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:36:59.137715+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:36:59.138522+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:36:59.138572+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:59.138608+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:59.139098+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:59.143661+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:36:59.146047+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:59.146444+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:59.146561+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:36:59.151435+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:36:59.154364+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T23:36:59.155671+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T23:36:59.156679+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T23:36:59.157705+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T23:36:59.159262+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T23:36:59.160617+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T23:36:59.161786+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T23:36:59.163370+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T23:36:59.164812+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:37:01.466177+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:37:01.467186+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:37:01.467252+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:01.467296+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:01.467788+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:01.470784+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:37:01.472611+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:01.472871+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:01.472908+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:01.477090+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:37:01.478868+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T23:37:01.479690+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T23:37:01.480268+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T23:37:01.480845+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T23:37:01.481372+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T23:37:01.481889+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T23:37:01.482412+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T23:37:01.483069+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T23:37:01.483821+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:37:02.172980+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:37:02.173818+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:37:02.173894+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:02.173947+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:02.174605+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:02.178145+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:37:02.180113+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:02.180476+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:02.180517+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:02.184472+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:37:02.186408+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T23:37:02.187379+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T23:37:02.187948+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T23:37:02.188475+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T23:37:02.188976+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T23:37:02.189385+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T23:37:02.189789+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T23:37:02.190275+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T23:37:02.190936+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:37:05.413838+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:37:05.417655+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:37:05.417716+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:05.417755+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:05.418233+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:05.418947+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:37:05.420522+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:05.420798+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:05.420847+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:05.425502+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:37:05.429253+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:37:05.430620+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:37:05.431165+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:37:05.431868+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:37:45.442850+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:37:45.449395+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:37:45.923634+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"9d25c7"},"request_uri":"http://localhost:8000/_wdt/9d25c7","method":"GET"} []
[2020-04-21T23:37:45.955017+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:37:45.958233+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:37:45.958319+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:45.958381+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:45.958978+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:45.959699+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:37:45.962814+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:45.963837+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:45.963922+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:37:45.966656+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:37:45.970355+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:37:45.971645+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:37:45.972358+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:37:45.973343+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:38:03.970178+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:38:03.975748+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:38:04.396663+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3bb9a1"},"request_uri":"http://localhost:8000/_wdt/3bb9a1","method":"GET"} []
[2020-04-21T23:38:04.431531+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:38:04.434938+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:38:04.435043+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:38:04.435118+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:38:04.435687+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:38:04.436320+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:38:04.438054+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:38:04.438453+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:38:04.438524+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:38:04.445374+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:38:04.457893+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:38:04.461286+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:38:04.462695+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:38:04.463617+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:39:37.228755+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:39:37.235280+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:39:37.811700+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b09362"},"request_uri":"http://localhost:8000/_wdt/b09362","method":"GET"} []
[2020-04-21T23:39:38.278736+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:39:38.285432+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:39:38.285571+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:38.285620+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:38.287447+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:38.290986+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:39:38.297658+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:38.298392+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:38.298574+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:38.304663+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:39:38.312509+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:39:38.316227+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:39:38.316998+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:39:38.318047+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:39:46.384938+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:39:46.391962+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:39:46.841788+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"eae5a9"},"request_uri":"http://localhost:8000/_wdt/eae5a9","method":"GET"} []
[2020-04-21T23:39:46.918907+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:39:46.926636+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:39:46.926717+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:46.926765+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:46.927443+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:46.928373+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:39:46.931387+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:46.931862+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:46.931948+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:46.936681+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:39:46.946521+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:39:46.949705+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:39:46.951780+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:39:46.955238+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:39:50.359067+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:39:50.365764+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:39:50.757688+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7944f1"},"request_uri":"http://localhost:8000/_wdt/7944f1","method":"GET"} []
[2020-04-21T23:39:50.793431+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:39:50.799510+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:39:50.799598+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:50.799663+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:50.800494+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:50.802054+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:39:50.804546+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:50.805178+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:50.805299+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:50.810886+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:39:50.816956+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:39:50.819700+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:39:50.821593+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:39:50.825289+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:39:56.052037+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:39:56.060990+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:39:56.495289+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"75329c"},"request_uri":"http://localhost:8000/_wdt/75329c","method":"GET"} []
[2020-04-21T23:39:56.533605+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:39:56.541199+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:39:56.541409+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:56.541577+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:56.543851+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:56.547176+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:39:56.554253+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:56.555410+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:56.555634+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:39:56.560047+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:39:56.563788+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:39:56.565171+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:39:56.565754+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:39:56.566610+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:40:20.023652+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:40:20.027942+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:40:20.471109+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ee1e32"},"request_uri":"http://localhost:8000/_wdt/ee1e32","method":"GET"} []
[2020-04-21T23:40:20.503470+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:40:20.513511+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:40:20.513708+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:40:20.513849+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:40:20.515452+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:40:20.517775+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:40:20.520378+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:40:20.520726+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:40:20.520796+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:40:20.526803+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:40:20.532206+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:40:20.533809+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:40:20.535339+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:40:20.539898+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:40:32.945334+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:40:32.952203+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:40:33.368768+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"35c434"},"request_uri":"http://localhost:8000/_wdt/35c434","method":"GET"} []
[2020-04-21T23:40:33.404039+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:40:33.408337+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:40:33.408397+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:40:33.408437+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:40:33.408902+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:40:33.409624+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:40:33.411335+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:40:33.411638+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:40:33.411706+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:40:33.417167+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:40:33.425326+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:40:33.429809+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:40:33.431779+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:40:33.434835+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:40:45.420000+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:40:45.425353+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:40:45.831083+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c602cd"},"request_uri":"http://localhost:8000/_wdt/c602cd","method":"GET"} []
[2020-04-21T23:40:45.866818+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:40:45.871230+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:40:45.871345+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:40:45.871431+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:40:45.872653+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:40:45.875077+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:40:45.879395+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:40:45.880117+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:40:45.880312+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:40:45.891667+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:40:45.896196+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:40:45.897126+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:40:45.897602+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:40:45.899209+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:42:20.129603+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:42:20.151095+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:42:20.671541+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7e7d90"},"request_uri":"http://localhost:8000/_wdt/7e7d90","method":"GET"} []
[2020-04-21T23:42:20.810818+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:42:20.823738+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:42:20.823847+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:20.823915+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:20.824858+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:20.827727+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:42:20.834359+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:20.834929+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:20.835027+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:20.845929+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:42:20.852847+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:42:20.855901+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:42:20.858207+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:42:20.861801+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:42:37.068163+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:42:37.074809+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:42:37.363050+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2a22b4"},"request_uri":"http://localhost:8000/_wdt/2a22b4","method":"GET"} []
[2020-04-21T23:42:37.500349+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:42:37.514170+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:42:37.514376+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:37.514562+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:37.516698+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:37.518559+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:42:37.520932+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:37.521226+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:37.521282+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:37.525351+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:42:37.531992+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:42:37.534357+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:42:37.535868+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:42:37.538552+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:42:48.698219+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:42:48.702884+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:42:49.145062+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2b1d2b"},"request_uri":"http://localhost:8000/_wdt/2b1d2b","method":"GET"} []
[2020-04-21T23:42:49.206580+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:42:49.213286+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:42:49.213355+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:49.213397+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:49.213926+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:49.214694+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:42:49.217222+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:49.217808+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:49.217935+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:49.225411+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:42:49.232180+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:42:49.234458+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:42:49.235821+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:42:49.237953+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:42:53.180450+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:42:53.187575+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:42:53.630317+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fa6d7e"},"request_uri":"http://localhost:8000/_wdt/fa6d7e","method":"GET"} []
[2020-04-21T23:42:53.721225+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:42:53.728846+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:42:53.728959+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:53.729055+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:53.729994+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:53.731830+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:42:53.735358+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:53.735685+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:53.735737+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:42:53.742149+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:42:53.748885+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:42:53.751399+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:42:53.753347+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:42:53.758508+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:43:00.950312+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:43:00.958395+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:43:01.374984+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8b7a4d"},"request_uri":"http://localhost:8000/_wdt/8b7a4d","method":"GET"} []
[2020-04-21T23:43:01.518476+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:43:01.532756+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:43:01.532945+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:01.533107+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:01.535150+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:01.537241+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:43:01.543409+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:01.544860+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:01.545065+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:01.556089+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:43:01.563905+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:43:01.566494+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:43:01.568249+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:43:01.570270+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:43:07.694744+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:43:07.698906+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:43:08.143722+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b23ba9"},"request_uri":"http://localhost:8000/_wdt/b23ba9","method":"GET"} []
[2020-04-21T23:43:08.238185+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:43:08.245509+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:43:08.245664+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:08.245751+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:08.246871+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:08.248269+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:43:08.252176+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:08.253000+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:08.253189+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:08.261719+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:43:08.269793+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:43:08.274081+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:43:08.277005+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:43:08.288284+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:43:13.774967+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:43:13.776468+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:43:13.776586+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:13.776680+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:13.777833+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:13.783766+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:43:13.787655+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:13.788225+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:13.788319+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:13.795778+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:43:13.798754+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T23:43:13.799694+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T23:43:13.800576+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T23:43:13.801488+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T23:43:13.802359+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T23:43:13.803193+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T23:43:13.804014+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T23:43:13.804743+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T23:43:13.805574+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:43:15.272048+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:43:15.272507+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:43:15.272544+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:15.272578+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:15.272947+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:15.275259+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:43:15.276838+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:15.277048+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:15.277082+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:15.280209+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:43:15.281691+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T23:43:15.282142+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T23:43:15.282501+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T23:43:15.282835+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T23:43:15.283166+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T23:43:15.283645+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T23:43:15.284419+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T23:43:15.285099+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T23:43:15.286126+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:43:18.728611+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:43:18.729391+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:43:18.729452+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:18.729494+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:18.730018+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:18.733308+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:43:18.735349+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:18.735645+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:18.735692+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:18.739631+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:43:18.741591+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T23:43:18.742218+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T23:43:18.742660+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T23:43:18.743148+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T23:43:18.743692+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T23:43:18.744272+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T23:43:18.744861+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T23:43:18.745491+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T23:43:18.746361+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:43:24.720240+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:43:24.720908+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:43:24.720956+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:24.720993+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:24.721449+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:24.724552+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:43:24.726435+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:24.726733+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:24.726774+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:24.730674+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:43:24.732614+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T23:43:24.733620+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T23:43:24.734187+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T23:43:24.734592+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T23:43:24.735010+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T23:43:24.735341+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T23:43:24.735680+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T23:43:24.736024+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T23:43:24.736573+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:43:25.498859+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:43:25.499725+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:43:25.499792+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:25.499834+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:25.500317+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:25.503257+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:43:25.504643+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:25.504872+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:25.504910+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:25.508175+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:43:25.509599+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T23:43:25.510247+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T23:43:25.510758+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T23:43:25.511236+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T23:43:25.511800+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T23:43:25.512312+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T23:43:25.512816+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T23:43:25.513302+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T23:43:25.513925+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:43:31.545928+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:43:31.549244+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:43:31.549312+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:31.549354+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:31.550323+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:31.551812+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:43:31.554405+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:31.554750+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:31.554787+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:31.557847+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:43:31.560894+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:43:31.562655+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:43:31.563759+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:43:31.565436+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:43:40.879693+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:43:40.883501+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:43:41.097995+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"395603"},"request_uri":"http://localhost:8000/_wdt/395603","method":"GET"} []
[2020-04-21T23:43:41.142670+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:43:41.148362+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:43:41.148476+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:41.148544+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:41.149607+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:41.151114+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:43:41.155009+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:41.155474+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:41.155544+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:43:41.164663+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:43:41.174090+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:43:41.177003+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:43:41.178769+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:43:41.181313+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:46:25.080261+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T23:46:25.084358+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:46:25.277601+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-21T23:46:25.329881+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:46:25.330624+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:46:25.330687+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:25.330728+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:25.331618+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:25.334334+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:46:25.336267+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:25.336671+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:25.336735+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:25.341734+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:46:25.343968+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T23:46:25.345484+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T23:46:25.346276+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T23:46:25.347023+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T23:46:25.347609+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T23:46:25.348161+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T23:46:25.348869+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T23:46:25.349446+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T23:46:25.350073+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:46:30.484712+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:46:30.485595+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:46:30.485652+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:30.485710+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:30.486405+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:30.490537+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:46:30.492423+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:30.492677+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:30.492714+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:30.497319+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:46:30.499106+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T23:46:30.499875+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T23:46:30.500584+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T23:46:30.501278+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T23:46:30.501849+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T23:46:30.502378+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T23:46:30.502951+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T23:46:30.503415+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T23:46:30.504277+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:46:31.331398+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:46:31.332581+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:46:31.332679+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:31.332850+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:31.334304+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:31.337967+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:46:31.340614+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:31.341491+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:31.341670+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:31.346870+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:46:31.349384+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T23:46:31.350115+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T23:46:31.350706+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T23:46:31.351188+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T23:46:31.351644+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T23:46:31.352136+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T23:46:31.352634+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T23:46:31.353128+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T23:46:31.353707+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:46:36.783164+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:46:36.784023+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:46:36.784082+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:36.784121+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:36.784671+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:36.788958+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:46:36.791268+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:36.791577+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:36.791665+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:36.796019+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:46:36.797715+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [91] []
[2020-04-21T23:46:36.798383+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [93] []
[2020-04-21T23:46:36.799286+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [94] []
[2020-04-21T23:46:36.800464+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [95] []
[2020-04-21T23:46:36.801298+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [96] []
[2020-04-21T23:46:36.801965+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [97] []
[2020-04-21T23:46:36.802612+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [98] []
[2020-04-21T23:46:36.803362+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [99] []
[2020-04-21T23:46:36.804256+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:46:40.350475+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:46:40.353610+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:46:40.353673+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:40.353712+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:40.354222+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:40.355086+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:46:40.357437+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:40.357768+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:40.357830+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:40.360625+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:46:40.363729+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:46:40.365011+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:46:40.365721+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [10] []
[2020-04-21T23:46:40.366662+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:46:54.602083+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T23:46:54.617716+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T23:46:54.618098+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T23:46:54.618326+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T23:46:54.618442+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T23:46:54.618673+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T23:46:54.619042+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T23:46:54.619409+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T23:46:54.839092+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Giulia","2":"Eius non nostrum exercitat [...]","3":"2020-04-21T23:46:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:46:54.839495+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Enzo","2":"Odio qui sit explicabo vol [...]","3":"2020-04-21T23:46:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:46:54.839765+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Noé","2":"Dolorem quae et labore ass [...]","3":"2020-04-21T23:46:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:46:54.839962+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Senne","2":"Beatae modi est voluptatem [...]","3":"2020-04-21T23:46:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:46:54.840207+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Kobe","2":"Eligendi eligendi labore p [...]","3":"2020-04-21T23:46:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:46:54.840409+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Ruben","2":"Ipsam aut reprehenderit se [...]","3":"2020-04-21T23:46:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:46:54.840601+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Janne","2":"Ratione enim quam autem op [...]","3":"2020-04-21T23:46:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:46:54.840842+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Noémie","2":"Non perferendis animi numq [...]","3":"2020-04-21T23:46:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:46:54.841046+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Victor","2":"Velit non vitae modi labor [...]","3":"2020-04-21T23:46:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:46:54.841188+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Elena","2":"Itaque ipsam excepturi num [...]","3":"2020-04-21T23:46:54+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:46:54.841593+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"gauthier@hotmail.com","2":[],"3":"$argon2i$v=19$m=65536,t=4, [...]","4":"Boh","5":"Gauth","6":null,"7":null,"8":false} []
[2020-04-21T23:46:54.841822+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-21T23:46:55.962585+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:46:55.970966+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:46:56.221729+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3b420c"},"request_uri":"http://localhost:8000/_wdt/3b420c","method":"GET"} []
[2020-04-21T23:46:56.372602+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:46:56.380160+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:46:56.380312+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:56.380392+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:56.382191+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:56.385953+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:46:56.391437+02:00] security.INFO: Guard authentication failed. {"exception":"[object] (Lexik\\Bundle\\JWTAuthenticationBundle\\Exception\\UserNotFoundException(code: 0):  at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/lexik/jwt-authentication-bundle/Security/Guard/JWTTokenAuthenticator.php:158)","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:46:56.393130+02:00] security.DEBUG: The "Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:47:04.457669+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T23:47:04.464082+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:47:04.465489+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.com\" not found. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-21T23:47:10.805617+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T23:47:10.809636+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["robin@hotmail.com"] []
[2020-04-21T23:47:10.810652+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"robin@hotmail.com\" not found. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-21T23:47:14.899692+02:00] request.INFO: Matched route "home". {"route":"home","route_parameters":{"_route":"home","_controller":"App\\Controller\\AppController::index"},"request_uri":"http://localhost:8000/","method":"GET"} []
[2020-04-21T23:47:14.906528+02:00] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2020-04-21T23:47:15.088044+02:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2f1133"},"request_uri":"http://localhost:8000/_wdt/2f1133","method":"GET"} []
[2020-04-21T23:47:16.973178+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T23:47:16.980215+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:47:16.981504+02:00] security.INFO: Authentication request failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\BadCredentialsException(code: 0): Bad credentials. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/security-core/Authentication/Provider/UserAuthenticationProvider.php:67)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\UsernameNotFoundException(code: 0): User \"simon.mohimont@hotmail.com\" not found. at /home/robin/Documents/PHP/Projet_Dev_Web/abbottApp/vendor/symfony/doctrine-bridge/Security/User/EntityUserProvider.php:65)"} []
[2020-04-21T23:48:19.674839+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T23:48:19.691930+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T23:48:19.692182+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T23:48:19.692300+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T23:48:19.692396+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T23:48:19.692487+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T23:48:19.692668+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T23:48:19.692968+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T23:48:19.904678+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"robin@hotmail.com","2":[],"3":"$argon2i$v=19$m=65536,t=4, [...]","4":"Paquet","5":"Robin","6":null,"7":null,"8":true} []
[2020-04-21T23:48:19.905448+02:00] doctrine.DEBUG: UPDATE user SET email = ?, last_name = ?, first_name = ? WHERE id = ? ["simon.mohimont@hotmail.com","Mohi","Sim",12] []
[2020-04-21T23:48:19.906139+02:00] doctrine.DEBUG: UPDATE user SET email = ?, last_name = ?, first_name = ?, is_accepted = ? WHERE id = ? ["gauthier@hotmail.com","Boh","Gauth",false,12] []
[2020-04-21T23:48:19.907106+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference David","2":"Vel blanditiis consequatur [...]","3":"2020-04-21T23:48:19+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:48:19.907362+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Nicolas","2":"Recusandae sunt excepturi  [...]","3":"2020-04-21T23:48:19+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:48:19.907623+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Samuel","2":"Expedita sint qui illo atq [...]","3":"2020-04-21T23:48:19+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:48:19.907881+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Axelle","2":"Excepturi sunt sunt fugit  [...]","3":"2020-04-21T23:48:19+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:48:19.908136+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Juliette","2":"Aut est neque et quidem re [...]","3":"2020-04-21T23:48:19+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:48:19.908436+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Elias","2":"Autem aut ullam consequunt [...]","3":"2020-04-21T23:48:19+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:48:19.908635+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Baptiste","2":"Sed ut iste veritatis qui  [...]","3":"2020-04-21T23:48:19+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:48:19.908855+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Siebe","2":"Ex repudiandae tenetur ad  [...]","3":"2020-04-21T23:48:19+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:48:19.909019+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Clémence","2":"Alias ducimus et in maiore [...]","3":"2020-04-21T23:48:19+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:48:19.909150+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Arne","2":"Et et et ipsam quod. Repud [...]","3":"2020-04-21T23:48:19+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:48:19.909333+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-21T23:49:02.347758+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T23:49:02.364432+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T23:49:02.364808+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T23:49:02.365008+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T23:49:02.365223+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T23:49:02.365409+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T23:49:02.365722+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T23:49:02.366079+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T23:49:02.584464+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"gauthier@hotmail.com","2":[],"3":"$argon2i$v=19$m=65536,t=4, [...]","4":"Boh","5":"Gauth","6":null,"7":null,"8":false} []
[2020-04-21T23:49:02.585791+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Emiel","2":"Voluptatem autem voluptate [...]","3":"2020-04-21T23:49:02+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:02.586056+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Clara","2":"Cupiditate quis doloribus  [...]","3":"2020-04-21T23:49:02+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:02.586296+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Ethan","2":"Ut vel qui et est voluptas [...]","3":"2020-04-21T23:49:02+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:02.586461+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Anouk","2":"Explicabo facilis molestia [...]","3":"2020-04-21T23:49:02+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:02.586704+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Lander","2":"Inventore eum nihil ea deb [...]","3":"2020-04-21T23:49:02+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:02.586954+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Zoë","2":"Et iusto numquam et eum se [...]","3":"2020-04-21T23:49:02+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:02.587190+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Marion","2":"Officiis culpa officia eiu [...]","3":"2020-04-21T23:49:02+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:02.587388+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Zoë","2":"Ipsa tempora labore beatae [...]","3":"2020-04-21T23:49:02+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:02.587575+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Tuur","2":"Nobis illo accusamus labor [...]","3":"2020-04-21T23:49:02+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:02.587701+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Yana","2":"Deserunt omnis distinctio  [...]","3":"2020-04-21T23:49:02+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:02.587931+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-21T23:49:33.655986+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T23:49:33.673805+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T23:49:33.674176+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T23:49:33.674391+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T23:49:33.674574+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T23:49:33.674724+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T23:49:33.675008+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T23:49:33.675303+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T23:49:33.891755+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Lina","2":"Vel id rerum sed. Sint ut  [...]","3":"2020-04-21T23:49:33+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:33.892155+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Nora","2":"Quos ab atque et doloremqu [...]","3":"2020-04-21T23:49:33+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:33.892406+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Yanis","2":"Itaque quidem vel quam ut  [...]","3":"2020-04-21T23:49:33+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:33.892667+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Adam","2":"In maiores sunt debitis al [...]","3":"2020-04-21T23:49:33+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:33.892917+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Emiel","2":"Beatae qui et sequi volupt [...]","3":"2020-04-21T23:49:33+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:33.893137+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Sam","2":"Illo quibusdam ut odit num [...]","3":"2020-04-21T23:49:33+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:33.893335+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Yana","2":"Dolore et nisi rerum conse [...]","3":"2020-04-21T23:49:33+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:33.893497+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Pauline","2":"Est ratione aut assumenda  [...]","3":"2020-04-21T23:49:33+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:33.893638+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Lowie","2":"Molestias eum eligendi vel [...]","3":"2020-04-21T23:49:33+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:33.893794+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Lola","2":"Occaecati mollitia nobis d [...]","3":"2020-04-21T23:49:33+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:49:33.894221+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"gauthier@hotmail.com","2":[],"3":"$argon2i$v=19$m=65536,t=4, [...]","4":"Boh","5":"Gauth","6":null,"7":null,"8":false} []
[2020-04-21T23:49:33.894494+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-21T23:50:07.975539+02:00] doctrine.DEBUG: "START TRANSACTION" [] []
[2020-04-21T23:50:07.992234+02:00] doctrine.DEBUG: DELETE FROM `admin` [] []
[2020-04-21T23:50:07.992656+02:00] doctrine.DEBUG: DELETE FROM medecin [] []
[2020-04-21T23:50:07.992879+02:00] doctrine.DEBUG: DELETE FROM participant [] []
[2020-04-21T23:50:07.993064+02:00] doctrine.DEBUG: DELETE FROM speaker [] []
[2020-04-21T23:50:07.993218+02:00] doctrine.DEBUG: DELETE FROM user [] []
[2020-04-21T23:50:07.993575+02:00] doctrine.DEBUG: DELETE FROM conference [] []
[2020-04-21T23:50:07.993999+02:00] doctrine.DEBUG: DELETE FROM event [] []
[2020-04-21T23:50:08.211080+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Léa","2":"Voluptatem molestias est v [...]","3":"2020-04-21T23:50:08+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:50:08.211563+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Mathias","2":"Consequatur velit ut dicta [...]","3":"2020-04-21T23:50:08+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:50:08.211850+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Clara","2":"Placeat dolorem quo qui di [...]","3":"2020-04-21T23:50:08+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:50:08.212226+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Adam","2":"Cum ea sequi tenetur. Offi [...]","3":"2020-04-21T23:50:08+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:50:08.212583+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Elise","2":"Quibusdam quam commodi pla [...]","3":"2020-04-21T23:50:08+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:50:08.212862+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Roos","2":"Ipsam quis et et nihil vol [...]","3":"2020-04-21T23:50:08+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:50:08.213112+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Luna","2":"Quia qui dolores vel dolor [...]","3":"2020-04-21T23:50:08+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:50:08.213398+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Sander","2":"Quas quis veritatis quidem [...]","3":"2020-04-21T23:50:08+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:50:08.213691+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Jonas","2":"Id aut soluta sequi molest [...]","3":"2020-04-21T23:50:08+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:50:08.213848+02:00] doctrine.DEBUG: INSERT INTO conference (name, description, hour_start, hour_end, informations, room, event_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Conference Elena","2":"Ut cumque quisquam assumen [...]","3":"2020-04-21T23:50:08+02:00","4":null,"5":null,"6":null,"7":null} []
[2020-04-21T23:50:08.214293+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"robin@hotmail.com","2":[],"3":"$argon2i$v=19$m=65536,t=4, [...]","4":"Paquet","5":"Robin","6":null,"7":null,"8":true} []
[2020-04-21T23:50:08.214511+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"simon.mohimont@hotmail.com","2":[],"3":"$argon2i$v=19$m=65536,t=4, [...]","4":"Mohi","5":"Sim","6":null,"7":null,"8":true} []
[2020-04-21T23:50:08.214656+02:00] doctrine.DEBUG: INSERT INTO user (email, roles, password, last_name, first_name, telephone, addresse, is_accepted) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"gauthier@hotmail.com","2":[],"3":"$argon2i$v=19$m=65536,t=4, [...]","4":"Boh","5":"Gauth","6":null,"7":null,"8":false} []
[2020-04-21T23:50:08.214819+02:00] doctrine.DEBUG: "COMMIT" [] []
[2020-04-21T23:50:12.870058+02:00] request.INFO: Matched route "api_login_check". {"route":"api_login_check","route_parameters":{"_route":"api_login_check"},"request_uri":"http://localhost:8000/api/login_check","method":"POST"} []
[2020-04-21T23:50:12.875542+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:50:13.085099+02:00] security.INFO: User has been authenticated successfully. {"username":"simon.mohimont@hotmail.com"} []
[2020-04-21T23:50:13.159470+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:50:13.160116+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:50:13.160168+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:13.160207+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:13.160700+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:13.163213+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:50:13.165084+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:13.165412+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:13.165470+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:13.169244+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:50:13.171201+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [141] []
[2020-04-21T23:50:13.171949+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [142] []
[2020-04-21T23:50:13.172530+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [143] []
[2020-04-21T23:50:13.173231+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [144] []
[2020-04-21T23:50:13.173893+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [145] []
[2020-04-21T23:50:13.174552+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [146] []
[2020-04-21T23:50:13.175168+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [147] []
[2020-04-21T23:50:13.175761+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [148] []
[2020-04-21T23:50:13.176415+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [149] []
[2020-04-21T23:50:13.177112+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [150] []
[2020-04-21T23:50:13.177939+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:50:15.608824+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:50:15.612349+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:50:15.612425+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:15.612504+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:15.613002+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:15.613708+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:50:15.616143+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:15.616493+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:15.616542+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:15.620267+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:50:15.621045+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [15] []
[2020-04-21T23:50:15.622296+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [17] []
[2020-04-21T23:50:15.625986+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [15] []
[2020-04-21T23:50:15.627408+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [15] []
[2020-04-21T23:50:15.628277+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [15] []
[2020-04-21T23:50:15.629174+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [16] []
[2020-04-21T23:50:15.629888+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [16] []
[2020-04-21T23:50:15.630519+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [16] []
[2020-04-21T23:50:15.631486+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [17] []
[2020-04-21T23:50:15.632523+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [17] []
[2020-04-21T23:50:15.633187+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [17] []
[2020-04-21T23:50:15.633998+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
[2020-04-21T23:50:25.018615+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:50:25.019688+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:50:25.019770+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:25.019838+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:25.020958+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:25.025046+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:50:25.027087+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:25.027387+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:25.027428+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:25.031690+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:50:25.033558+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [141] []
[2020-04-21T23:50:25.034294+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [142] []
[2020-04-21T23:50:25.034903+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [143] []
[2020-04-21T23:50:25.035564+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [144] []
[2020-04-21T23:50:25.036210+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [145] []
[2020-04-21T23:50:25.036756+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [146] []
[2020-04-21T23:50:25.037285+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [147] []
[2020-04-21T23:50:25.037805+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [148] []
[2020-04-21T23:50:25.038315+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [149] []
[2020-04-21T23:50:25.038789+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [150] []
[2020-04-21T23:50:25.039579+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:50:26.392404+02:00] request.INFO: Matched route "api_conferences_get_collection". {"route":"api_conferences_get_collection","route_parameters":{"_route":"api_conferences_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\Conference","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/conferences","method":"GET"} []
[2020-04-21T23:50:26.393570+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:50:26.393676+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:26.393772+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:26.394734+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:26.398815+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:50:26.401145+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:26.401448+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:26.401500+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:26.406052+02:00] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.name AS name_1, c0_.description AS description_2, c0_.hour_start AS hour_start_3, c0_.hour_end AS hour_end_4, c0_.informations AS informations_5, c0_.room AS room_6, c0_.event_id AS event_id_7 FROM conference c0_ ORDER BY c0_.id ASC LIMIT 30 [] []
[2020-04-21T23:50:26.408189+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [141] []
[2020-04-21T23:50:26.409347+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [142] []
[2020-04-21T23:50:26.410379+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [143] []
[2020-04-21T23:50:26.411010+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [144] []
[2020-04-21T23:50:26.411514+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [145] []
[2020-04-21T23:50:26.412042+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [146] []
[2020-04-21T23:50:26.412577+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [147] []
[2020-04-21T23:50:26.413103+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [148] []
[2020-04-21T23:50:26.413638+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [149] []
[2020-04-21T23:50:26.414374+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.conference_id = ? [150] []
[2020-04-21T23:50:26.415490+02:00] doctrine.DEBUG: SELECT count(c0_.id) AS sclr_0 FROM conference c0_ [] []
[2020-04-21T23:50:29.377706+02:00] request.INFO: Matched route "api_users_get_collection". {"route":"api_users_get_collection","route_parameters":{"_route":"api_users_get_collection","_controller":"api_platform.action.get_collection","_format":null,"_api_resource_class":"App\\Entity\\User","_api_collection_operation_name":"get"},"request_uri":"http://localhost:8000/api/users","method":"GET"} []
[2020-04-21T23:50:29.381876+02:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"api","authenticators":1} []
[2020-04-21T23:50:29.381951+02:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:29.382002+02:00] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:29.382688+02:00] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"api","authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:29.383580+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4, t0.last_name AS last_name_5, t0.first_name AS first_name_6, t0.telephone AS telephone_7, t0.addresse AS addresse_8, t0.is_accepted AS is_accepted_9, t10.id AS id_11, t10.inami_number AS inami_number_12, t10.speciality AS speciality_13, t10.user_id AS user_id_14 FROM user t0 LEFT JOIN medecin t10 ON t10.user_id = t0.id WHERE t0.email = ? LIMIT 1 ["simon.mohimont@hotmail.com"] []
[2020-04-21T23:50:29.385487+02:00] security.INFO: Guard authentication successful! {"token":{"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Authentication\\Token\\JWTUserToken":"JWTUserToken(user=\"simon.mohimont@hotmail.com\", authenticated=true, roles=\"ROLE_USER\")"},"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:29.385748+02:00] security.DEBUG: Guard authenticator set no success response: request continues. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:29.385788+02:00] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"Lexik\\Bundle\\JWTAuthenticationBundle\\Security\\Guard\\JWTTokenAuthenticator"} []
[2020-04-21T23:50:29.388620+02:00] doctrine.DEBUG: SELECT u0_.id AS id_0, u0_.email AS email_1, u0_.roles AS roles_2, u0_.password AS password_3, u0_.last_name AS last_name_4, u0_.first_name AS first_name_5, u0_.telephone AS telephone_6, u0_.addresse AS addresse_7, u0_.is_accepted AS is_accepted_8 FROM user u0_ ORDER BY u0_.id ASC LIMIT 30 [] []
[2020-04-21T23:50:29.389354+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [15] []
[2020-04-21T23:50:29.389954+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.inami_number AS inami_number_2, t0.speciality AS speciality_3, t0.user_id AS user_id_4 FROM medecin t0 WHERE t0.user_id = ? [17] []
[2020-04-21T23:50:29.392672+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [15] []
[2020-04-21T23:50:29.393834+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [15] []
[2020-04-21T23:50:29.394404+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [15] []
[2020-04-21T23:50:29.395147+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [16] []
[2020-04-21T23:50:29.395799+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [16] []
[2020-04-21T23:50:29.396464+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [16] []
[2020-04-21T23:50:29.397471+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.responsabilities AS responsabilities_2, t0.user_id AS user_id_3, t0.event_id AS event_id_4 FROM admin t0 WHERE t0.user_id = ? [17] []
[2020-04-21T23:50:29.398338+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.description AS description_2, t0.user_id AS user_id_3, t0.conference_id AS conference_id_4 FROM speaker t0 WHERE t0.user_id = ? [17] []
[2020-04-21T23:50:29.398937+02:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.user_id AS user_id_2, t0.event_id AS event_id_3 FROM participant t0 WHERE t0.user_id = ? [17] []
[2020-04-21T23:50:29.399795+02:00] doctrine.DEBUG: SELECT count(u0_.id) AS sclr_0 FROM user u0_ [] []
